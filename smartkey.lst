

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Sat Feb 22 08:56:13 2020

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F685
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,delta=2
    12                           	psect	swtext1,local,class=CONST,delta=2
    13                           	psect	text506,local,class=CODE,delta=2
    14                           	psect	text507,local,class=CODE,delta=2
    15                           	psect	text508,local,class=CODE,delta=2
    16                           	psect	text509,local,class=CODE,delta=2
    17                           	psect	text510,local,class=CODE,delta=2
    18                           	psect	text511,local,class=CODE,delta=2
    19                           	psect	text512,local,class=CODE,delta=2
    20                           	psect	text513,local,class=CODE,delta=2
    21                           	psect	text514,local,class=CODE,delta=2
    22                           	psect	text515,local,class=CODE,delta=2
    23                           	psect	text516,local,class=CODE,delta=2
    24                           	psect	text517,local,class=CODE,delta=2
    25                           	psect	text518,local,class=CODE,delta=2
    26                           	psect	text519,local,class=CODE,delta=2
    27                           	psect	text520,local,class=CODE,delta=2
    28                           	psect	text521,local,class=CODE,delta=2
    29                           	psect	text522,local,class=CODE,delta=2
    30                           	psect	text523,local,class=CODE,delta=2
    31                           	psect	text524,local,class=CODE,delta=2
    32                           	psect	text525,local,class=CODE,delta=2
    33                           	psect	text526,local,class=CODE,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	text527,local,class=CODE,delta=2
    36                           	psect	pa_nodes,global,class=CODE,delta=2
    37                           	dabs	1,0x19D,1
    38                           	dabs	1,0x19E,1
    39                           	dabs	1,0x19E,1
    40                           	dabs	1,0x19E,1
    41                           	dabs	1,0x18C,1
    42                           	dabs	1,0x19E,1
    43                           	dabs	1,0x19E,1
    44                           	dabs	1,0x19E,1
    45                           	dabs	1,0x19E,1
    46                           	dabs	1,0x19D,1
    47                           	dabs	1,0x19D,1
    48                           	dabs	1,0x19D,1
    49                           	dabs	1,0x19D,1
    50                           	dabs	1,0x19D,1
    51                           	dabs	1,0x18C,1
    52                           	dabs	1,0x7E,2
    53  000A                     
    54                           	psect	idataBANK0
    55  033B                     __pidataBANK0:	
    56                           
    57                           ;initializer for id_clear@F962
    58  033B  34FF               	retlw	255
    59  033C  34FF               	retlw	255
    60  033D  34FF               	retlw	255
    61  033E  34FF               	retlw	255
    62  033F  34FF               	retlw	255
    63                           
    64                           ;initializer for _buzFre
    65  0340  340C               	retlw	12
    66                           
    67                           ;initializer for _buffTag
    68  0341  3400               	retlw	0
    69  0342  3400               	retlw	0
    70  0343  3411               	retlw	17
    71  0344  340B               	retlw	11
    72  0345  344F               	retlw	79
    73  0346  3400               	retlw	0
    74  0347  3400               	retlw	0
    75  0348  3481               	retlw	129
    76  0349  342F               	retlw	47
    77  034A  3422               	retlw	34
    78  034B  3400               	retlw	0
    79  034C  3400               	retlw	0
    80  034D  347D               	retlw	125
    81  034E  3467               	retlw	103
    82  034F  3405               	retlw	5
    83  0350  3400               	retlw	0
    84  0351  3400               	retlw	0
    85  0352  347E               	retlw	126
    86  0353  3431               	retlw	49
    87  0354  34E7               	retlw	231
    88  0355  3400               	retlw	0
    89  0356  3400               	retlw	0
    90  0357  347E               	retlw	126
    91  0358  3451               	retlw	81
    92  0359  34E6               	retlw	230
    93  019D                     _PSTRCON	set	413	;_PSTRCON
    94  019E                     _SRCON	set	414	;_SRCON
    95  0CF5                     _C1SEN	set	3317	;_C1SEN
    96  0CF4                     _C2REN	set	3316	;_C2REN
    97  0C67                     _EEPGD	set	3175	;_EEPGD
    98  0CF2                     _PULSR	set	3314	;_PULSR
    99  0CF3                     _PULSS	set	3315	;_PULSS
   100  0CF6                     _SR0	set	3318	;_SR0
   101  0CF7                     _SR1	set	3319	;_SR1
   102  0CE8                     _STRA	set	3304	;_STRA
   103  0CE9                     _STRB	set	3305	;_STRB
   104  0CEA                     _STRC	set	3306	;_STRC
   105  0CEB                     _STRD	set	3307	;_STRD
   106  0CEC                     _STRSYNC	set	3308	;_STRSYNC
   107  0C62                     _WREN	set	3170	;_WREN
   108  0015                     _EPWM1CON	set	21
   109  0013                     _EPWMR1L	set	19
   110  000B                     _INTCON	set	11
   111  000C                     _PIR1	set	12
   112  0005                     _PORTA	set	5
   113  0007                     _PORTC	set	7
   114  0016                     _PWM1CON	set	22
   115  0010                     _T1CON	set	16
   116  0012                     _T2CON	set	18
   117  0001                     _TMR0	set	1
   118  000F                     _TMR1H	set	15
   119  000E                     _TMR1L	set	14
   120  0011                     _TMR2	set	17
   121  0067                     _EEIF	set	103
   122  005F                     _GIE	set	95
   123  005E                     _PEIE	set	94
   124  002B                     _RA3	set	43
   125  002C                     _RA4	set	44
   126  0038                     _RC0	set	56
   127  005D                     _T0IE	set	93
   128  005A                     _T0IF	set	90
   129  0060                     _TMR1IF	set	96
   130  0080                     _TMR1ON	set	128
   131  0061                     _TMR2IF	set	97
   132  009B                     _EEADR	set	155
   133  009C                     _EECON1	set	156
   134  009A                     _EEDAT	set	154
   135  0090                     _EPWM1AUX	set	144
   136  0081                     _OPTION	set	129
   137  008F                     _OSCCON	set	143
   138  008C                     _PIE1	set	140
   139  0092                     _PR2	set	146
   140  0085                     _TRISA	set	133
   141  0087                     _TRISC	set	135
   142  0095                     _WPUA	set	149
   143  0088                     _WPUC	set	136
   144  047A                     _HTS	set	1146
   145  04E0                     _RD	set	1248
   146  0460                     _TMR1IE	set	1120
   147  0461                     _TMR2IE	set	1121
   148  04E8                     _WR	set	1256
   149                           
   150                           	psect	cinit
   151  03E0                     start_initialization:	
   152  03E0  303F               	movlw	low (__pdataBANK0+31)
   153                           
   154                           ; Clear objects allocated to BANK0
   155  03E1  01D9               	clrf	__pbssBANK0& (0+127)
   156  03E2  01DA               	clrf	(__pbssBANK0+1)& (0+127)
   157  03E3  01DB               	clrf	(__pbssBANK0+2)& (0+127)
   158  03E4  01DC               	clrf	(__pbssBANK0+3)& (0+127)
   159  03E5  01DD               	clrf	(__pbssBANK0+4)& (0+127)
   160  03E6  01DE               	clrf	(__pbssBANK0+5)& (0+127)
   161  03E7  01DF               	clrf	(__pbssBANK0+6)& (0+127)
   162  03E8  01E0               	clrf	(__pbssBANK0+7)& (0+127)
   163  03E9  01E1               	clrf	(__pbssBANK0+8)& (0+127)
   164  03EA  01E2               	clrf	(__pbssBANK0+9)& (0+127)
   165                           
   166                           ; Initialize objects allocated to BANK0
   167  03EB  1383               	bcf	3,7	;select IRP bank0
   168  03EC  00FD               	movwf	125
   169  03ED  3003               	movlw	high __pidataBANK0
   170  03EE  00FE               	movwf	126
   171  03EF  303B               	movlw	low __pidataBANK0
   172  03F0  00FF               	movwf	127
   173  03F1  3020               	movlw	low __pdataBANK0
   174  03F2  0084               	movwf	4
   175  03F3  2450               	fcall	init_ram
   176  03F4                     end_of_initialization:	
   177                           ;End of C runtime variable initialization code
   178                           
   179  03F4  0183               	clrf	3
   180  03F5  2958               	ljmp	_main	;jump to C main() function
   181                           
   182                           	psect	bssBANK0
   183  0059                     __pbssBANK0:	
   184  0059                     _timeOut:	
   185  0059                     	ds	2
   186  005B                     _timeTick:	
   187  005B                     	ds	2
   188  005D                     _mtState:	
   189  005D                     	ds	1
   190  005E                     _keyID:	
   191  005E                     	ds	5
   192                           
   193                           	psect	dataBANK0
   194  0020                     __pdataBANK0:	
   195  0020                     id_clear@F962:	
   196  0020                     	ds	5
   197  0025                     _buzFre:	
   198  0025                     	ds	1
   199  0026                     _buffTag:	
   200  0026                     	ds	25
   201                           
   202                           	psect	inittext
   203  044C                     init_fetch:	
   204                           ;	Called with low address in FSR and high address in W
   205                           
   206  044C  087E               	movf	126,w
   207  044D  008A               	movwf	10
   208  044E  087F               	movf	127,w
   209  044F  0082               	movwf	2
   210  0450                     init_ram:	
   211                           ;Called with:
   212                           ;	high address of idata address in btemp 
   213                           ;	low address of idata address in btemp+1 
   214                           ;	low address of data in FSR
   215                           ;	high address + 1 of data in btemp-1
   216                           
   217  0450  244C               	fcall	init_fetch
   218  0451  0080               	movwf	0
   219  0452  0A84               	incf	4,f
   220  0453  0804               	movf	4,w
   221  0454  067D               	xorwf	125,w
   222  0455  1903               	btfsc	3,2
   223  0456  3400               	retlw	0
   224  0457  0AFF               	incf	127,f
   225  0458  1903               	btfsc	3,2
   226  0459  0AFE               	incf	126,f
   227  045A  2C50               	goto	init_ram
   228                           
   229                           	psect	cstackCOMMON
   230  0070                     __pcstackCOMMON:	
   231  0070                     ?_sys_init:	
   232  0070                     ?_gpio_init:	
   233                           ; 0 bytes @ 0x0
   234                           
   235  0070                     ?_timer_init:	
   236                           ; 0 bytes @ 0x0
   237                           
   238  0070                     ?_int_init:	
   239                           ; 0 bytes @ 0x0
   240                           
   241  0070                     ?_SET_EPWM_ON:	
   242                           ; 0 bytes @ 0x0
   243                           
   244  0070                     ?_delay_x10ms:	
   245                           ; 0 bytes @ 0x0
   246                           
   247  0070                     ?_ISR:	
   248                           ; 0 bytes @ 0x0
   249                           
   250  0070                     ??_ISR:	
   251                           ; 0 bytes @ 0x0
   252                           
   253  0070                     ?_main:	
   254                           ; 0 bytes @ 0x0
   255                           
   256  0070                     ?_eepromReadByte:	
   257                           ; 0 bytes @ 0x0
   258                           
   259  0070                     ?_get_RFID:	
   260                           ; 1 bytes @ 0x0
   261                           
   262                           
   263                           ; 1 bytes @ 0x0
   264  0070                     	ds	2
   265  0072                     ??_sys_init:	
   266  0072                     ??_gpio_init:	
   267                           ; 0 bytes @ 0x2
   268                           
   269  0072                     ??_timer_init:	
   270                           ; 0 bytes @ 0x2
   271                           
   272  0072                     ??_int_init:	
   273                           ; 0 bytes @ 0x2
   274                           
   275  0072                     ??_eepromReadByte:	
   276                           ; 0 bytes @ 0x2
   277                           
   278  0072                     ?_eepromWriteByte:	
   279                           ; 0 bytes @ 0x2
   280                           
   281  0072                     ??_SET_EPWM_ON:	
   282                           ; 0 bytes @ 0x2
   283                           
   284  0072                     ??_delay_x10ms:	
   285                           ; 0 bytes @ 0x2
   286                           
   287  0072                     ?_setState:	
   288                           ; 0 bytes @ 0x2
   289                           
   290  0072                     ?_comArr:	
   291                           ; 0 bytes @ 0x2
   292                           
   293  0072                     ?___bmul:	
   294                           ; 1 bytes @ 0x2
   295                           
   296  0072                     ?___lbdiv:	
   297                           ; 1 bytes @ 0x2
   298                           
   299  0072                     ?_timerOut:	
   300                           ; 1 bytes @ 0x2
   301                           
   302  0072                     eepromReadByte@EEAddr:	
   303                           ; 2 bytes @ 0x2
   304                           
   305  0072                     eepromWriteByte@EEData:	
   306                           ; 1 bytes @ 0x2
   307                           
   308  0072                     comArr@arr2:	
   309                           ; 1 bytes @ 0x2
   310                           
   311  0072                     ___bmul@multiplicand:	
   312                           ; 1 bytes @ 0x2
   313                           
   314  0072                     ___lbdiv@divisor:	
   315                           ; 1 bytes @ 0x2
   316                           
   317  0072                     timerOut@time:	
   318                           ; 1 bytes @ 0x2
   319                           
   320  0072                     setState@_tOut:	
   321                           ; 2 bytes @ 0x2
   322                           
   323                           
   324                           ; 2 bytes @ 0x2
   325  0072                     	ds	1
   326  0073                     ??_eepromWriteByte:	
   327  0073                     ??___bmul:	
   328                           ; 0 bytes @ 0x3
   329                           
   330  0073                     ??___lbdiv:	
   331                           ; 0 bytes @ 0x3
   332                           
   333  0073                     eepromReadByte@ReEepromData:	
   334                           ; 0 bytes @ 0x3
   335                           
   336  0073                     comArr@len1:	
   337                           ; 1 bytes @ 0x3
   338                           
   339  0073                     ___bmul@product:	
   340                           ; 1 bytes @ 0x3
   341                           
   342  0073                     ___lbdiv@dividend:	
   343                           ; 1 bytes @ 0x3
   344                           
   345                           
   346                           ; 1 bytes @ 0x3
   347  0073                     	ds	1
   348  0074                     ?_eepromReadBlock:	
   349  0074                     ??_timerOut:	
   350                           ; 0 bytes @ 0x4
   351                           
   352  0074                     ??_setState:	
   353                           ; 0 bytes @ 0x4
   354                           
   355  0074                     eepromReadBlock@buff:	
   356                           ; 0 bytes @ 0x4
   357                           
   358  0074                     comArr@len2:	
   359                           ; 1 bytes @ 0x4
   360                           
   361  0074                     timerOut@Logic:	
   362                           ; 1 bytes @ 0x4
   363                           
   364  0074                     delay_x10ms@t:	
   365                           ; 1 bytes @ 0x4
   366                           
   367  0074                     setState@stt:	
   368                           ; 1 bytes @ 0x4
   369                           
   370  0074                     ___bmul@multiplier:	
   371                           ; 1 bytes @ 0x4
   372                           
   373  0074                     ___lbdiv@counter:	
   374                           ; 1 bytes @ 0x4
   375                           
   376                           
   377                           ; 1 bytes @ 0x4
   378  0074                     	ds	1
   379  0075                     ??_comArr:	
   380  0075                     ?_beep:	
   381                           ; 0 bytes @ 0x5
   382                           
   383  0075                     eepromReadBlock@len:	
   384                           ; 0 bytes @ 0x5
   385                           
   386  0075                     eepromWriteByte@EEAddr:	
   387                           ; 1 bytes @ 0x5
   388                           
   389  0075                     beep@rep:	
   390                           ; 1 bytes @ 0x5
   391                           
   392  0075                     ___lbdiv@quotient:	
   393                           ; 1 bytes @ 0x5
   394                           
   395  0075                     timerOut@CurTimer:	
   396                           ; 1 bytes @ 0x5
   397                           
   398                           
   399                           ; 2 bytes @ 0x5
   400  0075                     	ds	1
   401  0076                     ??_eepromReadBlock:	
   402  0076                     ?_eepromWriteBlock:	
   403                           ; 0 bytes @ 0x6
   404                           
   405  0076                     ??_beep:	
   406                           ; 0 bytes @ 0x6
   407                           
   408  0076                     eepromWriteBlock@buff:	
   409                           ; 0 bytes @ 0x6
   410                           
   411  0076                     beep@delay:	
   412                           ; 1 bytes @ 0x6
   413                           
   414                           
   415                           ; 1 bytes @ 0x6
   416  0076                     	ds	1
   417  0077                     ??_get_RFID:	
   418  0077                     eepromReadBlock@addStart:	
   419                           ; 0 bytes @ 0x7
   420                           
   421  0077                     eepromWriteBlock@len:	
   422                           ; 1 bytes @ 0x7
   423                           
   424                           
   425                           ; 1 bytes @ 0x7
   426  0077                     	ds	1
   427  0078                     ??_eepromWriteBlock:	
   428  0078                     eepromReadBlock@i:	
   429                           ; 0 bytes @ 0x8
   430                           
   431  0078                     comArr@arr1:	
   432                           ; 1 bytes @ 0x8
   433                           
   434                           
   435                           ; 1 bytes @ 0x8
   436  0078                     	ds	1
   437  0079                     eepromWriteBlock@addStart:	
   438  0079                     comArr@i:	
   439                           ; 1 bytes @ 0x9
   440                           
   441                           
   442                           ; 1 bytes @ 0x9
   443  0079                     	ds	1
   444  007A                     ?_id_search:	
   445  007A                     eepromWriteBlock@i:	
   446                           ; 1 bytes @ 0xA
   447                           
   448  007A                     id_search@buff:	
   449                           ; 1 bytes @ 0xA
   450                           
   451                           
   452                           ; 1 bytes @ 0xA
   453  007A                     	ds	1
   454  007B                     ??_id_search:	
   455  007B                     id_replate@id:	
   456                           ; 0 bytes @ 0xB
   457                           
   458                           
   459                           ; 1 bytes @ 0xB
   460  007B                     	ds	1
   461  007C                     ??_id_clear:	
   462                           
   463                           	psect	cstackBANK0
   464  003F                     __pcstackBANK0:	
   465                           ; 0 bytes @ 0xC
   466                           
   467  003F                     ?_id_replate:	
   468  003F                     id_search@id_input:	
   469                           ; 0 bytes @ 0x0
   470                           
   471  003F                     id_replate@Cont:	
   472                           ; 1 bytes @ 0x0
   473                           
   474  003F                     get_RFID@RF_serial_55bits:	
   475                           ; 1 bytes @ 0x0
   476                           
   477                           
   478                           ; 11 bytes @ 0x0
   479  003F                     	ds	1
   480  0040                     id_search@i:	
   481  0040                     id_replate@buff:	
   482                           ; 1 bytes @ 0x1
   483                           
   484                           
   485                           ; 1 bytes @ 0x1
   486  0040                     	ds	1
   487  0041                     ??_id_replate:	
   488                           
   489                           ; 0 bytes @ 0x2
   490  0041                     	ds	2
   491  0043                     ?_id_clear:	
   492  0043                     id_clear@idMax:	
   493                           ; 0 bytes @ 0x4
   494                           
   495                           
   496                           ; 1 bytes @ 0x4
   497  0043                     	ds	1
   498  0044                     id_clear@tmp:	
   499                           
   500                           ; 5 bytes @ 0x5
   501  0044                     	ds	5
   502  0049                     id_clear@idMin:	
   503                           
   504                           ; 1 bytes @ 0xA
   505  0049                     	ds	1
   506  004A                     get_RFID@flag_RFID_syn:	
   507                           
   508                           ; 1 bytes @ 0xB
   509  004A                     	ds	1
   510  004B                     get_RFID@even_col:	
   511                           
   512                           ; 1 bytes @ 0xC
   513  004B                     	ds	1
   514  004C                     get_RFID@even_row:	
   515                           
   516                           ; 1 bytes @ 0xD
   517  004C                     	ds	1
   518  004D                     get_RFID@j:	
   519                           
   520                           ; 1 bytes @ 0xE
   521  004D                     	ds	1
   522  004E                     get_RFID@i:	
   523                           
   524                           ; 1 bytes @ 0xF
   525  004E                     	ds	1
   526  004F                     get_RFID@flag_RFID_last:	
   527                           
   528                           ; 1 bytes @ 0x10
   529  004F                     	ds	1
   530  0050                     get_RFID@timeOutVal:	
   531                           
   532                           ; 2 bytes @ 0x11
   533  0050                     	ds	2
   534  0052                     get_RFID@ii:	
   535                           
   536                           ; 1 bytes @ 0x13
   537  0052                     	ds	1
   538  0053                     ??_main:	
   539                           
   540                           ; 0 bytes @ 0x14
   541  0053                     	ds	3
   542  0056                     main@idState:	
   543                           
   544                           ; 1 bytes @ 0x17
   545  0056                     	ds	1
   546  0057                     main@tmp:	
   547                           
   548                           ; 1 bytes @ 0x18
   549  0057                     	ds	1
   550  0058                     main@idop:	
   551                           
   552                           ; 1 bytes @ 0x19
   553  0058                     	ds	1
   554                           
   555                           	psect	maintext
   556  0158                     __pmaintext:	
   557 ;;Data sizes: Strings 0, constant 0, data 31, bss 10, persistent 0 stack 0
   558 ;;Auto spaces:   Size  Autos    Used
   559 ;; COMMON          14     12      12
   560 ;; BANK0           80     26      67
   561 ;; BANK1           32      0       0
   562 ;;
   563 ;; Pointer list with targets:
   564 ;; ?_timerOut	unsigned int  size(1) Largest target is 0
   565 ;;
   566 ;; id_replate@Cont	PTR unsigned char  size(1) Largest target is 5
   567 ;;		 -> id_clear@tmp(BANK0[5]), keyID(BANK0[5]), 
   568 ;;
   569 ;; id_replate@buff	PTR unsigned char  size(1) Largest target is 25
   570 ;;		 -> buffTag(BANK0[25]), 
   571 ;;
   572 ;; id_search@buff	PTR unsigned char  size(1) Largest target is 25
   573 ;;		 -> buffTag(BANK0[25]), 
   574 ;;
   575 ;; id_search@id_input	PTR unsigned char  size(1) Largest target is 5
   576 ;;		 -> keyID(BANK0[5]), 
   577 ;;
   578 ;; comArr@arr2	PTR unsigned char  size(1) Largest target is 25
   579 ;;		 -> buffTag(BANK0[25]), 
   580 ;;
   581 ;; comArr@arr1	PTR unsigned char  size(1) Largest target is 5
   582 ;;		 -> keyID(BANK0[5]), 
   583 ;;
   584 ;; eepromWriteBlock@buff	PTR unsigned char  size(1) Largest target is 25
   585 ;;		 -> buffTag(BANK0[25]), 
   586 ;;
   587 ;; eepromReadBlock@buff	PTR unsigned char  size(1) Largest target is 25
   588 ;;		 -> buffTag(BANK0[25]), 
   589 ;;
   590 ;;
   591 ;; Critical Paths under _main in COMMON
   592 ;;
   593 ;;   _main->_id_search
   594 ;;   _main->_id_replate
   595 ;;   _id_clear->_id_replate
   596 ;;   _id_replate->_eepromWriteBlock
   597 ;;   _beep->_delay_x10ms
   598 ;;   _eepromWriteBlock->_eepromWriteByte
   599 ;;   _id_search->_comArr
   600 ;;   _get_RFID->_timerOut
   601 ;;   _eepromReadBlock->_eepromReadByte
   602 ;;
   603 ;; Critical Paths under _ISR in COMMON
   604 ;;
   605 ;;   None.
   606 ;;
   607 ;; Critical Paths under _main in BANK0
   608 ;;
   609 ;;   _main->_get_RFID
   610 ;;   _id_clear->_id_replate
   611 ;;
   612 ;; Critical Paths under _ISR in BANK0
   613 ;;
   614 ;;   None.
   615 ;;
   616 ;; Critical Paths under _main in BANK1
   617 ;;
   618 ;;   None.
   619 ;;
   620 ;; Critical Paths under _ISR in BANK1
   621 ;;
   622 ;;   None.
   623 ;;
   624 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   625 ;;
   626 ;;
   627 ;;Call Graph Tables:
   628 ;;
   629 ;; ---------------------------------------------------------------------------------
   630 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   631 ;; ---------------------------------------------------------------------------------
   632 ;; (0) _main                                                 6     6      0    4517
   633 ;;                                             20 BANK0      6     6      0
   634 ;;                           _sys_init
   635 ;;                          _gpio_init
   636 ;;                         _timer_init
   637 ;;                           _int_init
   638 ;;                    _eepromWriteByte
   639 ;;                        _SET_EPWM_ON
   640 ;;                     _eepromReadByte
   641 ;;                    _eepromReadBlock
   642 ;;                           _setState
   643 ;;                           _get_RFID
   644 ;;                          _id_search
   645 ;;                           _id_clear
   646 ;;                               _beep
   647 ;;                         _id_replate
   648 ;; ---------------------------------------------------------------------------------
   649 ;; (1) _id_clear                                             7     6      1     718
   650 ;;                                              4 BANK0      7     6      1
   651 ;;                         _id_replate
   652 ;; ---------------------------------------------------------------------------------
   653 ;; (1) _id_replate                                           5     3      2     623
   654 ;;                                             11 COMMON     1     1      0
   655 ;;                                              0 BANK0      4     2      2
   656 ;;                             ___bmul
   657 ;;                   _eepromWriteBlock
   658 ;; ---------------------------------------------------------------------------------
   659 ;; (1) _beep                                                 2     1      1      66
   660 ;;                                              5 COMMON     2     1      1
   661 ;;                        _delay_x10ms
   662 ;; ---------------------------------------------------------------------------------
   663 ;; (2) _eepromWriteBlock                                     5     3      2     178
   664 ;;                                              6 COMMON     5     3      2
   665 ;;                    _eepromWriteByte
   666 ;; ---------------------------------------------------------------------------------
   667 ;; (1) _id_search                                            4     3      1     518
   668 ;;                                             10 COMMON     2     1      1
   669 ;;                                              0 BANK0      2     2      0
   670 ;;                             _comArr
   671 ;;                            ___lbdiv
   672 ;; ---------------------------------------------------------------------------------
   673 ;; (2) _delay_x10ms                                          3     3      0      22
   674 ;;                                              2 COMMON     3     3      0
   675 ;; ---------------------------------------------------------------------------------
   676 ;; (1) _get_RFID                                            21    21      0    1917
   677 ;;                                              7 COMMON     1     1      0
   678 ;;                                              0 BANK0     20    20      0
   679 ;;                           _timerOut
   680 ;;                            ___lbdiv
   681 ;; ---------------------------------------------------------------------------------
   682 ;; (3) _eepromWriteByte                                      4     3      1      44
   683 ;;                                              2 COMMON     4     3      1
   684 ;; ---------------------------------------------------------------------------------
   685 ;; (1) _eepromReadBlock                                      5     3      2     179
   686 ;;                                              4 COMMON     5     3      2
   687 ;;                     _eepromReadByte
   688 ;; ---------------------------------------------------------------------------------
   689 ;; (1) _sys_init                                             0     0      0       0
   690 ;; ---------------------------------------------------------------------------------
   691 ;; (2) ___lbdiv                                              4     3      1     162
   692 ;;                                              2 COMMON     4     3      1
   693 ;; ---------------------------------------------------------------------------------
   694 ;; (2) ___bmul                                               3     2      1      92
   695 ;;                                              2 COMMON     3     2      1
   696 ;; ---------------------------------------------------------------------------------
   697 ;; (1) _setState                                             3     1      2      44
   698 ;;                                              2 COMMON     3     1      2
   699 ;; ---------------------------------------------------------------------------------
   700 ;; (1) _SET_EPWM_ON                                          0     0      0       0
   701 ;; ---------------------------------------------------------------------------------
   702 ;; (2) _timerOut                                             5     3      2      90
   703 ;;                                              2 COMMON     5     3      2
   704 ;; ---------------------------------------------------------------------------------
   705 ;; (2) _comArr                                               8     5      3     222
   706 ;;                                              2 COMMON     8     5      3
   707 ;; ---------------------------------------------------------------------------------
   708 ;; (2) _eepromReadByte                                       2     2      0      45
   709 ;;                                              2 COMMON     2     2      0
   710 ;; ---------------------------------------------------------------------------------
   711 ;; (1) _int_init                                             0     0      0       0
   712 ;; ---------------------------------------------------------------------------------
   713 ;; (1) _timer_init                                           0     0      0       0
   714 ;; ---------------------------------------------------------------------------------
   715 ;; (1) _gpio_init                                            0     0      0       0
   716 ;; ---------------------------------------------------------------------------------
   717 ;; Estimated maximum stack depth 3
   718 ;; ---------------------------------------------------------------------------------
   719 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   720 ;; ---------------------------------------------------------------------------------
   721 ;; (5) _ISR                                                  2     2      0       0
   722 ;;                                              0 COMMON     2     2      0
   723 ;; ---------------------------------------------------------------------------------
   724 ;; Estimated maximum stack depth 5
   725 ;; ---------------------------------------------------------------------------------
   726 ;; Call Graph Graphs:
   727 ;; _main (ROOT)
   728 ;;   _sys_init
   729 ;;   _gpio_init
   730 ;;   _timer_init
   731 ;;   _int_init
   732 ;;   _eepromWriteByte
   733 ;;   _SET_EPWM_ON
   734 ;;   _eepromReadByte
   735 ;;   _eepromReadBlock
   736 ;;     _eepromReadByte
   737 ;;   _setState
   738 ;;   _get_RFID
   739 ;;     _timerOut
   740 ;;     ___lbdiv
   741 ;;   _id_search
   742 ;;     _comArr
   743 ;;     ___lbdiv
   744 ;;   _id_clear
   745 ;;     _id_replate
   746 ;;       ___bmul
   747 ;;       _eepromWriteBlock
   748 ;;         _eepromWriteByte
   749 ;;   _beep
   750 ;;     _delay_x10ms
   751 ;;   _id_replate
   752 ;;     ___bmul
   753 ;;     _eepromWriteBlock
   754 ;;       _eepromWriteByte
   755 ;;
   756 ;; _ISR (ROOT)
   757 ;;
   758 ;; Address spaces:
   759 ;;Name               Size   Autos  Total    Cost      Usage
   760 ;;SFR2                 0      0       0       5        0.0%
   761 ;;BITSFR2              0      0       0       5        0.0%
   762 ;;SFR1                 0      0       0       2        0.0%
   763 ;;BITSFR1              0      0       0       2        0.0%
   764 ;;BANK1               20      0       0       6        0.0%
   765 ;;BITBANK1            20      0       0       5        0.0%
   766 ;;CODE                 0      0       0       0        0.0%
   767 ;;DATA                 0      0      53       8        0.0%
   768 ;;ABS                  0      0      4F       7        0.0%
   769 ;;NULL                 0      0       0       0        0.0%
   770 ;;STACK                0      0       4       2        0.0%
   771 ;;BANK0               50     1A      43       4       83.8%
   772 ;;BITBANK0            50      0       0       3        0.0%
   773 ;;SFR0                 0      0       0       1        0.0%
   774 ;;BITSFR0              0      0       0       1        0.0%
   775 ;;COMMON               E      C       C       1       85.7%
   776 ;;BITCOMMON            E      0       0       0        0.0%
   777 ;;EEDATA              80      0       0       0        0.0%
   778                           
   779                           
   780 ;; *************** function _main *****************
   781 ;; Defined at:
   782 ;;		line 193 in file "MAIN.C"
   783 ;; Parameters:    Size  Location     Type
   784 ;;		None
   785 ;; Auto vars:     Size  Location     Type
   786 ;;  idop            1   25[BANK0 ] unsigned char 
   787 ;;  tmp             1   24[BANK0 ] unsigned char 
   788 ;;  idState         1   23[BANK0 ] unsigned char 
   789 ;; Return value:  Size  Location     Type
   790 ;;		None               void
   791 ;; Registers used:
   792 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   793 ;; Tracked objects:
   794 ;;		On entry : 17F/0
   795 ;;		On exit  : 60/0
   796 ;;		Unchanged: 0/0
   797 ;; Data sizes:     COMMON   BANK0   BANK1
   798 ;;      Params:         0       0       0
   799 ;;      Locals:         0       3       0
   800 ;;      Temps:          0       3       0
   801 ;;      Totals:         0       6       0
   802 ;;Total ram usage:        6 bytes
   803 ;; Hardware stack levels required when called:    5
   804 ;; This function calls:
   805 ;;		_sys_init
   806 ;;		_gpio_init
   807 ;;		_timer_init
   808 ;;		_int_init
   809 ;;		_eepromWriteByte
   810 ;;		_SET_EPWM_ON
   811 ;;		_eepromReadByte
   812 ;;		_eepromReadBlock
   813 ;;		_setState
   814 ;;		_get_RFID
   815 ;;		_id_search
   816 ;;		_id_clear
   817 ;;		_beep
   818 ;;		_id_replate
   819 ;; This function is called by:
   820 ;;		Startup code after reset
   821 ;; This function uses a non-reentrant model
   822 ;;
   823  0158                     _main:	
   824                           
   825                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   826  0158  3007               	movlw	7	;#
   827  0159  0099               	movwf	25	;#
   828                           
   829                           ;MAIN.C: 200: unsigned char idop,tmp,idState=0;
   830  015A  1283               	bcf	3,5	;RP0=0, select bank0
   831  015B  1303               	bcf	3,6	;RP1=0, select bank0
   832  015C  01D6               	clrf	main@idState
   833  015D  0064               	clrwdt	;#
   834                           
   835                           ;MAIN.C: 203: sys_init();
   836  015E  2483               	fcall	_sys_init
   837                           
   838                           ;MAIN.C: 204: gpio_init();
   839  015F  245B               	fcall	_gpio_init
   840                           
   841                           ;MAIN.C: 206: timer_init();
   842  0160  248D               	fcall	_timer_init
   843                           
   844                           ;MAIN.C: 207: int_init();
   845  0161  2408               	fcall	_int_init
   846                           
   847                           ;MAIN.C: 213: eepromWriteByte(0x7F,0xAA);
   848  0162  30AA               	movlw	170
   849  0163  00F2               	movwf	?_eepromWriteByte
   850  0164  307F               	movlw	127
   851  0165  22D7               	fcall	_eepromWriteByte
   852                           
   853                           ;MAIN.C: 214: eepromWriteByte(0x7F,0xAA);
   854  0166  30AA               	movlw	170
   855  0167  00F2               	movwf	?_eepromWriteByte
   856  0168  307F               	movlw	127
   857  0169  22D7               	fcall	_eepromWriteByte
   858                           
   859                           ;MAIN.C: 217: TRISC &=0xfe;
   860  016A  1683               	bsf	3,5	;RP0=1, select bank1
   861  016B  1303               	bcf	3,6	;RP1=0, select bank1
   862  016C  1007               	bcf	7,0	;volatile
   863                           
   864                           ;MAIN.C: 219: SET_EPWM_ON();
   865  016D  23C8               	fcall	_SET_EPWM_ON
   866                           
   867                           ;MAIN.C: 223: _delay((unsigned long)((20)*(8000000/4000.0)));
   868  016E  3034               	movlw	52
   869  016F  1283               	bcf	3,5	;RP0=0, select bank0
   870  0170  00D4               	movwf	??_main+1
   871  0171  30F1               	movlw	241
   872  0172  00D3               	movwf	??_main
   873  0173                     u1797:	
   874  0173  0BD3               	decfsz	??_main,f
   875  0174  2973               	goto	u1797
   876  0175  0BD4               	decfsz	??_main+1,f
   877  0176  2973               	goto	u1797
   878  0177  2978               	nop2
   879                           
   880                           ;MAIN.C: 228: if(eepromReadByte(0x06)!=0){
   881  0178  3006               	movlw	6
   882  0179  2497               	fcall	_eepromReadByte
   883  017A  3A00               	xorlw	0
   884  017B  1903               	skipnz
   885  017C  298F               	goto	l5790
   886  017D  3006               	movlw	6
   887                           
   888                           ;MAIN.C: 232: eepromWriteByte(0x06,0);
   889  017E  01F2               	clrf	?_eepromWriteByte
   890  017F  22D7               	fcall	_eepromWriteByte
   891  0180  3007               	movlw	7
   892                           
   893                           ;MAIN.C: 233: eepromWriteByte(0x06+1,0);
   894  0181  01F2               	clrf	?_eepromWriteByte
   895  0182  22D7               	fcall	_eepromWriteByte
   896                           
   897                           ;MAIN.C: 234: eepromWriteByte(0x06+2,0xc7);
   898  0183  30C7               	movlw	199
   899  0184  00F2               	movwf	?_eepromWriteByte
   900  0185  3008               	movlw	8
   901  0186  22D7               	fcall	_eepromWriteByte
   902                           
   903                           ;MAIN.C: 235: eepromWriteByte(0x06+3,0xee);
   904  0187  30EE               	movlw	238
   905  0188  00F2               	movwf	?_eepromWriteByte
   906  0189  3009               	movlw	9
   907  018A  22D7               	fcall	_eepromWriteByte
   908                           
   909                           ;MAIN.C: 236: eepromWriteByte(0x06+4,0xc7);
   910  018B  30C7               	movlw	199
   911  018C  00F2               	movwf	?_eepromWriteByte
   912  018D  300A               	movlw	10
   913  018E  22D7               	fcall	_eepromWriteByte
   914  018F                     l5790:	
   915                           
   916                           ;MAIN.C: 238: }
   917                           ;MAIN.C: 239: eepromReadBlock(0x06,buffTag,5*5);
   918  018F  3026               	movlw	_buffTag& (0+255)
   919  0190  00F4               	movwf	?_eepromReadBlock
   920  0191  3019               	movlw	25
   921  0192  00F5               	movwf	?_eepromReadBlock+1
   922  0193  3006               	movlw	6
   923  0194  241A               	fcall	_eepromReadBlock
   924                           
   925                           ;MAIN.C: 241: setState(1,45);
   926  0195  302D               	movlw	45
   927  0196  00F2               	movwf	?_setState
   928  0197  3001               	movlw	1
   929  0198  01F3               	clrf	?_setState+1
   930  0199  2478               	fcall	_setState
   931                           
   932                           ;MAIN.C: 245: tmp=0;
   933  019A  01D7               	clrf	main@tmp
   934  019B                     l5796:	
   935                           
   936                           ;MAIN.C: 249: idop = get_RFID();
   937  019B  200B               	fcall	_get_RFID
   938  019C  00D8               	movwf	main@idop
   939                           
   940                           ;MAIN.C: 251: if(idop){
   941  019D  0858               	movf	main@idop,w
   942  019E  1903               	btfsc	3,2
   943  019F  2A45               	goto	l5880
   944                           
   945                           ;MAIN.C: 252: idop = id_search(keyID,buffTag);
   946  01A0  3026               	movlw	_buffTag& (0+255)
   947  01A1  00FA               	movwf	?_id_search
   948  01A2  305E               	movlw	_keyID& (0+255)
   949  01A3  23AE               	fcall	_id_search
   950  01A4  00D8               	movwf	main@idop
   951                           
   952                           ;MAIN.C: 253: switch (mtState){
   953  01A5  2A2C               	goto	l5876
   954  01A6                     l5802:	
   955                           
   956                           ;MAIN.C: 255: case 2:
   957                           ;MAIN.C: 256: if((idop>1) && (idop <6))
   958  01A6  3002               	movlw	2
   959  01A7  0258               	subwf	main@idop,w
   960  01A8  1C03               	skipc
   961  01A9  29B3               	goto	l5808
   962  01AA  3006               	movlw	6
   963  01AB  0258               	subwf	main@idop,w
   964  01AC  1803               	skipnc
   965  01AD  29B3               	goto	l5808
   966  01AE  3000               	movlw	0
   967                           
   968                           ;MAIN.C: 257: {
   969                           ;MAIN.C: 258: setState(0,0);
   970  01AF  01F2               	clrf	?_setState
   971  01B0  01F3               	clrf	?_setState+1
   972  01B1  2478               	fcall	_setState
   973                           
   974                           ;MAIN.C: 260: }
   975  01B2  2A37               	goto	l3491
   976  01B3                     l5808:	
   977                           
   978                           ;MAIN.C: 261: else if(idop==1)
   979  01B3  0B58               	decfsz	main@idop,w
   980  01B4  2A37               	goto	l3491
   981                           
   982                           ;MAIN.C: 262: {
   983                           ;MAIN.C: 264: id_clear(2,5);
   984  01B5  3005               	movlw	5
   985  01B6  00C3               	movwf	?_id_clear
   986  01B7  3002               	movlw	2
   987  01B8  231B               	fcall	_id_clear
   988  01B9  3003               	movlw	3
   989                           
   990                           ;MAIN.C: 265: setState(3,0);
   991  01BA  01F2               	clrf	?_setState
   992  01BB  01F3               	clrf	?_setState+1
   993  01BC  2478               	fcall	_setState
   994  01BD  3003               	movlw	3
   995                           
   996                           ;MAIN.C: 266: tmp=1;
   997  01BE  01D7               	clrf	main@tmp
   998  01BF  0AD7               	incf	main@tmp,f
   999                           
  1000                           ;MAIN.C: 268: beep(10,3);
  1001  01C0  00F5               	movwf	?_beep
  1002  01C1  300A               	movlw	10
  1003  01C2  2394               	fcall	_beep
  1004  01C3  2A37               	goto	l3491
  1005  01C4                     l5818:	
  1006                           
  1007                           ;MAIN.C: 282: if(idop==1 && idState == 0){
  1008  01C4  0B58               	decfsz	main@idop,w
  1009  01C5  29D8               	goto	l5830
  1010  01C6  08D6               	movf	main@idState,f
  1011  01C7  1D03               	skipz
  1012  01C8  29D8               	goto	l5830
  1013                           
  1014                           ;MAIN.C: 284: id_clear(2,5);
  1015  01C9  3005               	movlw	5
  1016  01CA  00C3               	movwf	?_id_clear
  1017  01CB  3002               	movlw	2
  1018  01CC  231B               	fcall	_id_clear
  1019  01CD  3003               	movlw	3
  1020                           
  1021                           ;MAIN.C: 285: setState(3,0);
  1022  01CE  01F2               	clrf	?_setState
  1023  01CF  01F3               	clrf	?_setState+1
  1024  01D0  2478               	fcall	_setState
  1025  01D1  3003               	movlw	3
  1026                           
  1027                           ;MAIN.C: 286: tmp=1;
  1028  01D2  01D7               	clrf	main@tmp
  1029  01D3  0AD7               	incf	main@tmp,f
  1030                           
  1031                           ;MAIN.C: 288: beep(10,3);
  1032  01D4  00F5               	movwf	?_beep
  1033  01D5  300A               	movlw	10
  1034  01D6  2394               	fcall	_beep
  1035                           
  1036                           ;MAIN.C: 293: }
  1037  01D7  2A37               	goto	l3491
  1038  01D8                     l5830:	
  1039                           
  1040                           ;MAIN.C: 294: else if(idop==2 && idState == 0){
  1041  01D8  0858               	movf	main@idop,w
  1042  01D9  3A02               	xorlw	2
  1043  01DA  1D03               	skipz
  1044  01DB  2A37               	goto	l3491
  1045  01DC  08D6               	movf	main@idState,f
  1046  01DD  1D03               	skipz
  1047  01DE  2A37               	goto	l3491
  1048                           
  1049                           ;MAIN.C: 296: id_clear(3,5);
  1050  01DF  3005               	movlw	5
  1051  01E0  00C3               	movwf	?_id_clear
  1052  01E1  3003               	movlw	3
  1053  01E2  231B               	fcall	_id_clear
  1054  01E3  3005               	movlw	5
  1055                           
  1056                           ;MAIN.C: 297: setState(5,0);
  1057  01E4  01F2               	clrf	?_setState
  1058  01E5  01F3               	clrf	?_setState+1
  1059  01E6  2478               	fcall	_setState
  1060                           
  1061                           ;MAIN.C: 298: tmp=2;
  1062  01E7  3002               	movlw	2
  1063  01E8  00D7               	movwf	main@tmp
  1064                           
  1065                           ;MAIN.C: 300: beep(10,2);
  1066  01E9  00F5               	movwf	?_beep
  1067  01EA  300A               	movlw	10
  1068  01EB  2394               	fcall	_beep
  1069  01EC  2A37               	goto	l3491
  1070  01ED                     l5842:	
  1071                           
  1072                           ;MAIN.C: 309: if (idState == 0){
  1073  01ED  08D6               	movf	main@idState,f
  1074  01EE  1D03               	skipz
  1075  01EF  2A07               	goto	l5856
  1076                           
  1077                           ;MAIN.C: 316: if( idop !=1){
  1078  01F0  0358               	decf	main@idop,w
  1079  01F1  1903               	skipnz
  1080  01F2  2A37               	goto	l3491
  1081  01F3  3006               	movlw	6
  1082                           
  1083                           ;MAIN.C: 317: tmp++;
  1084  01F4  0AD7               	incf	main@tmp,f
  1085                           
  1086                           ;MAIN.C: 319: if(tmp <=5){
  1087  01F5  0257               	subwf	main@tmp,w
  1088  01F6  1803               	skipnc
  1089  01F7  2A37               	goto	l3491
  1090                           
  1091                           ;MAIN.C: 320: id_replate(tmp,keyID,buffTag);
  1092  01F8  305E               	movlw	_keyID& (0+255)
  1093  01F9  00BF               	movwf	?_id_replate
  1094  01FA  3026               	movlw	_buffTag& (0+255)
  1095  01FB  00C0               	movwf	?_id_replate+1
  1096  01FC  0857               	movf	main@tmp,w
  1097  01FD  229C               	fcall	_id_replate
  1098  01FE  300A               	movlw	10
  1099                           
  1100                           ;MAIN.C: 321: timeTick=0;
  1101  01FF  1283               	bcf	3,5	;RP0=0, select bank0
  1102  0200  1303               	bcf	3,6	;RP1=0, select bank0
  1103  0201  01DB               	clrf	_timeTick
  1104  0202  01DC               	clrf	_timeTick+1
  1105  0203  01F5               	clrf	?_beep
  1106  0204  0AF5               	incf	?_beep,f
  1107  0205  2394               	fcall	_beep
  1108  0206  2A37               	goto	l3491
  1109  0207                     l5856:	
  1110  0207  300A               	movlw	10
  1111                           
  1112                           ;MAIN.C: 335: beep(10,1);
  1113  0208  01F5               	clrf	?_beep
  1114  0209  0AF5               	incf	?_beep,f
  1115  020A  2394               	fcall	_beep
  1116  020B  2A37               	goto	l3491
  1117  020C                     l5858:	
  1118                           
  1119                           ;MAIN.C: 344: if(idState == 0){
  1120  020C  08D6               	movf	main@idState,f
  1121  020D  1D03               	skipz
  1122  020E  2A27               	goto	l5872
  1123                           
  1124                           ;MAIN.C: 345: if( idop >2){
  1125  020F  3003               	movlw	3
  1126  0210  0258               	subwf	main@idop,w
  1127  0211  1C03               	skipc
  1128  0212  2A37               	goto	l3491
  1129  0213  3006               	movlw	6
  1130                           
  1131                           ;MAIN.C: 346: tmp++;
  1132  0214  0AD7               	incf	main@tmp,f
  1133                           
  1134                           ;MAIN.C: 348: if(tmp <=5){
  1135  0215  0257               	subwf	main@tmp,w
  1136  0216  1803               	skipnc
  1137  0217  2A37               	goto	l3491
  1138                           
  1139                           ;MAIN.C: 349: id_replate(tmp,keyID,buffTag);
  1140  0218  305E               	movlw	_keyID& (0+255)
  1141  0219  00BF               	movwf	?_id_replate
  1142  021A  3026               	movlw	_buffTag& (0+255)
  1143  021B  00C0               	movwf	?_id_replate+1
  1144  021C  0857               	movf	main@tmp,w
  1145  021D  229C               	fcall	_id_replate
  1146  021E  300A               	movlw	10
  1147                           
  1148                           ;MAIN.C: 350: timeTick=0;
  1149  021F  1283               	bcf	3,5	;RP0=0, select bank0
  1150  0220  1303               	bcf	3,6	;RP1=0, select bank0
  1151  0221  01DB               	clrf	_timeTick
  1152  0222  01DC               	clrf	_timeTick+1
  1153  0223  01F5               	clrf	?_beep
  1154  0224  0AF5               	incf	?_beep,f
  1155  0225  2394               	fcall	_beep
  1156  0226  2A37               	goto	l3491
  1157  0227                     l5872:	
  1158  0227  300A               	movlw	10
  1159                           
  1160                           ;MAIN.C: 364: beep(10,1);
  1161  0228  01F5               	clrf	?_beep
  1162  0229  0AF5               	incf	?_beep,f
  1163  022A  2394               	fcall	_beep
  1164  022B  2A37               	goto	l3491
  1165  022C                     l5876:	
  1166  022C  085D               	movf	_mtState,w
  1167                           
  1168                           ; Switch size 1, requested type "space"
  1169                           ; Number of cases is 6, Range of values is 0 to 6
  1170                           ; switch strategies available:
  1171                           ; Name         Instructions Cycles
  1172                           ; direct_byte           13     6 (fixed)
  1173                           ; simple_byte           19    10 (average)
  1174                           ; jumptable            260     6 (fixed)
  1175                           ; rangetable            11     6 (fixed)
  1176                           ; spacedrange           20     9 (fixed)
  1177                           ; locatedrange           7     3 (fixed)
  1178                           ;	Chosen strategy is direct_byte
  1179  022D  0084               	movwf	4
  1180  022E  3007               	movlw	7
  1181  022F  0204               	subwf	4,w
  1182  0230  1803               	skipnc
  1183  0231  2A37               	goto	l3491
  1184  0232  3004               	movlw	high S5954
  1185  0233  008A               	movwf	10
  1186  0234  30A0               	movlw	low S5954
  1187  0235  0704               	addwf	4,w
  1188  0236  0082               	movwf	2
  1189  0237                     l3491:	
  1190  0237  309F               	movlw	159
  1191                           
  1192                           ;MAIN.C: 374: idState = 1;
  1193  0238  1283               	bcf	3,5	;RP0=0, select bank0
  1194  0239  1303               	bcf	3,6	;RP1=0, select bank0
  1195  023A  01D6               	clrf	main@idState
  1196  023B  0AD6               	incf	main@idState,f
  1197                           
  1198                           ;MAIN.C: 375: _delay((unsigned long)((61)*(8000000/4000.0)));
  1199  023C  00D4               	movwf	??_main+1
  1200  023D  306F               	movlw	111
  1201  023E  00D3               	movwf	??_main
  1202  023F                     u1807:	
  1203  023F  0BD3               	decfsz	??_main,f
  1204  0240  2A3F               	goto	u1807
  1205  0241  0BD4               	decfsz	??_main+1,f
  1206  0242  2A3F               	goto	u1807
  1207  0243  2A44               	nop2
  1208                           
  1209                           ;MAIN.C: 376: }
  1210  0244  2A52               	goto	l5884
  1211  0245                     l5880:	
  1212  0245  3002               	movlw	2
  1213                           
  1214                           ;MAIN.C: 377: else{
  1215                           ;MAIN.C: 378: idState =0;
  1216  0246  01D6               	clrf	main@idState
  1217                           
  1218                           ;MAIN.C: 379: _delay((unsigned long)((150)*(8000000/4000.0)));
  1219  0247  00D5               	movwf	??_main+2
  1220  0248  3086               	movlw	134
  1221  0249  00D4               	movwf	??_main+1
  1222  024A  3099               	movlw	153
  1223  024B  00D3               	movwf	??_main
  1224  024C                     u1817:	
  1225  024C  0BD3               	decfsz	??_main,f
  1226  024D  2A4C               	goto	u1817
  1227  024E  0BD4               	decfsz	??_main+1,f
  1228  024F  2A4C               	goto	u1817
  1229  0250  0BD5               	decfsz	??_main+2,f
  1230  0251  2A4C               	goto	u1817
  1231  0252                     l5884:	
  1232                           
  1233                           ;MAIN.C: 380: }
  1234                           ;MAIN.C: 384: if((timeOut!=0)&&( timeTick > timeOut)){
  1235  0252  1283               	bcf	3,5	;RP0=0, select bank0
  1236  0253  1303               	bcf	3,6	;RP1=0, select bank0
  1237  0254  085A               	movf	_timeOut+1,w
  1238  0255  0459               	iorwf	_timeOut,w
  1239  0256  1903               	skipnz
  1240  0257  2A7D               	goto	l5900
  1241  0258  085C               	movf	_timeTick+1,w
  1242  0259  025A               	subwf	_timeOut+1,w
  1243  025A  1D03               	skipz
  1244  025B  2A5E               	goto	u1745
  1245  025C  085B               	movf	_timeTick,w
  1246  025D  0259               	subwf	_timeOut,w
  1247  025E                     u1745:	
  1248  025E  1C03               	btfss	3,0
  1249  025F  2A72               	goto	l5898
  1250  0260  2A7D               	goto	l5900
  1251  0261                     l5890:	
  1252                           
  1253                           ;MAIN.C: 389: setState(2,220);
  1254  0261  30DC               	movlw	220
  1255  0262  00F2               	movwf	?_setState
  1256  0263  3002               	movlw	2
  1257  0264  01F3               	clrf	?_setState+1
  1258  0265  2478               	fcall	_setState
  1259                           
  1260                           ;MAIN.C: 391: break;
  1261  0266  2A7D               	goto	l5900
  1262  0267                     l5892:	
  1263                           
  1264                           ;MAIN.C: 393: setState(6,35);
  1265  0267  3023               	movlw	35
  1266  0268  00F2               	movwf	?_setState
  1267  0269  3006               	movlw	6
  1268  026A  01F3               	clrf	?_setState+1
  1269  026B  2478               	fcall	_setState
  1270                           
  1271                           ;MAIN.C: 394: break;
  1272  026C  2A7D               	goto	l5900
  1273  026D                     l5894:	
  1274  026D  3002               	movlw	2
  1275                           
  1276                           ;MAIN.C: 396: setState(2,0);
  1277  026E  01F2               	clrf	?_setState
  1278  026F  01F3               	clrf	?_setState+1
  1279  0270  2478               	fcall	_setState
  1280                           
  1281                           ;MAIN.C: 399: break;
  1282  0271  2A7D               	goto	l5900
  1283  0272                     l5898:	
  1284  0272  085D               	movf	_mtState,w
  1285                           
  1286                           ; Switch size 1, requested type "space"
  1287                           ; Number of cases is 3, Range of values is 1 to 6
  1288                           ; switch strategies available:
  1289                           ; Name         Instructions Cycles
  1290                           ; simple_byte           10     6 (average)
  1291                           ; direct_byte           15     9 (fixed)
  1292                           ; jumptable            263     9 (fixed)
  1293                           ;	Chosen strategy is simple_byte
  1294  0273  3A01               	xorlw	1	; case 1
  1295  0274  1903               	skipnz
  1296  0275  2A61               	goto	l5890
  1297  0276  3A03               	xorlw	3	; case 2
  1298  0277  1903               	skipnz
  1299  0278  2A67               	goto	l5892
  1300  0279  3A04               	xorlw	4	; case 6
  1301  027A  1903               	skipnz
  1302  027B  2A6D               	goto	l5894
  1303  027C  2A7D               	goto	l5900
  1304  027D                     l5900:	
  1305                           
  1306                           ;MAIN.C: 402: }
  1307                           ;MAIN.C: 405: if(mtState==0) RA3 = 1;
  1308  027D  08DD               	movf	_mtState,f
  1309  027E  1D03               	skipz
  1310  027F  2A82               	goto	l3516
  1311  0280  1585               	bsf	5,3
  1312  0281  2A83               	goto	l5904
  1313  0282                     l3516:	
  1314                           
  1315                           ;MAIN.C: 406: else RA3 =0;
  1316  0282  1185               	bcf	5,3
  1317  0283                     l5904:	
  1318                           
  1319                           ;MAIN.C: 435: if (mtState == 2) {
  1320  0283  085D               	movf	_mtState,w
  1321  0284  3A02               	xorlw	2
  1322  0285  1D03               	skipz
  1323  0286  2A96               	goto	l3518
  1324                           
  1325                           ;MAIN.C: 437: TMR1ON = 1; T0IE = 1;
  1326  0287  1410               	bsf	16,0
  1327  0288  168B               	bsf	11,5
  1328                           
  1329                           ;MAIN.C: 438: if (timeTick % 4 == 0) {
  1330  0289  085B               	movf	_timeTick,w
  1331  028A  3903               	andlw	3
  1332  028B  1D03               	btfss	3,2
  1333  028C  2A98               	goto	l5916
  1334                           
  1335                           ;MAIN.C: 440: if (buzFre == 0x6a) {
  1336  028D  0825               	movf	_buzFre,w
  1337  028E  3A6A               	xorlw	106
  1338  028F  1D03               	skipz
  1339  0290  2A93               	goto	l5914
  1340                           
  1341                           ;MAIN.C: 441: buzFre = 12;
  1342  0291  300C               	movlw	12
  1343  0292  2A94               	goto	L1
  1344  0293                     l5914:	
  1345                           ;MAIN.C: 442: } else {
  1346                           
  1347                           
  1348                           ;MAIN.C: 443: buzFre = 0x6a;
  1349  0293  306A               	movlw	106
  1350  0294                     L1:	
  1351  0294  00A5               	movwf	_buzFre
  1352  0295  2A98               	goto	l5916
  1353  0296                     l3518:	
  1354  0296  1010               	bcf	16,0
  1355  0297  128B               	bcf	11,5
  1356  0298                     l5916:	
  1357                           
  1358                           ;MAIN.C: 451: timeTick++;
  1359  0298  0ADB               	incf	_timeTick,f
  1360  0299  1903               	skipnz
  1361  029A  0ADC               	incf	_timeTick+1,f
  1362  029B  299B               	goto	l5796
  1363  029C                     __end_of_main:	
  1364                           
  1365                           	psect	swtext1
  1366  04A0                     __pswtext1:	
  1367  04A0                     S5954:	
  1368  04A0  2A37               	ljmp	l3491
  1369  04A1  29A6               	ljmp	l5802
  1370  04A2  29A6               	ljmp	l5802
  1371  04A3  29ED               	ljmp	l5842
  1372  04A4  2A37               	ljmp	l3491
  1373  04A5  2A0C               	ljmp	l5858
  1374  04A6  29C4               	ljmp	l5818
  1375                           
  1376                           	psect	text506
  1377  031B                     __ptext506:	
  1378 ;; =============== function _main ends ============
  1379                           
  1380                           
  1381 ;; *************** function _id_clear *****************
  1382 ;; Defined at:
  1383 ;;		line 177 in file "MAIN.C"
  1384 ;; Parameters:    Size  Location     Type
  1385 ;;  idMin           1    wreg     unsigned char 
  1386 ;;  idMax           1    4[BANK0 ] unsigned char 
  1387 ;; Auto vars:     Size  Location     Type
  1388 ;;  idMin           1   10[BANK0 ] unsigned char 
  1389 ;;  tmp             5    5[BANK0 ] unsigned char [5]
  1390 ;; Return value:  Size  Location     Type
  1391 ;;		None               void
  1392 ;; Registers used:
  1393 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1394 ;; Tracked objects:
  1395 ;;		On entry : 60/0
  1396 ;;		On exit  : 60/0
  1397 ;;		Unchanged: 0/0
  1398 ;; Data sizes:     COMMON   BANK0   BANK1
  1399 ;;      Params:         0       1       0
  1400 ;;      Locals:         0       6       0
  1401 ;;      Temps:          0       0       0
  1402 ;;      Totals:         0       7       0
  1403 ;;Total ram usage:        7 bytes
  1404 ;; Hardware stack levels used:    1
  1405 ;; Hardware stack levels required when called:    4
  1406 ;; This function calls:
  1407 ;;		_id_replate
  1408 ;; This function is called by:
  1409 ;;		_main
  1410 ;; This function uses a non-reentrant model
  1411 ;;
  1412  031B                     _id_clear:	
  1413                           
  1414                           ; Regs used in _id_clear: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1415                           ;id_clear@idMin stored from wreg
  1416  031B  00C9               	movwf	id_clear@idMin
  1417                           
  1418                           ;MAIN.C: 178: unsigned char tmp[5]={0xff,0xff,0xff,0xff,0xff};
  1419  031C  3044               	movlw	id_clear@tmp& (0+255)
  1420  031D  0084               	movwf	4
  1421  031E  0820               	movf	id_clear@F962,w
  1422  031F  1383               	bcf	3,7	;select IRP bank0
  1423  0320  0080               	movwf	0
  1424  0321  0A84               	incf	4,f
  1425  0322  0821               	movf	id_clear@F962+1,w
  1426  0323  0080               	movwf	0
  1427  0324  0A84               	incf	4,f
  1428  0325  0822               	movf	id_clear@F962+2,w
  1429  0326  0080               	movwf	0
  1430  0327  0A84               	incf	4,f
  1431  0328  0823               	movf	id_clear@F962+3,w
  1432  0329  0080               	movwf	0
  1433  032A  0A84               	incf	4,f
  1434  032B  0824               	movf	id_clear@F962+4,w
  1435  032C  0080               	movwf	0
  1436  032D                     l5760:	
  1437  032D  0849               	movf	id_clear@idMin,w
  1438  032E  0243               	subwf	id_clear@idMax,w
  1439  032F  1C03               	btfss	3,0
  1440  0330  0008               	return
  1441                           
  1442                           ;MAIN.C: 180: id_replate(idMin,tmp,buffTag);
  1443  0331  3044               	movlw	id_clear@tmp& (0+255)
  1444  0332  00BF               	movwf	?_id_replate
  1445  0333  3026               	movlw	_buffTag& (0+255)
  1446  0334  00C0               	movwf	?_id_replate+1
  1447  0335  0849               	movf	id_clear@idMin,w
  1448  0336  229C               	fcall	_id_replate
  1449  0337  1283               	bcf	3,5	;RP0=0, select bank0
  1450  0338  1303               	bcf	3,6	;RP1=0, select bank0
  1451  0339  0AC9               	incf	id_clear@idMin,f
  1452  033A  2B2D               	goto	l5760
  1453  033B                     __end_of_id_clear:	
  1454                           
  1455                           	psect	text507
  1456  029C                     __ptext507:	
  1457 ;; =============== function _id_clear ends ============
  1458                           
  1459                           
  1460 ;; *************** function _id_replate *****************
  1461 ;; Defined at:
  1462 ;;		line 163 in file "MAIN.C"
  1463 ;; Parameters:    Size  Location     Type
  1464 ;;  id              1    wreg     unsigned char 
  1465 ;;  Cont            1    0[BANK0 ] PTR unsigned char 
  1466 ;;		 -> id_clear@tmp(5), keyID(5), 
  1467 ;;  buff            1    1[BANK0 ] PTR unsigned char 
  1468 ;;		 -> buffTag(25), 
  1469 ;; Auto vars:     Size  Location     Type
  1470 ;;  id              1   11[COMMON] unsigned char 
  1471 ;; Return value:  Size  Location     Type
  1472 ;;		None               void
  1473 ;; Registers used:
  1474 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1475 ;; Tracked objects:
  1476 ;;		On entry : 60/0
  1477 ;;		On exit  : 0/0
  1478 ;;		Unchanged: 0/0
  1479 ;; Data sizes:     COMMON   BANK0   BANK1
  1480 ;;      Params:         0       2       0
  1481 ;;      Locals:         1       0       0
  1482 ;;      Temps:          0       2       0
  1483 ;;      Totals:         1       4       0
  1484 ;;Total ram usage:        5 bytes
  1485 ;; Hardware stack levels used:    1
  1486 ;; Hardware stack levels required when called:    3
  1487 ;; This function calls:
  1488 ;;		___bmul
  1489 ;;		_eepromWriteBlock
  1490 ;; This function is called by:
  1491 ;;		_id_clear
  1492 ;;		_main
  1493 ;; This function uses a non-reentrant model
  1494 ;;
  1495  029C                     _id_replate:	
  1496                           
  1497                           ; Regs used in _id_replate: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1498                           ;id_replate@id stored from wreg
  1499  029C  00FB               	movwf	id_replate@id
  1500                           
  1501                           ;MAIN.C: 164: id=(id-1)*5;
  1502  029D  3005               	movlw	5
  1503  029E  00F2               	movwf	?___bmul
  1504  029F  087B               	movf	id_replate@id,w
  1505  02A0  3EFF               	addlw	255
  1506  02A1  246A               	fcall	___bmul
  1507  02A2  00FB               	movwf	id_replate@id
  1508                           
  1509                           ;MAIN.C: 165: {
  1510                           ;MAIN.C: 166: {
  1511                           ;MAIN.C: 167: *(buff+id) = *Cont;
  1512  02A3  083F               	movf	id_replate@Cont,w
  1513  02A4  0084               	movwf	4
  1514  02A5  1383               	bcf	3,7	;select IRP bank0
  1515  02A6  0800               	movf	0,w
  1516  02A7  00C1               	movwf	??_id_replate
  1517  02A8  087B               	movf	id_replate@id,w
  1518  02A9  0740               	addwf	id_replate@buff,w
  1519  02AA  00C2               	movwf	??_id_replate+1
  1520  02AB  0084               	movwf	4
  1521  02AC  0841               	movf	??_id_replate,w
  1522  02AD  0080               	movwf	0
  1523                           
  1524                           ;MAIN.C: 168: *(buff+1+id) = *(Cont+1);
  1525  02AE  083F               	movf	id_replate@Cont,w
  1526  02AF  3E01               	addlw	1
  1527  02B0  22D0               	fcall	PL3	;call to abstracted procedure
  1528  02B1  3E01               	addlw	1
  1529  02B2  0084               	movwf	4
  1530  02B3  0841               	movf	??_id_replate,w
  1531  02B4  0080               	movwf	0
  1532                           
  1533                           ;MAIN.C: 169: *(buff+2+id) = *(Cont+2);
  1534  02B5  083F               	movf	id_replate@Cont,w
  1535  02B6  3E02               	addlw	2
  1536  02B7  22D0               	fcall	PL3	;call to abstracted procedure
  1537  02B8  3E02               	addlw	2
  1538  02B9  0084               	movwf	4
  1539  02BA  0841               	movf	??_id_replate,w
  1540  02BB  0080               	movwf	0
  1541                           
  1542                           ;MAIN.C: 170: *(buff+3+id) = *(Cont+3);
  1543  02BC  083F               	movf	id_replate@Cont,w
  1544  02BD  3E03               	addlw	3
  1545  02BE  22D0               	fcall	PL3	;call to abstracted procedure
  1546  02BF  3E03               	addlw	3
  1547  02C0  0084               	movwf	4
  1548  02C1  0841               	movf	??_id_replate,w
  1549  02C2  0080               	movwf	0
  1550                           
  1551                           ;MAIN.C: 171: *(buff+4+id) = *(Cont+4);
  1552  02C3  083F               	movf	id_replate@Cont,w
  1553  02C4  3E04               	addlw	4
  1554  02C5  22D0               	fcall	PL3	;call to abstracted procedure
  1555  02C6  3E04               	addlw	4
  1556  02C7  0084               	movwf	4
  1557  02C8  0841               	movf	??_id_replate,w
  1558  02C9  0080               	movwf	0
  1559                           
  1560                           ;MAIN.C: 172: }
  1561                           ;MAIN.C: 173: }
  1562                           ;MAIN.C: 175: eepromWriteBlock(0x06,buffTag,25);
  1563  02CA  3026               	movlw	_buffTag& (0+255)
  1564  02CB  00F6               	movwf	?_eepromWriteBlock
  1565  02CC  3019               	movlw	25
  1566  02CD  00F7               	movwf	?_eepromWriteBlock+1
  1567  02CE  3006               	movlw	6
  1568  02CF  2BF6               	ljmp	_eepromWriteBlock
  1569  02D0                     __end_of_id_replate:	
  1570  02D0                     PL3:	
  1571  02D0  0084               	movwf	4
  1572  02D1  0800               	movf	0,w
  1573  02D2  00C1               	movwf	??_id_replate
  1574  02D3  087B               	movf	id_replate@id,w
  1575  02D4  0740               	addwf	id_replate@buff,w
  1576  02D5  00C2               	movwf	??_id_replate+1
  1577  02D6  0008               	return
  1578                           
  1579                           	psect	text508
  1580  0394                     __ptext508:	
  1581 ;; =============== function _id_replate ends ============
  1582                           
  1583                           
  1584 ;; *************** function _beep *****************
  1585 ;; Defined at:
  1586 ;;		line 61 in file "MAIN.C"
  1587 ;; Parameters:    Size  Location     Type
  1588 ;;  delay           1    wreg     unsigned char 
  1589 ;;  rep             1    5[COMMON] unsigned char 
  1590 ;; Auto vars:     Size  Location     Type
  1591 ;;  delay           1    6[COMMON] unsigned char 
  1592 ;; Return value:  Size  Location     Type
  1593 ;;		None               void
  1594 ;; Registers used:
  1595 ;;		wreg, status,2, status,0, pclath, cstack
  1596 ;; Tracked objects:
  1597 ;;		On entry : 60/0
  1598 ;;		On exit  : 0/0
  1599 ;;		Unchanged: 0/0
  1600 ;; Data sizes:     COMMON   BANK0   BANK1
  1601 ;;      Params:         1       0       0
  1602 ;;      Locals:         1       0       0
  1603 ;;      Temps:          0       0       0
  1604 ;;      Totals:         2       0       0
  1605 ;;Total ram usage:        2 bytes
  1606 ;; Hardware stack levels used:    1
  1607 ;; Hardware stack levels required when called:    2
  1608 ;; This function calls:
  1609 ;;		_delay_x10ms
  1610 ;; This function is called by:
  1611 ;;		_main
  1612 ;; This function uses a non-reentrant model
  1613 ;;
  1614  0394                     _beep:	
  1615                           
  1616                           ; Regs used in _beep: [wreg+status,2+status,0+pclath+cstack]
  1617                           ;beep@delay stored from wreg
  1618  0394  00F6               	movwf	beep@delay
  1619                           
  1620                           ;MAIN.C: 63: TMR1ON = 1;T0IE = 1;
  1621  0395  1410               	bsf	16,0
  1622  0396  168B               	bsf	11,5
  1623  0397                     l5738:	
  1624                           ;MAIN.C: 65: while(rep--){
  1625                           
  1626  0397  03F5               	decf	beep@rep,f
  1627  0398  0875               	movf	beep@rep,w
  1628  0399  3AFF               	xorlw	255
  1629  039A  1903               	btfsc	3,2
  1630  039B  2BAC               	goto	l3446
  1631  039C  302A               	movlw	42
  1632                           
  1633                           ;MAIN.C: 66: TMR1ON = 1;T0IE = 1;
  1634  039D  1283               	bcf	3,5	;RP0=0, select bank0
  1635  039E  1303               	bcf	3,6	;RP1=0, select bank0
  1636  039F  1410               	bsf	16,0
  1637  03A0  168B               	bsf	11,5
  1638                           
  1639                           ;MAIN.C: 67: buzFre=42;
  1640  03A1  00A5               	movwf	_buzFre
  1641                           
  1642                           ;MAIN.C: 68: delay_x10ms(delay);
  1643  03A2  0876               	movf	beep@delay,w
  1644  03A3  243C               	fcall	_delay_x10ms
  1645  03A4  3014               	movlw	20
  1646                           
  1647                           ;MAIN.C: 69: T0IE = 0;
  1648  03A5  128B               	bcf	11,5
  1649                           
  1650                           ;MAIN.C: 70: TMR1ON = 0;RC0 =0;
  1651  03A6  1283               	bcf	3,5	;RP0=0, select bank0
  1652  03A7  1303               	bcf	3,6	;RP1=0, select bank0
  1653  03A8  1010               	bcf	16,0
  1654  03A9  1007               	bcf	7,0
  1655                           
  1656                           ;MAIN.C: 71: delay_x10ms(20);
  1657  03AA  243C               	fcall	_delay_x10ms
  1658  03AB  2B97               	goto	l5738
  1659  03AC                     l3446:	
  1660                           
  1661                           ;MAIN.C: 72: }
  1662                           ;MAIN.C: 74: T0IE = 0;
  1663  03AC  128B               	bcf	11,5
  1664  03AD  0008               	return
  1665  03AE                     __end_of_beep:	
  1666                           
  1667                           	psect	text509
  1668  03F6                     __ptext509:	
  1669 ;; =============== function _beep ends ============
  1670                           
  1671                           
  1672 ;; *************** function _eepromWriteBlock *****************
  1673 ;; Defined at:
  1674 ;;		line 43 in file "ms82_eeprom.c"
  1675 ;; Parameters:    Size  Location     Type
  1676 ;;  addStart        1    wreg     unsigned char 
  1677 ;;  buff            1    6[COMMON] PTR unsigned char 
  1678 ;;		 -> buffTag(25), 
  1679 ;;  len             1    7[COMMON] unsigned char 
  1680 ;; Auto vars:     Size  Location     Type
  1681 ;;  addStart        1    9[COMMON] unsigned char 
  1682 ;;  i               1   10[COMMON] unsigned char 
  1683 ;; Return value:  Size  Location     Type
  1684 ;;		None               void
  1685 ;; Registers used:
  1686 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1687 ;; Tracked objects:
  1688 ;;		On entry : 160/0
  1689 ;;		On exit  : 0/0
  1690 ;;		Unchanged: 0/0
  1691 ;; Data sizes:     COMMON   BANK0   BANK1
  1692 ;;      Params:         2       0       0
  1693 ;;      Locals:         2       0       0
  1694 ;;      Temps:          1       0       0
  1695 ;;      Totals:         5       0       0
  1696 ;;Total ram usage:        5 bytes
  1697 ;; Hardware stack levels used:    1
  1698 ;; Hardware stack levels required when called:    2
  1699 ;; This function calls:
  1700 ;;		_eepromWriteByte
  1701 ;; This function is called by:
  1702 ;;		_id_replate
  1703 ;; This function uses a non-reentrant model
  1704 ;;
  1705  03F6                     _eepromWriteBlock:	
  1706                           
  1707                           ; Regs used in _eepromWriteBlock: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1708                           ;eepromWriteBlock@addStart stored from wreg
  1709  03F6  00F9               	movwf	eepromWriteBlock@addStart
  1710                           
  1711                           ;ms82_eeprom.c: 44: unsigned char i;
  1712                           ;ms82_eeprom.c: 45: for(i=0;i<len;i++){
  1713  03F7  01FA               	clrf	eepromWriteBlock@i
  1714  03F8                     l5722:	
  1715  03F8  0877               	movf	eepromWriteBlock@len,w
  1716  03F9  027A               	subwf	eepromWriteBlock@i,w
  1717  03FA  1803               	btfsc	3,0
  1718  03FB  0008               	return
  1719                           
  1720                           ;ms82_eeprom.c: 46: eepromWriteByte(addStart+i,buff[i]);
  1721  03FC  087A               	movf	eepromWriteBlock@i,w
  1722  03FD  0776               	addwf	eepromWriteBlock@buff,w
  1723  03FE  00F8               	movwf	??_eepromWriteBlock
  1724  03FF  0084               	movwf	4
  1725  0400  1383               	bcf	3,7	;select IRP bank0
  1726  0401  0800               	movf	0,w
  1727  0402  00F2               	movwf	?_eepromWriteByte
  1728  0403  087A               	movf	eepromWriteBlock@i,w
  1729  0404  0779               	addwf	eepromWriteBlock@addStart,w
  1730  0405  22D7               	fcall	_eepromWriteByte
  1731  0406  0AFA               	incf	eepromWriteBlock@i,f
  1732  0407  2BF8               	goto	l5722
  1733  0408                     __end_of_eepromWriteBlock:	
  1734                           
  1735                           	psect	text510
  1736  03AE                     __ptext510:	
  1737 ;; =============== function _eepromWriteBlock ends ============
  1738                           
  1739                           
  1740 ;; *************** function _id_search *****************
  1741 ;; Defined at:
  1742 ;;		line 155 in file "MAIN.C"
  1743 ;; Parameters:    Size  Location     Type
  1744 ;;  id_input        1    wreg     PTR unsigned char 
  1745 ;;		 -> keyID(5), 
  1746 ;;  buff            1   10[COMMON] PTR unsigned char 
  1747 ;;		 -> buffTag(25), 
  1748 ;; Auto vars:     Size  Location     Type
  1749 ;;  id_input        1    0[BANK0 ] PTR unsigned char 
  1750 ;;		 -> keyID(5), 
  1751 ;;  i               1    1[BANK0 ] unsigned char 
  1752 ;; Return value:  Size  Location     Type
  1753 ;;                  1    wreg      unsigned char 
  1754 ;; Registers used:
  1755 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1756 ;; Tracked objects:
  1757 ;;		On entry : 60/0
  1758 ;;		On exit  : 60/0
  1759 ;;		Unchanged: FFE9F/0
  1760 ;; Data sizes:     COMMON   BANK0   BANK1
  1761 ;;      Params:         1       0       0
  1762 ;;      Locals:         0       2       0
  1763 ;;      Temps:          1       0       0
  1764 ;;      Totals:         2       2       0
  1765 ;;Total ram usage:        4 bytes
  1766 ;; Hardware stack levels used:    1
  1767 ;; Hardware stack levels required when called:    2
  1768 ;; This function calls:
  1769 ;;		_comArr
  1770 ;;		___lbdiv
  1771 ;; This function is called by:
  1772 ;;		_main
  1773 ;; This function uses a non-reentrant model
  1774 ;;
  1775  03AE                     _id_search:	
  1776                           
  1777                           ; Regs used in _id_search: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1778                           ;id_search@id_input stored from wreg
  1779  03AE  00BF               	movwf	id_search@id_input
  1780                           
  1781                           ;MAIN.C: 156: unsigned char i;
  1782                           ;MAIN.C: 157: for(i=0;i<21;i+=5){
  1783  03AF  01C0               	clrf	id_search@i
  1784  03B0                     l5702:	
  1785                           
  1786                           ;MAIN.C: 158: if(comArr(id_input,buff+i,5,5))
  1787  03B0  0840               	movf	id_search@i,w
  1788  03B1  077A               	addwf	id_search@buff,w
  1789  03B2  00F2               	movwf	?_comArr
  1790  03B3  3005               	movlw	5
  1791  03B4  00F3               	movwf	?_comArr+1
  1792  03B5  00F4               	movwf	?_comArr+2
  1793  03B6  083F               	movf	id_search@id_input,w
  1794  03B7  235A               	fcall	_comArr
  1795  03B8  3A00               	xorlw	0
  1796                           
  1797                           ;MAIN.C: 159: return i/5 +1;
  1798  03B9  3005               	movlw	5
  1799  03BA  1903               	skipnz
  1800  03BB  2BC2               	goto	L2
  1801  03BC  00F2               	movwf	?___lbdiv
  1802  03BD  0840               	movf	id_search@i,w
  1803  03BE  2379               	fcall	___lbdiv
  1804  03BF  00FB               	movwf	??_id_search
  1805  03C0  0A7B               	incf	??_id_search,w
  1806  03C1  0008               	return
  1807  03C2                     L2:	
  1808  03C2  07C0               	addwf	id_search@i,f
  1809  03C3  3015               	movlw	21
  1810  03C4  0240               	subwf	id_search@i,w
  1811  03C5  1803               	btfsc	3,0
  1812                           
  1813                           ;MAIN.C: 160: }
  1814                           ;MAIN.C: 161: return 255;
  1815  03C6  34FF               	retlw	255
  1816  03C7  2BB0               	goto	l5702
  1817  03C8                     __end_of_id_search:	
  1818                           
  1819                           	psect	text511
  1820  043C                     __ptext511:	
  1821 ;; =============== function _id_search ends ============
  1822                           
  1823                           
  1824 ;; *************** function _delay_x10ms *****************
  1825 ;; Defined at:
  1826 ;;		line 57 in file "MAIN.C"
  1827 ;; Parameters:    Size  Location     Type
  1828 ;;  t               1    wreg     unsigned char 
  1829 ;; Auto vars:     Size  Location     Type
  1830 ;;  t               1    4[COMMON] unsigned char 
  1831 ;; Return value:  Size  Location     Type
  1832 ;;		None               void
  1833 ;; Registers used:
  1834 ;;		wreg, status,2, status,0
  1835 ;; Tracked objects:
  1836 ;;		On entry : 60/0
  1837 ;;		On exit  : 0/0
  1838 ;;		Unchanged: 0/0
  1839 ;; Data sizes:     COMMON   BANK0   BANK1
  1840 ;;      Params:         0       0       0
  1841 ;;      Locals:         1       0       0
  1842 ;;      Temps:          2       0       0
  1843 ;;      Totals:         3       0       0
  1844 ;;Total ram usage:        3 bytes
  1845 ;; Hardware stack levels used:    1
  1846 ;; Hardware stack levels required when called:    1
  1847 ;; This function calls:
  1848 ;;		Nothing
  1849 ;; This function is called by:
  1850 ;;		_beep
  1851 ;; This function uses a non-reentrant model
  1852 ;;
  1853  043C                     _delay_x10ms:	
  1854                           
  1855                           ; Regs used in _delay_x10ms: [wreg+status,2+status,0]
  1856                           ;delay_x10ms@t stored from wreg
  1857  043C  00F4               	movwf	delay_x10ms@t
  1858  043D                     l5694:	
  1859                           ;MAIN.C: 58: while(t--)
  1860                           
  1861  043D  03F4               	decf	delay_x10ms@t,f
  1862  043E  0874               	movf	delay_x10ms@t,w
  1863  043F  3AFF               	xorlw	255
  1864  0440  1903               	btfsc	3,2
  1865  0441  0008               	return
  1866                           
  1867                           ;MAIN.C: 59: _delay((unsigned long)((10)*(8000000/4000.0)));
  1868  0442  301A               	movlw	26
  1869  0443  00F3               	movwf	??_delay_x10ms+1
  1870  0444  30F8               	movlw	248
  1871  0445  00F2               	movwf	??_delay_x10ms
  1872  0446                     u1827:	
  1873  0446  0BF2               	decfsz	??_delay_x10ms,f
  1874  0447  2C46               	goto	u1827
  1875  0448  0BF3               	decfsz	??_delay_x10ms+1,f
  1876  0449  2C46               	goto	u1827
  1877  044A  0064               	clrwdt
  1878  044B  2C3D               	goto	l5694
  1879  044C                     __end_of_delay_x10ms:	
  1880                           
  1881                           	psect	text512
  1882  000B                     __ptext512:	
  1883 ;; =============== function _delay_x10ms ends ============
  1884                           
  1885                           
  1886 ;; *************** function _get_RFID *****************
  1887 ;; Defined at:
  1888 ;;		line 21 in file "rfid125.c"
  1889 ;; Parameters:    Size  Location     Type
  1890 ;;		None
  1891 ;; Auto vars:     Size  Location     Type
  1892 ;;  RF_serial_55   11    0[BANK0 ] unsigned char [11]
  1893 ;;  timeOutVal      2   17[BANK0 ] unsigned int 
  1894 ;;  ii              1   19[BANK0 ] unsigned char 
  1895 ;;  flag_RFID_la    1   16[BANK0 ] unsigned char 
  1896 ;;  i               1   15[BANK0 ] unsigned char 
  1897 ;;  j               1   14[BANK0 ] unsigned char 
  1898 ;;  even_row        1   13[BANK0 ] unsigned char 
  1899 ;;  even_col        1   12[BANK0 ] unsigned char 
  1900 ;;  flag_RFID_sy    1   11[BANK0 ] unsigned char 
  1901 ;; Return value:  Size  Location     Type
  1902 ;;                  1    wreg      unsigned char 
  1903 ;; Registers used:
  1904 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1905 ;; Tracked objects:
  1906 ;;		On entry : 60/0
  1907 ;;		On exit  : 60/0
  1908 ;;		Unchanged: FFE9F/0
  1909 ;; Data sizes:     COMMON   BANK0   BANK1
  1910 ;;      Params:         0       0       0
  1911 ;;      Locals:         0      20       0
  1912 ;;      Temps:          1       0       0
  1913 ;;      Totals:         1      20       0
  1914 ;;Total ram usage:       21 bytes
  1915 ;; Hardware stack levels used:    1
  1916 ;; Hardware stack levels required when called:    2
  1917 ;; This function calls:
  1918 ;;		_timerOut
  1919 ;;		___lbdiv
  1920 ;; This function is called by:
  1921 ;;		_main
  1922 ;; This function uses a non-reentrant model
  1923 ;;
  1924  000B                     _get_RFID:	
  1925  000B  3010               	movlw	16
  1926                           
  1927                           ;rfid125.c: 23: unsigned char RF_serial_55bits[11];
  1928                           ;rfid125.c: 24: unsigned int timeOutVal;
  1929                           ;rfid125.c: 25: unsigned char i,ii,j;
  1930                           ;rfid125.c: 26: unsigned char flag_RFID_syn, flag_RFID_last;
  1931                           ;rfid125.c: 27: unsigned char even_row, even_col;
  1932                           ;rfid125.c: 30: flag_RFID_syn = 0;
  1933                           
  1934                           ; Regs used in _get_RFID: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1935  000C  01CA               	clrf	get_RFID@flag_RFID_syn
  1936                           
  1937                           ;rfid125.c: 33: i=16;
  1938  000D  00CE               	movwf	get_RFID@i
  1939  000E                     l5472:	
  1940                           
  1941                           ;rfid125.c: 35: {
  1942                           ;rfid125.c: 36: timeOutVal=timerOut(1,600);
  1943  000E  3058               	movlw	88
  1944  000F  00F2               	movwf	?_timerOut
  1945  0010  3002               	movlw	2
  1946  0011  00F3               	movwf	?_timerOut+1
  1947  0012  3001               	movlw	1
  1948  0013  22FA               	fcall	_timerOut
  1949                           
  1950                           ;rfid125.c: 37: if(timeOutVal==0) return 0;
  1951  0014  2141               	fcall	PL2	;call to abstracted procedure
  1952  0015  1903               	btfsc	3,2
  1953  0016  3400               	retlw	0
  1954                           
  1955                           ;rfid125.c: 39: timeOutVal=timerOut(0,600);
  1956  0017  3058               	movlw	88
  1957  0018  2154               	fcall	PL6	;call to abstracted procedure
  1958  0019  22FA               	fcall	_timerOut
  1959                           
  1960                           ;rfid125.c: 40: if(timeOutVal==0) return 0;
  1961  001A  2141               	fcall	PL2	;call to abstracted procedure
  1962  001B  1903               	btfsc	3,2
  1963  001C  3400               	retlw	0
  1964  001D  3001               	movlw	1
  1965                           
  1966                           ;rfid125.c: 42: i--;
  1967  001E  03CE               	decf	get_RFID@i,f
  1968                           
  1969                           ;rfid125.c: 43: }
  1970                           ;rfid125.c: 44: while(timeOutVal<290 && i>0);
  1971  001F  0251               	subwf	get_RFID@timeOutVal+1,w
  1972  0020  3022               	movlw	34
  1973  0021  1903               	skipnz
  1974  0022  0250               	subwf	get_RFID@timeOutVal,w
  1975  0023  1803               	skipnc
  1976  0024  2828               	goto	l2051
  1977  0025  08CE               	movf	get_RFID@i,f
  1978  0026  1D03               	skipz
  1979  0027  280E               	goto	l5472
  1980  0028                     l2051:	
  1981                           
  1982                           ;rfid125.c: 45: flag_RFID_last = 1;
  1983  0028  01CF               	clrf	get_RFID@flag_RFID_last
  1984  0029  0ACF               	incf	get_RFID@flag_RFID_last,f
  1985                           
  1986                           ;rfid125.c: 46: i = 0;
  1987  002A  01CE               	clrf	get_RFID@i
  1988  002B                     l5560:	
  1989                           ;rfid125.c: 47: while(i<64)
  1990                           
  1991  002B  3040               	movlw	64
  1992  002C  024E               	subwf	get_RFID@i,w
  1993  002D  1803               	btfsc	3,0
  1994  002E  2884               	goto	l5562
  1995                           
  1996                           ;rfid125.c: 48: {
  1997                           ;rfid125.c: 49: for(ii=0;ii<9;ii++)
  1998  002F  01D2               	clrf	get_RFID@ii
  1999  0030                     l5502:	
  2000                           
  2001                           ;rfid125.c: 50: {
  2002                           ;rfid125.c: 51: timeOutVal=timerOut(flag_RFID_last,600);
  2003  0030  214E               	fcall	PL5	;call to abstracted procedure
  2004  0031  22FA               	fcall	_timerOut
  2005                           
  2006                           ;rfid125.c: 52: if(timeOutVal==0) return 0;
  2007  0032  2141               	fcall	PL2	;call to abstracted procedure
  2008  0033  1903               	btfsc	3,2
  2009  0034  3400               	retlw	0
  2010                           
  2011                           ;rfid125.c: 54: if(0==flag_RFID_last && timeOutVal<=290 ||
  2012                           ;rfid125.c: 55: 1==flag_RFID_last && timeOutVal>290)
  2013  0035  08CF               	movf	get_RFID@flag_RFID_last,f
  2014  0036  1D03               	skipz
  2015  0037  283F               	goto	l5514
  2016  0038  3001               	movlw	1
  2017  0039  0251               	subwf	get_RFID@timeOutVal+1,w
  2018  003A  3023               	movlw	35
  2019  003B  1903               	skipnz
  2020  003C  0250               	subwf	get_RFID@timeOutVal,w
  2021  003D  1C03               	skipc
  2022  003E  2848               	goto	l5518
  2023  003F                     l5514:	
  2024  003F  0B4F               	decfsz	get_RFID@flag_RFID_last,w
  2025  0040  2856               	goto	l5532
  2026  0041  3001               	movlw	1
  2027  0042  0251               	subwf	get_RFID@timeOutVal+1,w
  2028  0043  3023               	movlw	35
  2029  0044  1903               	skipnz
  2030  0045  0250               	subwf	get_RFID@timeOutVal,w
  2031  0046  1C03               	skipc
  2032  0047  2856               	goto	l5532
  2033  0048                     l5518:	
  2034                           
  2035                           ;rfid125.c: 56: {
  2036                           ;rfid125.c: 57: if(!flag_RFID_last)
  2037  0048  08CF               	movf	get_RFID@flag_RFID_last,f
  2038  0049  1D03               	skipz
  2039  004A  2853               	goto	l5528
  2040                           
  2041                           ;rfid125.c: 58: {
  2042                           ;rfid125.c: 59: timeOutVal=timerOut(1,290);
  2043  004B  3022               	movlw	34
  2044  004C  00F2               	movwf	?_timerOut
  2045  004D  3001               	movlw	1
  2046  004E  00F3               	movwf	?_timerOut+1
  2047  004F  22FA               	fcall	_timerOut
  2048                           
  2049                           ;rfid125.c: 60: if(timeOutVal==0) return 0;
  2050  0050  2141               	fcall	PL2	;call to abstracted procedure
  2051  0051  1903               	btfsc	3,2
  2052  0052  3400               	retlw	0
  2053  0053                     l5528:	
  2054                           
  2055                           ;rfid125.c: 61: }
  2056                           ;rfid125.c: 62: flag_RFID_last = 0;
  2057  0053  01CF               	clrf	get_RFID@flag_RFID_last
  2058                           
  2059                           ;rfid125.c: 63: i++;
  2060  0054  0ACE               	incf	get_RFID@i,f
  2061                           
  2062                           ;rfid125.c: 64: }
  2063  0055  2879               	goto	l5552
  2064  0056                     l5532:	
  2065                           
  2066                           ;rfid125.c: 65: else
  2067                           ;rfid125.c: 66: if(0==flag_RFID_last && timeOutVal>290 ||
  2068                           ;rfid125.c: 67: 1==flag_RFID_last && timeOutVal<=290)
  2069  0056  08CF               	movf	get_RFID@flag_RFID_last,f
  2070  0057  1D03               	skipz
  2071  0058  2860               	goto	l5536
  2072  0059  3001               	movlw	1
  2073  005A  0251               	subwf	get_RFID@timeOutVal+1,w
  2074  005B  3023               	movlw	35
  2075  005C  1903               	skipnz
  2076  005D  0250               	subwf	get_RFID@timeOutVal,w
  2077  005E  1803               	skipnc
  2078  005F  2869               	goto	l5540
  2079  0060                     l5536:	
  2080  0060  0B4F               	decfsz	get_RFID@flag_RFID_last,w
  2081  0061  2879               	goto	l5552
  2082  0062  3001               	movlw	1
  2083  0063  0251               	subwf	get_RFID@timeOutVal+1,w
  2084  0064  3023               	movlw	35
  2085  0065  1903               	skipnz
  2086  0066  0250               	subwf	get_RFID@timeOutVal,w
  2087  0067  1803               	skipnc
  2088  0068  2879               	goto	l5552
  2089  0069                     l5540:	
  2090                           
  2091                           ;rfid125.c: 68: {
  2092                           ;rfid125.c: 69: if(flag_RFID_last)
  2093  0069  084F               	movf	get_RFID@flag_RFID_last,w
  2094  006A  1903               	btfsc	3,2
  2095  006B  2875               	goto	l2070
  2096                           
  2097                           ;rfid125.c: 70: {
  2098                           ;rfid125.c: 71: timeOutVal=timerOut(0,290);
  2099  006C  3022               	movlw	34
  2100  006D  00F2               	movwf	?_timerOut
  2101  006E  3001               	movlw	1
  2102  006F  00F3               	movwf	?_timerOut+1
  2103  0070  3000               	movlw	0
  2104  0071  22FA               	fcall	_timerOut
  2105                           
  2106                           ;rfid125.c: 72: if(timeOutVal==0) return 0;
  2107  0072  2141               	fcall	PL2	;call to abstracted procedure
  2108  0073  1903               	btfsc	3,2
  2109  0074  3400               	retlw	0
  2110  0075                     l2070:	
  2111                           
  2112                           ;rfid125.c: 73: }
  2113                           ;rfid125.c: 74: flag_RFID_last = 1;
  2114  0075  01CF               	clrf	get_RFID@flag_RFID_last
  2115  0076  0ACF               	incf	get_RFID@flag_RFID_last,f
  2116                           
  2117                           ;rfid125.c: 75: i++;
  2118  0077  0ACE               	incf	get_RFID@i,f
  2119                           
  2120                           ;rfid125.c: 77: break;
  2121  0078  287E               	goto	l5556
  2122  0079                     l5552:	
  2123  0079  3009               	movlw	9
  2124  007A  0AD2               	incf	get_RFID@ii,f
  2125  007B  0252               	subwf	get_RFID@ii,w
  2126  007C  1C03               	skipc
  2127  007D  2830               	goto	l5502
  2128  007E                     l5556:	
  2129                           
  2130                           ;rfid125.c: 78: }
  2131                           ;rfid125.c: 80: }
  2132                           ;rfid125.c: 81: if(9==ii)
  2133  007E  0852               	movf	get_RFID@ii,w
  2134  007F  3A09               	xorlw	9
  2135  0080  1D03               	skipz
  2136  0081  282B               	goto	l5560
  2137                           
  2138                           ;rfid125.c: 82: {
  2139                           ;rfid125.c: 83: flag_RFID_syn = 1;
  2140  0082  01CA               	clrf	get_RFID@flag_RFID_syn
  2141  0083  0ACA               	incf	get_RFID@flag_RFID_syn,f
  2142  0084                     l5562:	
  2143                           ;rfid125.c: 84: break;
  2144                           
  2145                           
  2146                           ;rfid125.c: 85: }
  2147                           ;rfid125.c: 86: }
  2148                           ;rfid125.c: 88: if(!flag_RFID_syn)
  2149  0084  08CA               	movf	get_RFID@flag_RFID_syn,f
  2150  0085  1903               	btfsc	3,2
  2151  0086  3400               	retlw	0
  2152                           
  2153                           ;rfid125.c: 91: }
  2154                           ;rfid125.c: 92: for(ii=0;ii<55;ii++)
  2155  0087  01D2               	clrf	get_RFID@ii
  2156  0088                     l5574:	
  2157                           
  2158                           ;rfid125.c: 93: {
  2159                           ;rfid125.c: 94: i = ii/5;
  2160  0088  3005               	movlw	5
  2161  0089  00F2               	movwf	?___lbdiv
  2162  008A  0852               	movf	get_RFID@ii,w
  2163  008B  2379               	fcall	___lbdiv
  2164  008C  00CE               	movwf	get_RFID@i
  2165                           
  2166                           ;rfid125.c: 95: timeOutVal=timerOut(flag_RFID_last,600);
  2167  008D  214E               	fcall	PL5	;call to abstracted procedure
  2168  008E  22FA               	fcall	_timerOut
  2169                           
  2170                           ;rfid125.c: 96: if(timeOutVal==0) return 0;
  2171  008F  2141               	fcall	PL2	;call to abstracted procedure
  2172  0090  1903               	btfsc	3,2
  2173  0091  3400               	retlw	0
  2174                           
  2175                           ;rfid125.c: 98: if(0==flag_RFID_last && timeOutVal<=290 ||
  2176                           ;rfid125.c: 99: 1==flag_RFID_last && timeOutVal>290)
  2177  0092  08CF               	movf	get_RFID@flag_RFID_last,f
  2178  0093  1D03               	skipz
  2179  0094  289C               	goto	l5588
  2180  0095  3001               	movlw	1
  2181  0096  0251               	subwf	get_RFID@timeOutVal+1,w
  2182  0097  3023               	movlw	35
  2183  0098  1903               	skipnz
  2184  0099  0250               	subwf	get_RFID@timeOutVal,w
  2185  009A  1C03               	skipc
  2186  009B  28A5               	goto	l5592
  2187  009C                     l5588:	
  2188  009C  0B4F               	decfsz	get_RFID@flag_RFID_last,w
  2189  009D  28B7               	goto	l5608
  2190  009E  3001               	movlw	1
  2191  009F  0251               	subwf	get_RFID@timeOutVal+1,w
  2192  00A0  3023               	movlw	35
  2193  00A1  1903               	skipnz
  2194  00A2  0250               	subwf	get_RFID@timeOutVal,w
  2195  00A3  1C03               	skipc
  2196  00A4  28B7               	goto	l5608
  2197  00A5                     l5592:	
  2198                           
  2199                           ;rfid125.c: 100: {
  2200                           ;rfid125.c: 101: if(!flag_RFID_last)
  2201  00A5  08CF               	movf	get_RFID@flag_RFID_last,f
  2202  00A6  1D03               	skipz
  2203  00A7  28B0               	goto	l5602
  2204                           
  2205                           ;rfid125.c: 102: {
  2206                           ;rfid125.c: 103: timeOutVal=timerOut(1,290);
  2207  00A8  3022               	movlw	34
  2208  00A9  00F2               	movwf	?_timerOut
  2209  00AA  3001               	movlw	1
  2210  00AB  00F3               	movwf	?_timerOut+1
  2211  00AC  22FA               	fcall	_timerOut
  2212                           
  2213                           ;rfid125.c: 104: if(timeOutVal==0) return 0;
  2214  00AD  2141               	fcall	PL2	;call to abstracted procedure
  2215  00AE  1903               	btfsc	3,2
  2216  00AF  3400               	retlw	0
  2217  00B0                     l5602:	
  2218                           
  2219                           ;rfid125.c: 105: }
  2220                           ;rfid125.c: 106: flag_RFID_last = 0;
  2221  00B0  01CF               	clrf	get_RFID@flag_RFID_last
  2222                           
  2223                           ;rfid125.c: 107: RF_serial_55bits[i] <<= 1;
  2224  00B1  2147               	fcall	PL4	;call to abstracted procedure
  2225                           
  2226                           ;rfid125.c: 108: RF_serial_55bits[i] |= 0x01;
  2227  00B2  084E               	movf	get_RFID@i,w
  2228  00B3  3E3F               	addlw	get_RFID@RF_serial_55bits& (0+255)
  2229  00B4  0084               	movwf	4
  2230  00B5  1400               	bsf	0,0
  2231                           
  2232                           ;rfid125.c: 109: }
  2233  00B6  28D6               	goto	l5628
  2234  00B7                     l5608:	
  2235                           
  2236                           ;rfid125.c: 110: else
  2237                           ;rfid125.c: 111: if(0==flag_RFID_last && timeOutVal>290 ||
  2238                           ;rfid125.c: 112: 1==flag_RFID_last && timeOutVal<=290)
  2239  00B7  08CF               	movf	get_RFID@flag_RFID_last,f
  2240  00B8  1D03               	skipz
  2241  00B9  28C1               	goto	l5612
  2242  00BA  3001               	movlw	1
  2243  00BB  0251               	subwf	get_RFID@timeOutVal+1,w
  2244  00BC  3023               	movlw	35
  2245  00BD  1903               	skipnz
  2246  00BE  0250               	subwf	get_RFID@timeOutVal,w
  2247  00BF  1803               	skipnc
  2248  00C0  28CA               	goto	l5616
  2249  00C1                     l5612:	
  2250  00C1  0B4F               	decfsz	get_RFID@flag_RFID_last,w
  2251  00C2  28D6               	goto	l5628
  2252  00C3  3001               	movlw	1
  2253  00C4  0251               	subwf	get_RFID@timeOutVal+1,w
  2254  00C5  3023               	movlw	35
  2255  00C6  1903               	skipnz
  2256  00C7  0250               	subwf	get_RFID@timeOutVal,w
  2257  00C8  1803               	skipnc
  2258  00C9  28D6               	goto	l5628
  2259  00CA                     l5616:	
  2260                           
  2261                           ;rfid125.c: 113: {
  2262                           ;rfid125.c: 114: if(flag_RFID_last)
  2263  00CA  084F               	movf	get_RFID@flag_RFID_last,w
  2264  00CB  1903               	btfsc	3,2
  2265  00CC  28D3               	goto	l2091
  2266                           
  2267                           ;rfid125.c: 115: {
  2268                           ;rfid125.c: 116: timeOutVal=timerOut(0,600);
  2269  00CD  3058               	movlw	88
  2270  00CE  2154               	fcall	PL6	;call to abstracted procedure
  2271  00CF  22FA               	fcall	_timerOut
  2272                           
  2273                           ;rfid125.c: 117: if(timeOutVal==0) return 0;
  2274  00D0  2141               	fcall	PL2	;call to abstracted procedure
  2275  00D1  1903               	btfsc	3,2
  2276  00D2  3400               	retlw	0
  2277  00D3                     l2091:	
  2278                           
  2279                           ;rfid125.c: 118: }
  2280                           ;rfid125.c: 119: flag_RFID_last = 1;
  2281  00D3  01CF               	clrf	get_RFID@flag_RFID_last
  2282  00D4  0ACF               	incf	get_RFID@flag_RFID_last,f
  2283                           
  2284                           ;rfid125.c: 120: RF_serial_55bits[i] <<= 1;
  2285  00D5  2147               	fcall	PL4	;call to abstracted procedure
  2286  00D6                     l5628:	
  2287  00D6  3037               	movlw	55
  2288  00D7  0AD2               	incf	get_RFID@ii,f
  2289  00D8  0252               	subwf	get_RFID@ii,w
  2290  00D9  1C03               	skipc
  2291  00DA  2888               	goto	l5574
  2292                           
  2293                           ;rfid125.c: 121: }
  2294                           ;rfid125.c: 122: }
  2295                           ;rfid125.c: 123: if(55==ii)
  2296  00DB  0852               	movf	get_RFID@ii,w
  2297  00DC  3A37               	xorlw	55
  2298  00DD  1D03               	skipz
  2299  00DE  3400               	retlw	0
  2300                           
  2301                           ;rfid125.c: 124: {
  2302                           ;rfid125.c: 125: even_col = 0;
  2303  00DF  01CB               	clrf	get_RFID@even_col
  2304                           
  2305                           ;rfid125.c: 126: for(ii=0;ii<10;ii++)
  2306  00E0  01D2               	clrf	get_RFID@ii
  2307  00E1                     l5640:	
  2308                           
  2309                           ;rfid125.c: 127: {
  2310                           ;rfid125.c: 128: even_row = (RF_serial_55bits[ii] & 0x01);
  2311  00E1  0852               	movf	get_RFID@ii,w
  2312  00E2  3E3F               	addlw	get_RFID@RF_serial_55bits& (0+255)
  2313  00E3  0084               	movwf	4
  2314  00E4  1383               	bcf	3,7	;select IRP bank0
  2315  00E5  0800               	movf	0,w
  2316  00E6  00CC               	movwf	get_RFID@even_row
  2317  00E7  3001               	movlw	1
  2318  00E8  05CC               	andwf	get_RFID@even_row,f
  2319                           
  2320                           ;rfid125.c: 129: for(j=1;j<5;j++)
  2321  00E9  01CD               	clrf	get_RFID@j
  2322  00EA  0ACD               	incf	get_RFID@j,f
  2323  00EB                     l5650:	
  2324                           
  2325                           ;rfid125.c: 130: {
  2326                           ;rfid125.c: 131: even_row = even_row ^ ((RF_serial_55bits[ii]>>j) & 0x01);
  2327  00EB  0852               	movf	get_RFID@ii,w
  2328  00EC  3E3F               	addlw	get_RFID@RF_serial_55bits& (0+255)
  2329  00ED  0084               	movwf	4
  2330  00EE  0800               	movf	0,w
  2331  00EF  00F7               	movwf	??_get_RFID
  2332  00F0  0A4D               	incf	get_RFID@j,w
  2333  00F1  28F4               	goto	u1454
  2334  00F2                     u1455:	
  2335  00F2  1003               	clrc
  2336  00F3  0CF7               	rrf	??_get_RFID,f
  2337  00F4                     u1454:	
  2338  00F4  3EFF               	addlw	-1
  2339  00F5  1D03               	skipz
  2340  00F6  28F2               	goto	u1455
  2341  00F7  0877               	movf	??_get_RFID,w
  2342  00F8  3901               	andlw	1
  2343  00F9  06CC               	xorwf	get_RFID@even_row,f
  2344  00FA  3005               	movlw	5
  2345  00FB  0ACD               	incf	get_RFID@j,f
  2346  00FC  024D               	subwf	get_RFID@j,w
  2347  00FD  1C03               	skipc
  2348  00FE  28EB               	goto	l5650
  2349                           
  2350                           ;rfid125.c: 132: }
  2351                           ;rfid125.c: 133: if(even_row & 0x01)
  2352  00FF  184C               	btfsc	get_RFID@even_row,0
  2353  0100  3400               	retlw	0
  2354                           
  2355                           ;rfid125.c: 136: }
  2356                           ;rfid125.c: 138: RF_serial_55bits[ii] <<= 3;
  2357  0101  0852               	movf	get_RFID@ii,w
  2358  0102  3E3F               	addlw	get_RFID@RF_serial_55bits& (0+255)
  2359  0103  0084               	movwf	4
  2360  0104  0D80               	rlf	0,f
  2361  0105  0D80               	rlf	0,f
  2362  0106  0D00               	rlf	0,w
  2363  0107  39F8               	andlw	248
  2364  0108  0080               	movwf	0
  2365                           
  2366                           ;rfid125.c: 140: i = RF_serial_55bits[ii];
  2367  0109  0852               	movf	get_RFID@ii,w
  2368  010A  3E3F               	addlw	get_RFID@RF_serial_55bits& (0+255)
  2369  010B  0084               	movwf	4
  2370  010C  0800               	movf	0,w
  2371  010D  00CE               	movwf	get_RFID@i
  2372                           
  2373                           ;rfid125.c: 141: if( 0==ii%2 )
  2374  010E  1852               	btfsc	get_RFID@ii,0
  2375  010F  291D               	goto	l5666
  2376                           
  2377                           ;rfid125.c: 142: {
  2378                           ;rfid125.c: 143: keyID[ii/2] = (i & 0xF0);
  2379  0110  1003               	clrc
  2380  0111  0C52               	rrf	get_RFID@ii,w
  2381  0112  3E5E               	addlw	_keyID& (0+255)
  2382  0113  0084               	movwf	4
  2383  0114  084E               	movf	get_RFID@i,w
  2384  0115  0080               	movwf	0
  2385  0116  1003               	clrc
  2386  0117  0C52               	rrf	get_RFID@ii,w
  2387  0118  3E5E               	addlw	_keyID& (0+255)
  2388  0119  0084               	movwf	4
  2389  011A  30F0               	movlw	240
  2390  011B  0580               	andwf	0,f
  2391                           
  2392                           ;rfid125.c: 144: }
  2393  011C  2927               	goto	l5670
  2394  011D                     l5666:	
  2395  011D  300F               	movlw	15
  2396                           
  2397                           ;rfid125.c: 145: else
  2398                           ;rfid125.c: 146: {
  2399                           ;rfid125.c: 147: i >>=4;
  2400  011E  0ECE               	swapf	get_RFID@i,f
  2401  011F  05CE               	andwf	get_RFID@i,f
  2402                           
  2403                           ;rfid125.c: 148: keyID[ii/2] |= (i & 0x0F);
  2404  0120  1003               	clrc
  2405  0121  0C52               	rrf	get_RFID@ii,w
  2406  0122  3E5E               	addlw	_keyID& (0+255)
  2407  0123  0084               	movwf	4
  2408  0124  084E               	movf	get_RFID@i,w
  2409  0125  390F               	andlw	15
  2410  0126  0480               	iorwf	0,f
  2411  0127                     l5670:	
  2412                           
  2413                           ;rfid125.c: 149: }
  2414                           ;rfid125.c: 150: even_col ^= RF_serial_55bits[ii];
  2415  0127  0852               	movf	get_RFID@ii,w
  2416  0128  3E3F               	addlw	get_RFID@RF_serial_55bits& (0+255)
  2417  0129  0084               	movwf	4
  2418  012A  0800               	movf	0,w
  2419  012B  06CB               	xorwf	get_RFID@even_col,f
  2420  012C  300A               	movlw	10
  2421  012D  0AD2               	incf	get_RFID@ii,f
  2422  012E  0252               	subwf	get_RFID@ii,w
  2423  012F  1C03               	skipc
  2424  0130  28E1               	goto	l5640
  2425                           
  2426                           ;rfid125.c: 151: }
  2427                           ;rfid125.c: 152: RF_serial_55bits[10] <<= 3;
  2428  0131  0DC9               	rlf	get_RFID@RF_serial_55bits+10,f
  2429  0132  0DC9               	rlf	get_RFID@RF_serial_55bits+10,f
  2430  0133  0D49               	rlf	get_RFID@RF_serial_55bits+10,w
  2431  0134  39F8               	andlw	248
  2432  0135  00C9               	movwf	get_RFID@RF_serial_55bits+10
  2433  0136  30F0               	movlw	240
  2434                           
  2435                           ;rfid125.c: 153: keyID[0] =0x00;
  2436  0137  01DE               	clrf	_keyID
  2437                           
  2438                           ;rfid125.c: 154: if(((RF_serial_55bits[10] & 0xf0)==(even_col & 0xf0)) && (0==(RF_serial
      +                          _55bits[10]&0x08)))
  2439  0138  054B               	andwf	get_RFID@even_col,w
  2440  0139  00F7               	movwf	??_get_RFID
  2441  013A  0849               	movf	get_RFID@RF_serial_55bits+10,w
  2442  013B  39F0               	andlw	240
  2443  013C  0677               	xorwf	??_get_RFID,w
  2444  013D  1903               	btfsc	3,2
  2445  013E  19C9               	btfsc	get_RFID@RF_serial_55bits+10,3
  2446  013F  3400               	retlw	0
  2447                           
  2448                           ;rfid125.c: 155: {
  2449                           ;rfid125.c: 157: return 1;
  2450  0140  3401               	retlw	1
  2451  0141                     __end_of_get_RFID:	
  2452  0141                     PL2:	
  2453  0141  0873               	movf	?_timerOut+1,w
  2454  0142  00D1               	movwf	get_RFID@timeOutVal+1
  2455  0143  0872               	movf	?_timerOut,w
  2456  0144  00D0               	movwf	get_RFID@timeOutVal
  2457  0145  0451               	iorwf	get_RFID@timeOutVal+1,w
  2458  0146  0008               	return
  2459  0147                     PL4:	
  2460  0147  084E               	movf	get_RFID@i,w
  2461  0148  3E3F               	addlw	get_RFID@RF_serial_55bits& (0+255)
  2462  0149  0084               	movwf	4
  2463  014A  1383               	bcf	3,7	;select IRP bank0
  2464  014B  1003               	clrc
  2465  014C  0D80               	rlf	0,f
  2466  014D  0008               	return
  2467  014E                     PL5:	
  2468  014E  3058               	movlw	88
  2469  014F  00F2               	movwf	?_timerOut
  2470  0150  3002               	movlw	2
  2471  0151  00F3               	movwf	?_timerOut+1
  2472  0152  084F               	movf	get_RFID@flag_RFID_last,w
  2473  0153  0008               	return
  2474  0154                     PL6:	
  2475  0154  00F2               	movwf	?_timerOut
  2476  0155  3002               	movlw	2
  2477  0156  00F3               	movwf	?_timerOut+1
  2478  0157  3400               	retlw	0
  2479                           
  2480                           	psect	text513
  2481  02D7                     __ptext513:	
  2482 ;; =============== function _get_RFID ends ============
  2483                           
  2484                           
  2485 ;; *************** function _eepromWriteByte *****************
  2486 ;; Defined at:
  2487 ;;		line 26 in file "ms82_eeprom.c"
  2488 ;; Parameters:    Size  Location     Type
  2489 ;;  EEAddr          1    wreg     unsigned char 
  2490 ;;  EEData          1    2[COMMON] unsigned char 
  2491 ;; Auto vars:     Size  Location     Type
  2492 ;;  EEAddr          1    5[COMMON] unsigned char 
  2493 ;; Return value:  Size  Location     Type
  2494 ;;		None               void
  2495 ;; Registers used:
  2496 ;;		wreg
  2497 ;; Tracked objects:
  2498 ;;		On entry : 0/20
  2499 ;;		On exit  : 0/0
  2500 ;;		Unchanged: 0/0
  2501 ;; Data sizes:     COMMON   BANK0   BANK1
  2502 ;;      Params:         1       0       0
  2503 ;;      Locals:         1       0       0
  2504 ;;      Temps:          2       0       0
  2505 ;;      Totals:         4       0       0
  2506 ;;Total ram usage:        4 bytes
  2507 ;; Hardware stack levels used:    1
  2508 ;; Hardware stack levels required when called:    1
  2509 ;; This function calls:
  2510 ;;		Nothing
  2511 ;; This function is called by:
  2512 ;;		_eepromWriteBlock
  2513 ;;		_main
  2514 ;; This function uses a non-reentrant model
  2515 ;;
  2516  02D7                     _eepromWriteByte:	
  2517                           
  2518                           ; Regs used in _eepromWriteByte: [wreg]
  2519                           ;eepromWriteByte@EEAddr stored from wreg
  2520  02D7  00F5               	movwf	eepromWriteByte@EEAddr
  2521                           
  2522                           ;ms82_eeprom.c: 27: GIE = 0;
  2523  02D8  138B               	bcf	11,7
  2524  02D9                     l1325:	
  2525                           ;ms82_eeprom.c: 29: {
  2526                           ;ms82_eeprom.c: 30: while(GIE) asm("clrwdt");
  2527                           
  2528  02D9  1F8B               	btfss	11,7
  2529  02DA  2ADD               	goto	l5458
  2530  02DB  0064               	clrwdt	;#
  2531  02DC  2AD9               	goto	l1325
  2532  02DD                     l5458:	
  2533                           
  2534                           ;ms82_eeprom.c: 31: EEADR = EEAddr;
  2535  02DD  0875               	movf	eepromWriteByte@EEAddr,w
  2536  02DE  1683               	bsf	3,5	;RP0=1, select bank1
  2537  02DF  1303               	bcf	3,6	;RP1=0, select bank1
  2538  02E0  009B               	movwf	27	;volatile
  2539                           
  2540                           ;ms82_eeprom.c: 32: EEDAT = EEData;
  2541  02E1  0872               	movf	eepromWriteByte@EEData,w
  2542  02E2  009A               	movwf	26	;volatile
  2543  02E3  3034               	movlw	52
  2544                           
  2545                           ;ms82_eeprom.c: 33: EEIF = 0;
  2546  02E4  1283               	bcf	3,5	;RP0=0, select bank0
  2547  02E5  138C               	bcf	12,7
  2548                           
  2549                           ;ms82_eeprom.c: 34: EECON1 = 0x34;
  2550  02E6  1683               	bsf	3,5	;RP0=1, select bank1
  2551  02E7  009C               	movwf	28	;volatile
  2552                           
  2553                           ;ms82_eeprom.c: 35: WR = 1;
  2554  02E8  141D               	bsf	29,0
  2555  02E9                     l1328:	
  2556                           ;ms82_eeprom.c: 36: while(WR) asm("clrwdt");
  2557                           
  2558  02E9  1683               	bsf	3,5	;RP0=1, select bank1
  2559  02EA  1303               	bcf	3,6	;RP1=0, select bank1
  2560  02EB  1C1D               	btfss	29,0
  2561  02EC  2AEF               	goto	l5464
  2562  02ED  0064               	clrwdt	;#
  2563  02EE  2AE9               	goto	l1328
  2564  02EF                     l5464:	
  2565                           
  2566                           ;ms82_eeprom.c: 37: _delay((unsigned long)((2)*(8000000/4000.0)));
  2567  02EF  3006               	movlw	6
  2568  02F0  00F4               	movwf	??_eepromWriteByte+1
  2569  02F1  3030               	movlw	48
  2570  02F2  00F3               	movwf	??_eepromWriteByte
  2571  02F3                     u1837:	
  2572  02F3  0BF3               	decfsz	??_eepromWriteByte,f
  2573  02F4  2AF3               	goto	u1837
  2574  02F5  0BF4               	decfsz	??_eepromWriteByte+1,f
  2575  02F6  2AF3               	goto	u1837
  2576  02F7  0064               	clrwdt
  2577                           
  2578                           ;ms82_eeprom.c: 38: }
  2579                           ;ms82_eeprom.c: 39: GIE = 1;
  2580  02F8  178B               	bsf	11,7
  2581  02F9  0008               	return
  2582  02FA                     __end_of_eepromWriteByte:	
  2583                           
  2584                           	psect	text514
  2585  041A                     __ptext514:	
  2586 ;; =============== function _eepromWriteByte ends ============
  2587                           
  2588                           
  2589 ;; *************** function _eepromReadBlock *****************
  2590 ;; Defined at:
  2591 ;;		line 18 in file "ms82_eeprom.c"
  2592 ;; Parameters:    Size  Location     Type
  2593 ;;  addStart        1    wreg     unsigned char 
  2594 ;;  buff            1    4[COMMON] PTR unsigned char 
  2595 ;;		 -> buffTag(25), 
  2596 ;;  len             1    5[COMMON] unsigned char 
  2597 ;; Auto vars:     Size  Location     Type
  2598 ;;  addStart        1    7[COMMON] unsigned char 
  2599 ;;  i               1    8[COMMON] unsigned char 
  2600 ;; Return value:  Size  Location     Type
  2601 ;;		None               void
  2602 ;; Registers used:
  2603 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2604 ;; Tracked objects:
  2605 ;;		On entry : 0/20
  2606 ;;		On exit  : 0/0
  2607 ;;		Unchanged: FFE9F/0
  2608 ;; Data sizes:     COMMON   BANK0   BANK1
  2609 ;;      Params:         2       0       0
  2610 ;;      Locals:         2       0       0
  2611 ;;      Temps:          1       0       0
  2612 ;;      Totals:         5       0       0
  2613 ;;Total ram usage:        5 bytes
  2614 ;; Hardware stack levels used:    1
  2615 ;; Hardware stack levels required when called:    2
  2616 ;; This function calls:
  2617 ;;		_eepromReadByte
  2618 ;; This function is called by:
  2619 ;;		_main
  2620 ;; This function uses a non-reentrant model
  2621 ;;
  2622  041A                     _eepromReadBlock:	
  2623                           
  2624                           ; Regs used in _eepromReadBlock: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2625                           ;eepromReadBlock@addStart stored from wreg
  2626  041A  00F7               	movwf	eepromReadBlock@addStart
  2627                           
  2628                           ;ms82_eeprom.c: 19: unsigned char i;
  2629                           ;ms82_eeprom.c: 20: for(i=0;i<len;i++){
  2630  041B  01F8               	clrf	eepromReadBlock@i
  2631  041C                     l5454:	
  2632  041C  0875               	movf	eepromReadBlock@len,w
  2633  041D  0278               	subwf	eepromReadBlock@i,w
  2634  041E  1803               	btfsc	3,0
  2635  041F  0008               	return
  2636                           
  2637                           ;ms82_eeprom.c: 21: buff[i] = eepromReadByte(addStart+i);
  2638  0420  0878               	movf	eepromReadBlock@i,w
  2639  0421  0774               	addwf	eepromReadBlock@buff,w
  2640  0422  00F6               	movwf	??_eepromReadBlock
  2641  0423  0084               	movwf	4
  2642  0424  0878               	movf	eepromReadBlock@i,w
  2643  0425  0777               	addwf	eepromReadBlock@addStart,w
  2644  0426  2497               	fcall	_eepromReadByte
  2645  0427  1383               	bcf	3,7	;select IRP bank0
  2646  0428  0080               	movwf	0
  2647  0429  0AF8               	incf	eepromReadBlock@i,f
  2648  042A  2C1C               	goto	l5454
  2649  042B                     __end_of_eepromReadBlock:	
  2650                           
  2651                           	psect	text515
  2652  0483                     __ptext515:	
  2653 ;; =============== function _eepromReadBlock ends ============
  2654                           
  2655                           
  2656 ;; *************** function _sys_init *****************
  2657 ;; Defined at:
  2658 ;;		line 3 in file "sysinit.c"
  2659 ;; Parameters:    Size  Location     Type
  2660 ;;		None
  2661 ;; Auto vars:     Size  Location     Type
  2662 ;;		None
  2663 ;; Return value:  Size  Location     Type
  2664 ;;		None               void
  2665 ;; Registers used:
  2666 ;;		wreg
  2667 ;; Tracked objects:
  2668 ;;		On entry : 0/0
  2669 ;;		On exit  : 60/20
  2670 ;;		Unchanged: 0/0
  2671 ;; Data sizes:     COMMON   BANK0   BANK1
  2672 ;;      Params:         0       0       0
  2673 ;;      Locals:         0       0       0
  2674 ;;      Temps:          0       0       0
  2675 ;;      Totals:         0       0       0
  2676 ;;Total ram usage:        0 bytes
  2677 ;; Hardware stack levels used:    1
  2678 ;; Hardware stack levels required when called:    1
  2679 ;; This function calls:
  2680 ;;		Nothing
  2681 ;; This function is called by:
  2682 ;;		_main
  2683 ;; This function uses a non-reentrant model
  2684 ;;
  2685  0483                     _sys_init:	
  2686                           
  2687                           ;sysinit.c: 21: OSCCON = 0B01100001;
  2688                           
  2689                           ; Regs used in _sys_init: [wreg]
  2690  0483  3061               	movlw	97
  2691  0484  1683               	bsf	3,5	;RP0=1, select bank1
  2692  0485  1303               	bcf	3,6	;RP1=0, select bank1
  2693  0486  008F               	movwf	15	;volatile
  2694                           
  2695                           ;sysinit.c: 22: _nop();
  2696  0487  0000               	nop
  2697  0488                     l651:	
  2698                           ;sysinit.c: 28: while(HTS==0);
  2699                           
  2700  0488  1683               	bsf	3,5	;RP0=1, select bank1
  2701  0489  1303               	bcf	3,6	;RP1=0, select bank1
  2702  048A  190F               	btfsc	15,2
  2703  048B  0008               	return
  2704  048C  2C88               	goto	l651
  2705  048D                     __end_of_sys_init:	
  2706                           
  2707                           	psect	text516
  2708  0379                     __ptext516:	
  2709 ;; =============== function _sys_init ends ============
  2710                           
  2711                           
  2712 ;; *************** function ___lbdiv *****************
  2713 ;; Defined at:
  2714 ;;		line 5 in file "D:\OneDrive\SmarRF\MCU\MC82\IDE\ORIGINIDE_V2.0.9\Program Files (x86)\HI-TECH Software\PICC\9.83\sour
      +ces\lbdiv.c"
  2715 ;; Parameters:    Size  Location     Type
  2716 ;;  dividend        1    wreg     unsigned char 
  2717 ;;  divisor         1    2[COMMON] unsigned char 
  2718 ;; Auto vars:     Size  Location     Type
  2719 ;;  dividend        1    3[COMMON] unsigned char 
  2720 ;;  quotient        1    5[COMMON] unsigned char 
  2721 ;;  counter         1    4[COMMON] unsigned char 
  2722 ;; Return value:  Size  Location     Type
  2723 ;;                  1    wreg      unsigned char 
  2724 ;; Registers used:
  2725 ;;		wreg, status,2, status,0
  2726 ;; Tracked objects:
  2727 ;;		On entry : 60/0
  2728 ;;		On exit  : 60/0
  2729 ;;		Unchanged: FFF9F/0
  2730 ;; Data sizes:     COMMON   BANK0   BANK1
  2731 ;;      Params:         1       0       0
  2732 ;;      Locals:         3       0       0
  2733 ;;      Temps:          0       0       0
  2734 ;;      Totals:         4       0       0
  2735 ;;Total ram usage:        4 bytes
  2736 ;; Hardware stack levels used:    1
  2737 ;; Hardware stack levels required when called:    1
  2738 ;; This function calls:
  2739 ;;		Nothing
  2740 ;; This function is called by:
  2741 ;;		_get_RFID
  2742 ;;		_id_search
  2743 ;; This function uses a non-reentrant model
  2744 ;;
  2745  0379                     ___lbdiv:	
  2746                           
  2747                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  2748                           ;___lbdiv@dividend stored from wreg
  2749  0379  00F3               	movwf	___lbdiv@dividend
  2750  037A  01F5               	clrf	___lbdiv@quotient
  2751  037B  0872               	movf	___lbdiv@divisor,w
  2752  037C  1903               	btfsc	3,2
  2753  037D  2B92               	goto	l5440
  2754  037E  01F4               	clrf	___lbdiv@counter
  2755  037F                     l5426:	
  2756  037F  0AF4               	incf	___lbdiv@counter,f
  2757  0380  1BF2               	btfsc	___lbdiv@divisor,7
  2758  0381  2B85               	goto	l4224
  2759  0382  1003               	clrc
  2760  0383  0DF2               	rlf	___lbdiv@divisor,f
  2761  0384  2B7F               	goto	l5426
  2762  0385                     l4224:	
  2763  0385  1003               	clrc
  2764  0386  0DF5               	rlf	___lbdiv@quotient,f
  2765  0387  0872               	movf	___lbdiv@divisor,w
  2766  0388  0273               	subwf	___lbdiv@dividend,w
  2767  0389  1C03               	skipc
  2768  038A  2B8F               	goto	L3
  2769  038B  0872               	movf	___lbdiv@divisor,w
  2770  038C  02F3               	subwf	___lbdiv@dividend,f
  2771  038D  1475               	bsf	___lbdiv@quotient,0
  2772  038E  1003               	clrc
  2773  038F                     L3:	
  2774  038F  0CF2               	rrf	___lbdiv@divisor,f
  2775  0390  0BF4               	decfsz	___lbdiv@counter,f
  2776  0391  2B85               	goto	l4224
  2777  0392                     l5440:	
  2778  0392  0875               	movf	___lbdiv@quotient,w
  2779  0393  0008               	return
  2780  0394                     __end_of___lbdiv:	
  2781                           
  2782                           	psect	text517
  2783  046A                     __ptext517:	
  2784 ;; =============== function ___lbdiv ends ============
  2785                           
  2786                           
  2787 ;; *************** function ___bmul *****************
  2788 ;; Defined at:
  2789 ;;		line 3 in file "D:\OneDrive\SmarRF\MCU\MC82\IDE\ORIGINIDE_V2.0.9\Program Files (x86)\HI-TECH Software\PICC\9.83\sour
      +ces\bmul.c"
  2790 ;; Parameters:    Size  Location     Type
  2791 ;;  multiplier      1    wreg     unsigned char 
  2792 ;;  multiplicand    1    2[COMMON] unsigned char 
  2793 ;; Auto vars:     Size  Location     Type
  2794 ;;  multiplier      1    4[COMMON] unsigned char 
  2795 ;;  product         1    3[COMMON] unsigned char 
  2796 ;; Return value:  Size  Location     Type
  2797 ;;                  1    wreg      unsigned char 
  2798 ;; Registers used:
  2799 ;;		wreg, status,2, status,0
  2800 ;; Tracked objects:
  2801 ;;		On entry : 60/0
  2802 ;;		On exit  : 60/0
  2803 ;;		Unchanged: FFF9F/0
  2804 ;; Data sizes:     COMMON   BANK0   BANK1
  2805 ;;      Params:         1       0       0
  2806 ;;      Locals:         2       0       0
  2807 ;;      Temps:          0       0       0
  2808 ;;      Totals:         3       0       0
  2809 ;;Total ram usage:        3 bytes
  2810 ;; Hardware stack levels used:    1
  2811 ;; Hardware stack levels required when called:    1
  2812 ;; This function calls:
  2813 ;;		Nothing
  2814 ;; This function is called by:
  2815 ;;		_id_replate
  2816 ;; This function uses a non-reentrant model
  2817 ;;
  2818  046A                     ___bmul:	
  2819                           
  2820                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2821                           ;___bmul@multiplier stored from wreg
  2822  046A  00F4               	movwf	___bmul@multiplier
  2823  046B  01F3               	clrf	___bmul@product
  2824  046C                     l5406:	
  2825  046C  0872               	movf	___bmul@multiplicand,w
  2826  046D  1874               	btfsc	___bmul@multiplier,0
  2827  046E  07F3               	addwf	___bmul@product,f
  2828  046F  1003               	clrc
  2829  0470  0DF2               	rlf	___bmul@multiplicand,f
  2830  0471  1003               	clrc
  2831  0472  0CF4               	rrf	___bmul@multiplier,f
  2832  0473  08F4               	movf	___bmul@multiplier,f
  2833  0474  1D03               	skipz
  2834  0475  2C6C               	goto	l5406
  2835  0476  0873               	movf	___bmul@product,w
  2836  0477  0008               	return
  2837  0478                     __end_of___bmul:	
  2838                           
  2839                           	psect	text518
  2840  0478                     __ptext518:	
  2841 ;; =============== function ___bmul ends ============
  2842                           
  2843                           
  2844 ;; *************** function _setState *****************
  2845 ;; Defined at:
  2846 ;;		line 148 in file "MAIN.C"
  2847 ;; Parameters:    Size  Location     Type
  2848 ;;  stt             1    wreg     unsigned char 
  2849 ;;  _tOut           2    2[COMMON] unsigned int 
  2850 ;; Auto vars:     Size  Location     Type
  2851 ;;  stt             1    4[COMMON] unsigned char 
  2852 ;; Return value:  Size  Location     Type
  2853 ;;		None               void
  2854 ;; Registers used:
  2855 ;;		wreg, status,2
  2856 ;; Tracked objects:
  2857 ;;		On entry : 0/20
  2858 ;;		On exit  : 60/0
  2859 ;;		Unchanged: FFF9F/0
  2860 ;; Data sizes:     COMMON   BANK0   BANK1
  2861 ;;      Params:         2       0       0
  2862 ;;      Locals:         1       0       0
  2863 ;;      Temps:          0       0       0
  2864 ;;      Totals:         3       0       0
  2865 ;;Total ram usage:        3 bytes
  2866 ;; Hardware stack levels used:    1
  2867 ;; Hardware stack levels required when called:    1
  2868 ;; This function calls:
  2869 ;;		Nothing
  2870 ;; This function is called by:
  2871 ;;		_main
  2872 ;; This function uses a non-reentrant model
  2873 ;;
  2874  0478                     _setState:	
  2875                           
  2876                           ; Regs used in _setState: [wreg+status,2]
  2877                           ;setState@stt stored from wreg
  2878  0478  00F4               	movwf	setState@stt
  2879                           
  2880                           ;MAIN.C: 150: mtState = stt;
  2881  0479  1283               	bcf	3,5	;RP0=0, select bank0
  2882  047A  1303               	bcf	3,6	;RP1=0, select bank0
  2883  047B  00DD               	movwf	_mtState
  2884                           
  2885                           ;MAIN.C: 151: timeTick =0;
  2886  047C  01DB               	clrf	_timeTick
  2887  047D  01DC               	clrf	_timeTick+1
  2888                           
  2889                           ;MAIN.C: 152: timeOut = _tOut;
  2890  047E  0873               	movf	setState@_tOut+1,w
  2891  047F  00DA               	movwf	_timeOut+1
  2892  0480  0872               	movf	setState@_tOut,w
  2893  0481  00D9               	movwf	_timeOut
  2894  0482  0008               	return
  2895  0483                     __end_of_setState:	
  2896                           
  2897                           	psect	text519
  2898  03C8                     __ptext519:	
  2899 ;; =============== function _setState ends ============
  2900                           
  2901                           
  2902 ;; *************** function _SET_EPWM_ON *****************
  2903 ;; Defined at:
  2904 ;;		line 11 in file "ms82_pwm.c"
  2905 ;; Parameters:    Size  Location     Type
  2906 ;;		None
  2907 ;; Auto vars:     Size  Location     Type
  2908 ;;		None
  2909 ;; Return value:  Size  Location     Type
  2910 ;;		None               void
  2911 ;; Registers used:
  2912 ;;		wreg, status,2
  2913 ;; Tracked objects:
  2914 ;;		On entry : 60/20
  2915 ;;		On exit  : 60/20
  2916 ;;		Unchanged: FFE00/0
  2917 ;; Data sizes:     COMMON   BANK0   BANK1
  2918 ;;      Params:         0       0       0
  2919 ;;      Locals:         0       0       0
  2920 ;;      Temps:          0       0       0
  2921 ;;      Totals:         0       0       0
  2922 ;;Total ram usage:        0 bytes
  2923 ;; Hardware stack levels used:    1
  2924 ;; Hardware stack levels required when called:    1
  2925 ;; This function calls:
  2926 ;;		Nothing
  2927 ;; This function is called by:
  2928 ;;		_main
  2929 ;; This function uses a non-reentrant model
  2930 ;;
  2931  03C8                     _SET_EPWM_ON:	
  2932                           
  2933                           ;ms82_pwm.c: 12: TRISC |= 0b00000100;
  2934                           
  2935                           ; Regs used in _SET_EPWM_ON: [wreg+status,2]
  2936  03C8  1507               	bsf	7,2	;volatile
  2937                           
  2938                           ;ms82_pwm.c: 13: PR2 = 15;
  2939  03C9  300F               	movlw	15
  2940  03CA  0092               	movwf	18	;volatile
  2941                           
  2942                           ;ms82_pwm.c: 14: EPWMR1L =0;
  2943  03CB  1283               	bcf	3,5	;RP0=0, select bank0
  2944  03CC  0193               	clrf	19	;volatile
  2945                           
  2946                           ;ms82_pwm.c: 15: EPWM1CON = 0b10011100;
  2947  03CD  309C               	movlw	156
  2948  03CE  0095               	movwf	21	;volatile
  2949                           
  2950                           ;ms82_pwm.c: 16: TMR2 = 0;
  2951  03CF  0191               	clrf	17	;volatile
  2952  03D0  3004               	movlw	4
  2953                           
  2954                           ;ms82_pwm.c: 17: TMR2IF = 0;
  2955  03D1  108C               	bcf	12,1
  2956                           
  2957                           ;ms82_pwm.c: 18: T2CON = 0B00000100;
  2958  03D2  0092               	movwf	18	;volatile
  2959  03D3                     l2750:	
  2960                           ;ms82_pwm.c: 19: while(TMR2IF==1) asm("clrwdt");
  2961                           
  2962  03D3  1283               	bcf	3,5	;RP0=0, select bank0
  2963  03D4  1303               	bcf	3,6	;RP1=0, select bank0
  2964  03D5  1C8C               	btfss	12,1
  2965  03D6  2BD9               	goto	l5384
  2966  03D7  0064               	clrwdt	;#
  2967  03D8  2BD3               	goto	l2750
  2968  03D9                     l5384:	
  2969                           
  2970                           ;ms82_pwm.c: 20: PWM1CON = 0b00010000;
  2971  03D9  3010               	movlw	16
  2972  03DA  0096               	movwf	22	;volatile
  2973                           
  2974                           ;ms82_pwm.c: 21: EPWM1AUX = 0b10001000;
  2975  03DB  3088               	movlw	136
  2976  03DC  1683               	bsf	3,5	;RP0=1, select bank1
  2977  03DD  0090               	movwf	16	;volatile
  2978                           
  2979                           ;ms82_pwm.c: 22: TRISC &= 0b11111011;
  2980  03DE  1107               	bcf	7,2	;volatile
  2981  03DF  0008               	return
  2982  03E0                     __end_of_SET_EPWM_ON:	
  2983                           
  2984                           	psect	text520
  2985  02FA                     __ptext520:	
  2986 ;; =============== function _SET_EPWM_ON ends ============
  2987                           
  2988                           
  2989 ;; *************** function _timerOut *****************
  2990 ;; Defined at:
  2991 ;;		line 6 in file "rfid125.c"
  2992 ;; Parameters:    Size  Location     Type
  2993 ;;  Logic           1    wreg     unsigned char 
  2994 ;;  time            2    2[COMMON] unsigned int 
  2995 ;; Auto vars:     Size  Location     Type
  2996 ;;  Logic           1    4[COMMON] unsigned char 
  2997 ;;  CurTimer        2    5[COMMON] unsigned int 
  2998 ;; Return value:  Size  Location     Type
  2999 ;;                  2    2[COMMON] unsigned int 
  3000 ;; Registers used:
  3001 ;;		wreg, status,2
  3002 ;; Tracked objects:
  3003 ;;		On entry : 60/0
  3004 ;;		On exit  : 60/0
  3005 ;;		Unchanged: FFF9F/0
  3006 ;; Data sizes:     COMMON   BANK0   BANK1
  3007 ;;      Params:         2       0       0
  3008 ;;      Locals:         3       0       0
  3009 ;;      Temps:          0       0       0
  3010 ;;      Totals:         5       0       0
  3011 ;;Total ram usage:        5 bytes
  3012 ;; Hardware stack levels used:    1
  3013 ;; Hardware stack levels required when called:    1
  3014 ;; This function calls:
  3015 ;;		Nothing
  3016 ;; This function is called by:
  3017 ;;		_get_RFID
  3018 ;; This function uses a non-reentrant model
  3019 ;;
  3020  02FA                     _timerOut:	
  3021                           
  3022                           ; Regs used in _timerOut: [wreg+status,2]
  3023                           ;timerOut@Logic stored from wreg
  3024  02FA  00F4               	movwf	timerOut@Logic
  3025                           
  3026                           ;rfid125.c: 7: unsigned int CurTimer;
  3027                           ;rfid125.c: 8: TMR1ON = 0;
  3028  02FB  1010               	bcf	16,0
  3029                           
  3030                           ;rfid125.c: 9: TMR1H = 0;
  3031  02FC  018F               	clrf	15	;volatile
  3032                           
  3033                           ;rfid125.c: 10: TMR1L = 0;
  3034  02FD  018E               	clrf	14	;volatile
  3035                           
  3036                           ;rfid125.c: 11: TMR1IF = 0;
  3037  02FE  100C               	bcf	12,0
  3038                           
  3039                           ;rfid125.c: 12: TMR1ON = 1;
  3040  02FF  1410               	bsf	16,0
  3041  0300                     l5366:	
  3042                           ;rfid125.c: 13: while(RA4==Logic){
  3043                           
  3044  0300  3000               	movlw	0
  3045  0301  1A05               	btfsc	5,4
  3046  0302  3001               	movlw	1
  3047  0303  0674               	xorwf	timerOut@Logic,w
  3048  0304  1D03               	btfss	3,2
  3049  0305  2B16               	goto	l5368
  3050                           
  3051                           ;rfid125.c: 14: CurTimer= (TMR1H <<8 )| TMR1L;
  3052  0306  080F               	movf	15,w	;volatile
  3053  0307  00F6               	movwf	timerOut@CurTimer+1
  3054  0308  01F5               	clrf	timerOut@CurTimer
  3055  0309  080E               	movf	14,w	;volatile
  3056  030A  04F5               	iorwf	timerOut@CurTimer,f
  3057                           
  3058                           ;rfid125.c: 15: if(CurTimer>time)
  3059  030B  0876               	movf	timerOut@CurTimer+1,w
  3060  030C  0273               	subwf	timerOut@time+1,w
  3061  030D  1D03               	skipz
  3062  030E  2B11               	goto	u945
  3063  030F  0875               	movf	timerOut@CurTimer,w
  3064  0310  0272               	subwf	timerOut@time,w
  3065  0311                     u945:	
  3066  0311  1803               	skipnc
  3067  0312  2B00               	goto	l5366
  3068                           
  3069                           ;rfid125.c: 16: return 0;
  3070  0313  01F2               	clrf	?_timerOut
  3071  0314  01F3               	clrf	?_timerOut+1
  3072  0315  0008               	return
  3073  0316                     l5368:	
  3074                           
  3075                           ;rfid125.c: 17: }
  3076                           ;rfid125.c: 18: return CurTimer;
  3077  0316  0876               	movf	timerOut@CurTimer+1,w
  3078  0317  00F3               	movwf	?_timerOut+1
  3079  0318  0875               	movf	timerOut@CurTimer,w
  3080  0319  00F2               	movwf	?_timerOut
  3081  031A  0008               	return
  3082  031B                     __end_of_timerOut:	
  3083                           
  3084                           	psect	text521
  3085  035A                     __ptext521:	
  3086 ;; =============== function _timerOut ends ============
  3087                           
  3088                           
  3089 ;; *************** function _comArr *****************
  3090 ;; Defined at:
  3091 ;;		line 52 in file "ms82_eeprom.c"
  3092 ;; Parameters:    Size  Location     Type
  3093 ;;  arr1            1    wreg     PTR unsigned char 
  3094 ;;		 -> keyID(5), 
  3095 ;;  arr2            1    2[COMMON] PTR unsigned char 
  3096 ;;		 -> buffTag(25), 
  3097 ;;  len1            1    3[COMMON] unsigned char 
  3098 ;;  len2            1    4[COMMON] unsigned char 
  3099 ;; Auto vars:     Size  Location     Type
  3100 ;;  arr1            1    8[COMMON] PTR unsigned char 
  3101 ;;		 -> keyID(5), 
  3102 ;;  i               1    9[COMMON] unsigned char 
  3103 ;; Return value:  Size  Location     Type
  3104 ;;                  1    wreg      unsigned char 
  3105 ;; Registers used:
  3106 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3107 ;; Tracked objects:
  3108 ;;		On entry : 60/0
  3109 ;;		On exit  : 60/0
  3110 ;;		Unchanged: FFE9F/0
  3111 ;; Data sizes:     COMMON   BANK0   BANK1
  3112 ;;      Params:         3       0       0
  3113 ;;      Locals:         2       0       0
  3114 ;;      Temps:          3       0       0
  3115 ;;      Totals:         8       0       0
  3116 ;;Total ram usage:        8 bytes
  3117 ;; Hardware stack levels used:    1
  3118 ;; Hardware stack levels required when called:    1
  3119 ;; This function calls:
  3120 ;;		Nothing
  3121 ;; This function is called by:
  3122 ;;		_id_search
  3123 ;; This function uses a non-reentrant model
  3124 ;;
  3125  035A                     _comArr:	
  3126                           
  3127                           ; Regs used in _comArr: [wreg-fsr0h+status,2+status,0]
  3128                           ;comArr@arr1 stored from wreg
  3129  035A  00F8               	movwf	comArr@arr1
  3130                           
  3131                           ;ms82_eeprom.c: 53: unsigned char i;
  3132                           ;ms82_eeprom.c: 55: if(len1!=len2)
  3133  035B  0873               	movf	comArr@len1,w
  3134  035C  0674               	xorwf	comArr@len2,w
  3135  035D  1D03               	btfss	3,2
  3136                           
  3137                           ;ms82_eeprom.c: 56: return 0;
  3138  035E  3400               	retlw	0
  3139                           
  3140                           ;ms82_eeprom.c: 57: else{
  3141                           ;ms82_eeprom.c: 58: for(i=0;i<len1;i++){
  3142  035F  01F9               	clrf	comArr@i
  3143  0360                     l5338:	
  3144  0360  0873               	movf	comArr@len1,w
  3145  0361  0279               	subwf	comArr@i,w
  3146                           
  3147                           ;ms82_eeprom.c: 59: if(*(arr1+i) != *(arr2+i)){
  3148  0362  0879               	movf	comArr@i,w
  3149  0363  1803               	btfsc	3,0
  3150  0364  2B75               	goto	L4
  3151  0365  0772               	addwf	comArr@arr2,w
  3152  0366  00F5               	movwf	??_comArr
  3153  0367  0084               	movwf	4
  3154  0368  1383               	bcf	3,7	;select IRP bank0
  3155  0369  0800               	movf	0,w
  3156  036A  00F6               	movwf	??_comArr+1
  3157  036B  0879               	movf	comArr@i,w
  3158  036C  0778               	addwf	comArr@arr1,w
  3159  036D  00F7               	movwf	??_comArr+2
  3160  036E  0084               	movwf	4
  3161  036F  0800               	movf	0,w
  3162  0370  0676               	xorwf	??_comArr+1,w
  3163  0371  1D03               	btfss	3,2
  3164  0372  3400               	retlw	0
  3165  0373  0AF9               	incf	comArr@i,f
  3166  0374  2B60               	goto	l5338
  3167  0375                     L4:	
  3168                           ;ms82_eeprom.c: 61: }
  3169                           ;ms82_eeprom.c: 62: }
  3170                           ;ms82_eeprom.c: 63: if(i==len1)
  3171                           
  3172  0375  0673               	xorwf	comArr@len1,w
  3173  0376  1903               	btfsc	3,2
  3174                           
  3175                           ;ms82_eeprom.c: 64: return 1;
  3176  0377  3401               	retlw	1
  3177  0378  3400               	retlw	0
  3178  0379                     __end_of_comArr:	
  3179                           
  3180                           	psect	text522
  3181  0497                     __ptext522:	
  3182 ;; =============== function _comArr ends ============
  3183                           
  3184                           
  3185 ;; *************** function _eepromReadByte *****************
  3186 ;; Defined at:
  3187 ;;		line 7 in file "ms82_eeprom.c"
  3188 ;; Parameters:    Size  Location     Type
  3189 ;;  EEAddr          1    wreg     unsigned char 
  3190 ;; Auto vars:     Size  Location     Type
  3191 ;;  EEAddr          1    2[COMMON] unsigned char 
  3192 ;;  ReEepromData    1    3[COMMON] unsigned char 
  3193 ;; Return value:  Size  Location     Type
  3194 ;;                  1    wreg      unsigned char 
  3195 ;; Registers used:
  3196 ;;		wreg
  3197 ;; Tracked objects:
  3198 ;;		On entry : 0/20
  3199 ;;		On exit  : 60/20
  3200 ;;		Unchanged: FFF9F/0
  3201 ;; Data sizes:     COMMON   BANK0   BANK1
  3202 ;;      Params:         0       0       0
  3203 ;;      Locals:         2       0       0
  3204 ;;      Temps:          0       0       0
  3205 ;;      Totals:         2       0       0
  3206 ;;Total ram usage:        2 bytes
  3207 ;; Hardware stack levels used:    1
  3208 ;; Hardware stack levels required when called:    1
  3209 ;; This function calls:
  3210 ;;		Nothing
  3211 ;; This function is called by:
  3212 ;;		_eepromReadBlock
  3213 ;;		_main
  3214 ;; This function uses a non-reentrant model
  3215 ;;
  3216  0497                     _eepromReadByte:	
  3217                           
  3218                           ; Regs used in _eepromReadByte: [wreg]
  3219                           ;eepromReadByte@EEAddr stored from wreg
  3220  0497  00F2               	movwf	eepromReadByte@EEAddr
  3221                           
  3222                           ;ms82_eeprom.c: 8: unsigned char ReEepromData;
  3223                           ;ms82_eeprom.c: 10: EEADR = EEAddr;
  3224  0498  1683               	bsf	3,5	;RP0=1, select bank1
  3225  0499  1303               	bcf	3,6	;RP1=0, select bank1
  3226  049A  009B               	movwf	27	;volatile
  3227                           
  3228                           ;ms82_eeprom.c: 11: RD = 1;
  3229  049B  141C               	bsf	28,0
  3230                           
  3231                           ;ms82_eeprom.c: 12: ReEepromData = EEDAT;
  3232  049C  081A               	movf	26,w	;volatile
  3233  049D  00F3               	movwf	eepromReadByte@ReEepromData
  3234                           
  3235                           ;ms82_eeprom.c: 13: RD = 0;
  3236  049E  101C               	bcf	28,0
  3237                           
  3238                           ;ms82_eeprom.c: 14: return ReEepromData;
  3239  049F  0008               	return
  3240  04A0                     __end_of_eepromReadByte:	
  3241                           
  3242                           	psect	text523
  3243  0408                     __ptext523:	
  3244 ;; =============== function _eepromReadByte ends ============
  3245                           
  3246                           
  3247 ;; *************** function _int_init *****************
  3248 ;; Defined at:
  3249 ;;		line 66 in file "sysinit.c"
  3250 ;; Parameters:    Size  Location     Type
  3251 ;;		None
  3252 ;; Auto vars:     Size  Location     Type
  3253 ;;		None
  3254 ;; Return value:  Size  Location     Type
  3255 ;;		None               void
  3256 ;; Registers used:
  3257 ;;		status,2
  3258 ;; Tracked objects:
  3259 ;;		On entry : 60/0
  3260 ;;		On exit  : 60/20
  3261 ;;		Unchanged: FFF9F/0
  3262 ;; Data sizes:     COMMON   BANK0   BANK1
  3263 ;;      Params:         0       0       0
  3264 ;;      Locals:         0       0       0
  3265 ;;      Temps:          0       0       0
  3266 ;;      Totals:         0       0       0
  3267 ;;Total ram usage:        0 bytes
  3268 ;; Hardware stack levels used:    1
  3269 ;; Hardware stack levels required when called:    1
  3270 ;; This function calls:
  3271 ;;		Nothing
  3272 ;; This function is called by:
  3273 ;;		_main
  3274 ;; This function uses a non-reentrant model
  3275 ;;
  3276  0408                     _int_init:	
  3277                           
  3278                           ;sysinit.c: 71: INTCON = 0B00000000;
  3279                           
  3280                           ; Regs used in _int_init: [status,2]
  3281  0408  018B               	clrf	11	;volatile
  3282                           
  3283                           ;sysinit.c: 72: PIE1 = 0B00000000;
  3284  0409  1683               	bsf	3,5	;RP0=1, select bank1
  3285  040A  018C               	clrf	12	;volatile
  3286                           
  3287                           ;sysinit.c: 73: PIR1 = 0B00000000;
  3288  040B  1283               	bcf	3,5	;RP0=0, select bank0
  3289  040C  018C               	clrf	12	;volatile
  3290                           
  3291                           ;sysinit.c: 85: T0IF = 0;
  3292  040D  110B               	bcf	11,2
  3293                           
  3294                           ;sysinit.c: 86: T0IE = 0;
  3295  040E  128B               	bcf	11,5
  3296                           
  3297                           ;sysinit.c: 87: TMR1ON = 0;
  3298  040F  1010               	bcf	16,0
  3299                           
  3300                           ;sysinit.c: 89: TMR2IF = 0;
  3301  0410  108C               	bcf	12,1
  3302                           
  3303                           ;sysinit.c: 90: TMR2IE = 0;
  3304  0411  1683               	bsf	3,5	;RP0=1, select bank1
  3305  0412  108C               	bcf	12,1
  3306                           
  3307                           ;sysinit.c: 93: TMR1IF = 0;
  3308  0413  1283               	bcf	3,5	;RP0=0, select bank0
  3309  0414  100C               	bcf	12,0
  3310                           
  3311                           ;sysinit.c: 94: TMR1IE = 0;
  3312  0415  1683               	bsf	3,5	;RP0=1, select bank1
  3313  0416  100C               	bcf	12,0
  3314                           
  3315                           ;sysinit.c: 96: PEIE = 0;
  3316  0417  130B               	bcf	11,6
  3317                           
  3318                           ;sysinit.c: 98: GIE = 1;
  3319  0418  178B               	bsf	11,7
  3320  0419  0008               	return
  3321  041A                     __end_of_int_init:	
  3322                           
  3323                           	psect	text524
  3324  048D                     __ptext524:	
  3325 ;; =============== function _int_init ends ============
  3326                           
  3327                           
  3328 ;; *************** function _timer_init *****************
  3329 ;; Defined at:
  3330 ;;		line 44 in file "sysinit.c"
  3331 ;; Parameters:    Size  Location     Type
  3332 ;;		None
  3333 ;; Auto vars:     Size  Location     Type
  3334 ;;		None
  3335 ;; Return value:  Size  Location     Type
  3336 ;;		None               void
  3337 ;; Registers used:
  3338 ;;		wreg
  3339 ;; Tracked objects:
  3340 ;;		On entry : 60/20
  3341 ;;		On exit  : 60/0
  3342 ;;		Unchanged: FFF9F/0
  3343 ;; Data sizes:     COMMON   BANK0   BANK1
  3344 ;;      Params:         0       0       0
  3345 ;;      Locals:         0       0       0
  3346 ;;      Temps:          0       0       0
  3347 ;;      Totals:         0       0       0
  3348 ;;Total ram usage:        0 bytes
  3349 ;; Hardware stack levels used:    1
  3350 ;; Hardware stack levels required when called:    1
  3351 ;; This function calls:
  3352 ;;		Nothing
  3353 ;; This function is called by:
  3354 ;;		_main
  3355 ;; This function uses a non-reentrant model
  3356 ;;
  3357  048D                     _timer_init:	
  3358                           
  3359                           ;sysinit.c: 46: OPTION = 0B00000001;
  3360                           
  3361                           ; Regs used in _timer_init: [wreg]
  3362  048D  3001               	movlw	1
  3363  048E  0081               	movwf	1	;volatile
  3364                           
  3365                           ;sysinit.c: 59: TMR1H = -5000>>8;
  3366  048F  30EC               	movlw	236
  3367  0490  1283               	bcf	3,5	;RP0=0, select bank0
  3368  0491  008F               	movwf	15	;volatile
  3369                           
  3370                           ;sysinit.c: 60: TMR1L = -5000;
  3371  0492  3078               	movlw	120
  3372  0493  008E               	movwf	14	;volatile
  3373                           
  3374                           ;sysinit.c: 61: T1CON = 0B00100001;
  3375  0494  3021               	movlw	33
  3376  0495  0090               	movwf	16	;volatile
  3377  0496  0008               	return
  3378  0497                     __end_of_timer_init:	
  3379                           
  3380                           	psect	text525
  3381  045B                     __ptext525:	
  3382 ;; =============== function _timer_init ends ============
  3383                           
  3384                           
  3385 ;; *************** function _gpio_init *****************
  3386 ;; Defined at:
  3387 ;;		line 32 in file "sysinit.c"
  3388 ;; Parameters:    Size  Location     Type
  3389 ;;		None
  3390 ;; Auto vars:     Size  Location     Type
  3391 ;;		None
  3392 ;; Return value:  Size  Location     Type
  3393 ;;		None               void
  3394 ;; Registers used:
  3395 ;;		wreg, status,2
  3396 ;; Tracked objects:
  3397 ;;		On entry : 60/20
  3398 ;;		On exit  : 60/20
  3399 ;;		Unchanged: FFF9F/0
  3400 ;; Data sizes:     COMMON   BANK0   BANK1
  3401 ;;      Params:         0       0       0
  3402 ;;      Locals:         0       0       0
  3403 ;;      Temps:          0       0       0
  3404 ;;      Totals:         0       0       0
  3405 ;;Total ram usage:        0 bytes
  3406 ;; Hardware stack levels used:    1
  3407 ;; Hardware stack levels required when called:    1
  3408 ;; This function calls:
  3409 ;;		Nothing
  3410 ;; This function is called by:
  3411 ;;		_main
  3412 ;; This function uses a non-reentrant model
  3413 ;;
  3414  045B                     _gpio_init:	
  3415                           
  3416                           ;sysinit.c: 34: PORTA = 0B00000000;
  3417                           
  3418                           ; Regs used in _gpio_init: [wreg+status,2]
  3419  045B  1283               	bcf	3,5	;RP0=0, select bank0
  3420  045C  0185               	clrf	5	;volatile
  3421                           
  3422                           ;sysinit.c: 35: TRISA = 0B01110111;
  3423  045D  3077               	movlw	119
  3424  045E  1683               	bsf	3,5	;RP0=1, select bank1
  3425  045F  0085               	movwf	5	;volatile
  3426                           
  3427                           ;sysinit.c: 36: WPUA = 0B10010000;
  3428  0460  3090               	movlw	144
  3429  0461  0095               	movwf	21	;volatile
  3430                           
  3431                           ;sysinit.c: 37: PORTC = 0B00000010;
  3432  0462  3002               	movlw	2
  3433  0463  1283               	bcf	3,5	;RP0=0, select bank0
  3434  0464  0087               	movwf	7	;volatile
  3435                           
  3436                           ;sysinit.c: 38: TRISC = 0B11111110;
  3437  0465  30FE               	movlw	254
  3438  0466  1683               	bsf	3,5	;RP0=1, select bank1
  3439  0467  0087               	movwf	7	;volatile
  3440                           
  3441                           ;sysinit.c: 39: WPUC = 0B00000000;
  3442  0468  0188               	clrf	8	;volatile
  3443  0469  0008               	return
  3444  046A                     __end_of_gpio_init:	
  3445                           
  3446                           	psect	text526
  3447  042B                     __ptext526:	
  3448 ;; =============== function _gpio_init ends ============
  3449                           
  3450                           
  3451 ;; *************** function _ISR *****************
  3452 ;; Defined at:
  3453 ;;		line 87 in file "MAIN.C"
  3454 ;; Parameters:    Size  Location     Type
  3455 ;;		None
  3456 ;; Auto vars:     Size  Location     Type
  3457 ;;		None
  3458 ;; Return value:  Size  Location     Type
  3459 ;;		None               void
  3460 ;; Registers used:
  3461 ;;		wreg
  3462 ;; Tracked objects:
  3463 ;;		On entry : 0/0
  3464 ;;		On exit  : 0/0
  3465 ;;		Unchanged: FFF9F/0
  3466 ;; Data sizes:     COMMON   BANK0   BANK1
  3467 ;;      Params:         0       0       0
  3468 ;;      Locals:         0       0       0
  3469 ;;      Temps:          2       0       0
  3470 ;;      Totals:         2       0       0
  3471 ;;Total ram usage:        2 bytes
  3472 ;; Hardware stack levels used:    1
  3473 ;; This function calls:
  3474 ;;		Nothing
  3475 ;; This function is called by:
  3476 ;;		Interrupt level 1
  3477 ;; This function uses a non-reentrant model
  3478 ;;
  3479  042B                     _ISR:	
  3480                           
  3481                           ;MAIN.C: 113: if(T0IE&&T0IF)
  3482  042B  1A8B               	btfsc	11,5
  3483  042C  1D0B               	btfss	11,2
  3484  042D  2C35               	goto	i1l3451
  3485                           
  3486                           ;MAIN.C: 114: {
  3487                           ;MAIN.C: 115: T0IF = 0;
  3488  042E  110B               	bcf	11,2
  3489                           
  3490                           ;MAIN.C: 117: TMR0 = buzFre;
  3491  042F  1283               	bcf	3,5	;RP0=0, select bank0
  3492  0430  1303               	bcf	3,6	;RP1=0, select bank0
  3493  0431  0825               	movf	_buzFre,w
  3494  0432  0081               	movwf	1	;volatile
  3495                           
  3496                           ;MAIN.C: 118: RC0 = ~RC0;
  3497  0433  3001               	movlw	1
  3498  0434  0687               	xorwf	7,f
  3499  0435                     i1l3451:	
  3500  0435  0871               	movf	??_ISR+1,w
  3501  0436  008A               	movwf	10
  3502  0437  0E70               	swapf	??_ISR^(0+-128),w
  3503  0438  0083               	movwf	3
  3504  0439  0EFE               	swapf	126,f
  3505  043A  0E7E               	swapf	126,w
  3506  043B  0009               	retfie
  3507  043C                     __end_of_ISR:	
  3508                           
  3509                           	psect	intentry
  3510  0004                     __pintentry:	
  3511                           ; Regs used in _ISR: [wreg]
  3512                           
  3513  0004                     interrupt_function:	
  3514  007E                     saved_w	set	btemp
  3515  0004  00FE               	movwf	btemp
  3516  0005  0E03               	swapf	3,w
  3517  0006  00F0               	movwf	??_ISR
  3518  0007  080A               	movf	10,w
  3519  0008  00F1               	movwf	??_ISR+1
  3520  0009  2C2B               	ljmp	_ISR
  3521                           
  3522                           	psect	text527
  3523  0000                     __ptext527:	
  3524 ;; =============== function _ISR ends ============
  3525                           
  3526  007E                     btemp	set	126	;btemp
  3527  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Sat Feb 22 08:56:13 2020

                         pc 0002              ___bmul@product 0073                          _RD 04E0  
                        _WR 04E8                          fsr 0004                         l651 0488  
                       l660 0000                         l654 0000                         l663 0000  
                       l657 0000                         _GIE 005F                         _RA3 002B  
                       _RC0 0038                         _RA4 002C                         _PR2 0092  
                       _HTS 047A                         _ISR 042B                         _SR0 0CF6  
                       _SR1 0CF7                         u945 0311                         fsr0 0004  
                       indf 0000            get_RFID@even_col 004B            get_RFID@even_row 004C  
               main@idState 0056                        S5954 04A0                        ?_ISR 0070  
                      l1322 0000                        l1331 0000                        l2051 0028  
                      l1316 0000                        l1325 02D9                        l2070 0075  
                      l1328 02E9                        l1337 0000                        l2091 00D3  
                      l4224 0385                        l3441 0000                        l4227 0000  
                      l5300 0000                        l3516 0282                        l5310 0000  
                      l5302 0000                        l2750 03D3                        l3454 0000  
                      l3446 03AC                        l3518 0296                        l4191 0000  
                      l3447 0000                        l3463 0000                        l3471 0000  
                      l5304 0000                        l5312 0000                        l5320 0000  
                      l5400 0000                        l2753 0000                        l5306 0000  
                      l5314 0000                        l5402 0000                        l3491 0237  
                      l5308 0000                        l5316 0000                        l5412 0000  
                      l5404 0000                        l5420 0000                        l5414 0000  
                      l5406 046C                        l5430 0000                        l5422 0000  
                      l5502 0030                        l5280 0000                        l5352 0000  
                      l5424 0000                        l5440 0392                        l5504 0000  
                      l5282 0000                        l5290 0000                        l5338 0360  
                      l5354 0000                        l5434 0000                        l5426 037F  
                      l5602 00B0                        l5530 0000                        l5522 0000  
                      l5514 003F                        l5284 0000                        l5292 0000  
                      l5356 0000                        l5380 0000                        l5372 0000  
                      l5444 0000                        l5452 0000                        l5460 0000  
                      l5620 0000                        l5612 00C1                        l5604 0000  
                      l5540 0069                        l5516 0000                        l5532 0056  
                      l5286 0000                        l5294 0000                        l5366 0300  
                      l5358 0000                        l5382 0000                        l5374 0000  
                      l5438 0000                        l5446 0000                        l5454 041C  
                      l5462 0000                        l5630 0000                        l5614 0000  
                      l5606 0000                        l5550 0000                        l5542 0000  
                      l5518 0048                        l5470 0000                        l5710 0000  
                      l5702 03B0                        l5288 0000                        l5296 0000  
                      l5368 0316                        l5384 03D9                        l5376 0000  
                      l5448 0000                        l5464 02EF                        l5456 0000  
                      l5640 00E1                        l5616 00CA                        l5608 00B7  
                      l5544 0000                        l5536 0060                        l5552 0079  
                      l5528 0053                        l5560 002B                        l5472 000E  
                      l5720 0000                        l5800 0000                        l5298 0000  
                      l5386 0000                        l5378 0000                        l5466 0000  
                      l5458 02DD                        l5650 00EB                        l5642 0000  
                      l5626 0000                        l5618 0000                        l5562 0084  
                      l5554 0000                        l5538 0000                        l5490 0000  
                      l5482 0000                        l5474 0000                        l5722 03F8  
                      l5730 0000                        l5810 0000                        l5802 01A6  
                      l5652 0000                        l5644 0000                        l5628 00D6  
                      l5556 007E                        l5468 0000                        l5716 0000  
                      l5732 0000                        l5724 0000                        l5740 0000  
                      l5900 027D                        l5820 0000                        l5812 0000  
                      l5398 0000                        l5670 0127                        l5662 0000  
                      l5654 0000                        l5590 0000                        l5574 0088  
                      l5494 0000                        l5734 0000                        l5726 0000  
                      l5750 0000                        l5742 0000                        l5830 01D8  
                      l5814 0000                        l5672 0000                        l5592 00A5  
                      l5576 0000                        l5736 0000                        l5728 0000  
                      l5752 0000                        l5744 0000                        l5760 032D  
                      l5904 0283                        l5840 0000                        l5824 0000  
                      l5816 0000                        l5808 01B3                        l5674 0000  
                      l5666 011D                        l5578 0000                        l5690 0000  
                      l5738 0397                        l5746 0000                        l5754 0000  
                      l5914 0293                        l5842 01ED                        l5826 0000  
                      l5818 01C4                        l5770 0000                        l5762 0000  
                      l5676 0000                        l5668 0000                        l5596 0000  
                      l5588 009C                        l5748 0000                        l5916 0298  
                      l5908 0000                        l5852 0000                        l5836 0000  
                      l5828 0000                        l5780 0000                        l5772 0000  
                      l5764 0000                        l5678 0000                        l5694 043D  
                      l5758 0000                        l5870 0000                        l5854 0000  
                      l5838 0000                        l5790 018F                        l5782 0000  
                      l5774 0000                        l5766 0000                        l5696 0000  
                      l5864 0000                        l5872 0227                        l5848 0000  
                      l5856 0207                        l5880 0245                        l5792 0000  
                      l5784 0000                        l5776 0000                        l5768 0000  
                      l5890 0261                        l5882 0000                        l5858 020C  
                      l5794 0000                        l5786 0000                        l5778 0000  
                      l5892 0267                        l5884 0252                        l5868 0000  
                      l5876 022C                        l5796 019B                        l5894 026D  
                      l5878 0000                        l5798 0000                        l5898 0272  
                      _EEIF 0067                        _T0IE 005D                        _T0IF 005A  
                      u1454 00F4                        u1455 00F2                        u1807 023F  
                      _PIE1 008C                        u1745 025E                        u1817 024C  
                      u1827 0446                        u1837 02F3                        _PEIE 005E  
                      u1797 0173                        _PIR1 000C                        _TMR0 0001  
                      _TMR2 0011                        _STRA 0CE8                        _STRB 0CE9  
                      _STRC 0CEA                        _STRD 0CEB                        _WREN 0C62  
                      _WPUA 0095                        _WPUC 0088                        _beep 0394  
                      _main 0158                        btemp 007E                        start 000A  
         ___bmul@multiplier 0074                       ??_ISR 0070                       ?_beep 0075  
                     _C1SEN 0CF5                       _C2REN 0CF4                       ?_main 0070  
           __end_of___lbdiv 0394                       _EEADR 009B                       _EEDAT 009A  
                     _EEPGD 0C67                       _T1CON 0010                       _T2CON 0012  
                     _TMR1H 000F                       _TMR1L 000E                       _PORTA 0005  
                     _PORTC 0007                       _SRCON 019E                       _PULSR 0CF2  
                     _PULSS 0CF3                       _TRISA 0085                       _TRISC 0087  
  __size_of_eepromReadBlock 0011                       _keyID 005E                       pclath 000A  
                     status 0003                       wtemp0 007E             ___lbdiv@divisor 0072  
           ___lbdiv@counter 0074        __size_of_delay_x10ms 0010            ??_eepromReadByte 0072  
          _eepromWriteBlock 03F6                __end_of_beep 03AE                __end_of_main 029C  
                    ??_beep 0076                      ??_main 0053            eepromReadBlock@i 0078  
                    _EECON1 009C    __size_of_eepromWriteByte 0023                      i1l3451 0435  
                    i1l5394 0000                      i1l5388 0000                      _INTCON 000B  
                    _OSCCON 008F                      _TMR1IE 0460                      _TMR1IF 0060  
                    _TMR2IE 0461                      _TMR2IF 0061                      _OPTION 0081  
                    _TMR1ON 0080                ?_SET_EPWM_ON 0070            __end_of_get_RFID 0141  
          __end_of_id_clear 033B          get_RFID@timeOutVal 0050                      ___bmul 046A  
                 ??___lbdiv 0073                      _comArr 035A                      _buzFre 0025  
          __end_of_int_init 041A            __end_of_setState 0483                      saved_w 007E  
          __end_of_timerOut 031B         eepromReadBlock@buff 0074            ___lbdiv@dividend 0073  
          __end_of_sys_init 048D           ??_eepromReadBlock 0076         ___bmul@multiplicand 0072  
            __pcstackCOMMON 0070                __pidataBANK0 033B            ___lbdiv@quotient 0075  
        __size_of_id_search 001A                  __pbssBANK0 0059          __size_of_gpio_init 000F  
         ??_eepromWriteByte 0073                  __pmaintext 0158                     ?___bmul 0072  
                   ?_comArr 0072                  __pintentry 0004                  _id_replate 029C  
                   _EPWMR1L 0013                   ?_get_RFID 0070                   ?_id_clear 0043  
                   _PWM1CON 0016    __end_of_eepromWriteBlock 0408                     _PSTRCON 019D  
                   _STRSYNC 0CEC                   ?_int_init 0070    get_RFID@RF_serial_55bits 003F  
         __end_of_id_search 03C8                 setState@stt 0074        __size_of_SET_EPWM_ON 0018  
                 ?_setState 0072                   ?_timerOut 0072             __size_of___bmul 000E  
                   ___lbdiv 0379             __size_of_comArr 001F                     _buffTag 0026  
                   beep@rep 0075           __end_of_gpio_init 046A                   ?_sys_init 0070  
              __size_of_ISR 0011                     _mtState 005D                     comArr@i 0079  
                ??_get_RFID 0077                  ??_id_clear 007C                     _timeOut 0059  
                comArr@arr1 0078                  comArr@arr2 0072                  comArr@len1 0073  
                comArr@len2 0074                     main@tmp 0057        end_of_initialization 03F4  
             ??_delay_x10ms 0072                     init_ram 0450                  get_RFID@ii 0052  
                ??_int_init 0072                  ??_setState 0074         eepromWriteBlock@len 0077  
                ??_timerOut 0074       get_RFID@flag_RFID_syn 004A                  id_search@i 0040  
                _timer_init 048D                 ?_id_replate 003F                  ??_sys_init 0072  
           _eepromReadBlock 041A         __end_of_delay_x10ms 044C              __end_of___bmul 0478  
            __end_of_comArr 0379     __size_of_eepromReadByte 0009        eepromReadByte@EEAddr 0072  
       start_initialization 03E0                 __end_of_ISR 043C             _eepromWriteByte 02D7  
             setState@_tOut 0072  eepromReadByte@ReEepromData 0073         __size_of_id_replate 0034  
                  ??___bmul 0073                    ??_comArr 0075                 __pdataBANK0 0020  
   __end_of_eepromReadBlock 042B                 ?_timer_init 0070          eepromReadBlock@len 0075  
             __pcstackBANK0 003F               id_clear@idMax 0043               id_clear@idMin 0049  
         ?_eepromWriteBlock 0076           __size_of_get_RFID 0136           __size_of_id_clear 0020  
        ??_eepromWriteBlock 0078                 _delay_x10ms 043C           __size_of_int_init 0012  
                  ?___lbdiv 0072           __size_of_setState 000B                   __ptext510 03AE  
                 __ptext511 043C                   __ptext520 02FA                   __ptext512 000B  
                 __ptext521 035A                   __ptext513 02D7                   __ptext522 0497  
                 __ptext514 041A                   __ptext506 031B                   __ptext523 0408  
                 __ptext515 0483                   __ptext507 029C                   __ptext524 048D  
                 __ptext516 0379                   __ptext508 0394                   __ptext525 045B  
                 __ptext517 046A                   __ptext509 03F6                   __ptext526 042B  
                 __ptext518 0478                   __ptext527 0000                   __ptext519 03C8  
                 _id_search 03AE                   beep@delay 0076           __size_of_timerOut 0021  
                 __pswtext1 04A0     __end_of_eepromWriteByte 02FA           __size_of_sys_init 000A  
                 _gpio_init 045B                    _EPWM1CON 0015                    _EPWM1AUX 0090  
         interrupt_function 0004               ??_SET_EPWM_ON 0072         __size_of_timer_init 000A  
                 get_RFID@i 004E                   get_RFID@j 004D                  ?_id_search 007A  
              delay_x10ms@t 0074            timerOut@CurTimer 0075              _eepromReadByte 0497  
          ?_eepromReadBlock 0074                ??_id_replate 0041                  ?_gpio_init 0070  
        __end_of_id_replate 02D0                   init_fetch 044C         __end_of_SET_EPWM_ON 03E0  
            id_replate@Cont 003F      __end_of_eepromReadByte 04A0                id_clear@F962 0020  
          __size_of___lbdiv 001B              id_replate@buff 0040           id_search@id_input 003F  
          ?_eepromWriteByte 0072     eepromReadBlock@addStart 0077                    _get_RFID 000B  
                  _id_clear 031B               __size_of_beep 001A               __size_of_main 0144  
                  _int_init 0408               id_search@buff 007A                    _setState 0478  
         eepromWriteBlock@i 007A                    _timeTick 005B                    _timerOut 02FA  
               ??_id_search 007B             ?_eepromReadByte 0070                    main@idop 0058  
              ??_timer_init 0072                    _sys_init 0483    eepromWriteBlock@addStart 0079  
               ??_gpio_init 0072                 id_clear@tmp 0044                    intlevel1 0000  
              ?_delay_x10ms 0070                 _SET_EPWM_ON 03C8          __end_of_timer_init 0497  
      eepromWriteBlock@buff 0076   __size_of_eepromWriteBlock 0012       eepromWriteByte@EEAddr 0075  
     eepromWriteByte@EEData 0072      get_RFID@flag_RFID_last 004F                id_replate@id 007B  
             timerOut@Logic 0074                timerOut@time 0072  
