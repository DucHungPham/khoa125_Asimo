

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Sat Nov 30 13:58:31 2019

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F685
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataCOMMON,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,delta=2
    14                           	psect	swtext1,local,class=CONST,delta=2
    15                           	psect	text727,local,class=CODE,delta=2
    16                           	psect	text728,local,class=CODE,delta=2
    17                           	psect	text729,local,class=CODE,delta=2
    18                           	psect	text730,local,class=CODE,delta=2
    19                           	psect	text731,local,class=CODE,delta=2
    20                           	psect	text732,local,class=CODE,delta=2
    21                           	psect	text733,local,class=CODE,delta=2
    22                           	psect	text734,local,class=CODE,delta=2
    23                           	psect	text735,local,class=CODE,delta=2
    24                           	psect	text736,local,class=CODE,delta=2
    25                           	psect	text737,local,class=CODE,delta=2
    26                           	psect	text738,local,class=CODE,delta=2
    27                           	psect	text739,local,class=CODE,delta=2
    28                           	psect	text740,local,class=CODE,delta=2
    29                           	psect	text741,local,class=CODE,delta=2
    30                           	psect	text742,local,class=CODE,delta=2
    31                           	psect	text743,local,class=CODE,delta=2
    32                           	psect	text744,local,class=CODE,delta=2
    33                           	psect	text745,local,class=CODE,delta=2
    34                           	psect	text746,local,class=CODE,delta=2
    35                           	psect	text747,local,class=CODE,delta=2
    36                           	psect	intentry,global,class=CODE,delta=2
    37                           	psect	text748,local,class=CODE,delta=2
    38                           	psect	pa_nodes,global,class=CODE,delta=2
    39                           	dabs	1,0x19D,1
    40                           	dabs	1,0x19E,1
    41                           	dabs	1,0x19E,1
    42                           	dabs	1,0x19E,1
    43                           	dabs	1,0x18C,1
    44                           	dabs	1,0x19E,1
    45                           	dabs	1,0x19E,1
    46                           	dabs	1,0x19E,1
    47                           	dabs	1,0x19E,1
    48                           	dabs	1,0x19D,1
    49                           	dabs	1,0x19D,1
    50                           	dabs	1,0x19D,1
    51                           	dabs	1,0x19D,1
    52                           	dabs	1,0x19D,1
    53                           	dabs	1,0x18C,1
    54                           	dabs	1,0x7E,2
    55  000A                     
    56                           	psect	idataBANK0
    57  034C                     __pidataBANK0:	
    58                           
    59                           ;initializer for id_clear@F962
    60  034C  34FF               	retlw	255
    61  034D  34FF               	retlw	255
    62  034E  34FF               	retlw	255
    63  034F  34FF               	retlw	255
    64  0350  34FF               	retlw	255
    65                           
    66                           ;initializer for _buffTag
    67  0351  3400               	retlw	0
    68  0352  3400               	retlw	0
    69  0353  3411               	retlw	17
    70  0354  340B               	retlw	11
    71  0355  344F               	retlw	79
    72  0356  3400               	retlw	0
    73  0357  3400               	retlw	0
    74  0358  3481               	retlw	129
    75  0359  342F               	retlw	47
    76  035A  3422               	retlw	34
    77  035B  3400               	retlw	0
    78  035C  3400               	retlw	0
    79  035D  347D               	retlw	125
    80  035E  3467               	retlw	103
    81  035F  3405               	retlw	5
    82  0360  3400               	retlw	0
    83  0361  3400               	retlw	0
    84  0362  347E               	retlw	126
    85  0363  3431               	retlw	49
    86  0364  34E7               	retlw	231
    87  0365  3400               	retlw	0
    88  0366  3400               	retlw	0
    89  0367  347E               	retlw	126
    90  0368  3451               	retlw	81
    91  0369  34E6               	retlw	230
    92  019D                     _PSTRCON	set	413	;_PSTRCON
    93  019E                     _SRCON	set	414	;_SRCON
    94  0CF5                     _C1SEN	set	3317	;_C1SEN
    95  0CF4                     _C2REN	set	3316	;_C2REN
    96  0C67                     _EEPGD	set	3175	;_EEPGD
    97  0CF2                     _PULSR	set	3314	;_PULSR
    98  0CF3                     _PULSS	set	3315	;_PULSS
    99  0CF6                     _SR0	set	3318	;_SR0
   100  0CF7                     _SR1	set	3319	;_SR1
   101  0CE8                     _STRA	set	3304	;_STRA
   102  0CE9                     _STRB	set	3305	;_STRB
   103  0CEA                     _STRC	set	3306	;_STRC
   104  0CEB                     _STRD	set	3307	;_STRD
   105  0CEC                     _STRSYNC	set	3308	;_STRSYNC
   106  0C62                     _WREN	set	3170	;_WREN
   107  0015                     _EPWM1CON	set	21
   108  0013                     _EPWMR1L	set	19
   109  000B                     _INTCON	set	11
   110  000C                     _PIR1	set	12
   111  0005                     _PORTA	set	5
   112  0007                     _PORTC	set	7
   113  0016                     _PWM1CON	set	22
   114  0010                     _T1CON	set	16
   115  0012                     _T2CON	set	18
   116  0001                     _TMR0	set	1
   117  000F                     _TMR1H	set	15
   118  000E                     _TMR1L	set	14
   119  0011                     _TMR2	set	17
   120  0067                     _EEIF	set	103
   121  005F                     _GIE	set	95
   122  005E                     _PEIE	set	94
   123  002B                     _RA3	set	43
   124  002C                     _RA4	set	44
   125  0038                     _RC0	set	56
   126  005D                     _T0IE	set	93
   127  005A                     _T0IF	set	90
   128  0060                     _TMR1IF	set	96
   129  0080                     _TMR1ON	set	128
   130  0061                     _TMR2IF	set	97
   131  009B                     _EEADR	set	155
   132  009C                     _EECON1	set	156
   133  009A                     _EEDAT	set	154
   134  0090                     _EPWM1AUX	set	144
   135  0081                     _OPTION	set	129
   136  008F                     _OSCCON	set	143
   137  008C                     _PIE1	set	140
   138  0092                     _PR2	set	146
   139  0085                     _TRISA	set	133
   140  0087                     _TRISC	set	135
   141  0095                     _WPUA	set	149
   142  0088                     _WPUC	set	136
   143  047A                     _HTS	set	1146
   144  04E0                     _RD	set	1248
   145  0460                     _TMR1IE	set	1120
   146  0461                     _TMR2IE	set	1121
   147  04E8                     _WR	set	1256
   148                           
   149                           	psect	idataCOMMON
   150  0000                     __pidataCOMMON:	
   151                           
   152                           	psect	cinit
   153  039F                     start_initialization:	
   154  039F  303E               	movlw	low (__pdataBANK0+30)
   155                           
   156                           ; Clear objects allocated to BANK0
   157  03A0  01D8               	clrf	__pbssBANK0& (0+127)
   158  03A1  01D9               	clrf	(__pbssBANK0+1)& (0+127)
   159  03A2  01DA               	clrf	(__pbssBANK0+2)& (0+127)
   160  03A3  01DB               	clrf	(__pbssBANK0+3)& (0+127)
   161  03A4  01DC               	clrf	(__pbssBANK0+4)& (0+127)
   162  03A5  01DD               	clrf	(__pbssBANK0+5)& (0+127)
   163  03A6  01DE               	clrf	(__pbssBANK0+6)& (0+127)
   164  03A7  01DF               	clrf	(__pbssBANK0+7)& (0+127)
   165  03A8  01E0               	clrf	(__pbssBANK0+8)& (0+127)
   166  03A9  01E1               	clrf	(__pbssBANK0+9)& (0+127)
   167                           
   168                           ; Initialize objects allocated to BANK0
   169  03AA  1383               	bcf	3,7	;select IRP bank0
   170  03AB  00FD               	movwf	125
   171  03AC  3003               	movlw	high __pidataBANK0
   172  03AD  00FE               	movwf	126
   173  03AE  304C               	movlw	low __pidataBANK0
   174  03AF  00FF               	movwf	127
   175  03B0  3020               	movlw	low __pdataBANK0
   176  03B1  0084               	movwf	4
   177  03B2  2440               	fcall	init_ram
   178                           
   179                           ;initializer for _buzFre
   180  03B3  300C               	movlw	12
   181  03B4  00FB               	movwf	__pdataCOMMON& (0+127)
   182  03B5                     end_of_initialization:	
   183                           ;End of C runtime variable initialization code
   184                           
   185  03B5  0183               	clrf	3
   186  03B6  2958               	ljmp	_main	;jump to C main() function
   187                           
   188                           	psect	dataCOMMON
   189  007B                     __pdataCOMMON:	
   190  007B                     _buzFre:	
   191  007B                     	ds	1
   192                           
   193                           	psect	bssBANK0
   194  0058                     __pbssBANK0:	
   195  0058                     _timeOut:	
   196  0058                     	ds	2
   197  005A                     _timeTick:	
   198  005A                     	ds	2
   199  005C                     _mtState:	
   200  005C                     	ds	1
   201  005D                     _keyID:	
   202  005D                     	ds	5
   203                           
   204                           	psect	dataBANK0
   205  0020                     __pdataBANK0:	
   206  0020                     id_clear@F962:	
   207  0020                     	ds	5
   208  0025                     _buffTag:	
   209  0025                     	ds	25
   210                           
   211                           	psect	inittext
   212  043C                     init_fetch:	
   213                           ;	Called with low address in FSR and high address in W
   214                           
   215  043C  087E               	movf	126,w
   216  043D  008A               	movwf	10
   217  043E  087F               	movf	127,w
   218  043F  0082               	movwf	2
   219  0440                     init_ram:	
   220                           ;Called with:
   221                           ;	high address of idata address in btemp 
   222                           ;	low address of idata address in btemp+1 
   223                           ;	low address of data in FSR
   224                           ;	high address + 1 of data in btemp-1
   225                           
   226  0440  243C               	fcall	init_fetch
   227  0441  0080               	movwf	0
   228  0442  0A84               	incf	4,f
   229  0443  0804               	movf	4,w
   230  0444  067D               	xorwf	125,w
   231  0445  1903               	btfsc	3,2
   232  0446  3400               	retlw	0
   233  0447  0AFF               	incf	127,f
   234  0448  1903               	btfsc	3,2
   235  0449  0AFE               	incf	126,f
   236  044A  2C40               	goto	init_ram
   237                           
   238                           	psect	cstackCOMMON
   239  0070                     __pcstackCOMMON:	
   240  0070                     ?_sys_init:	
   241  0070                     ?_gpio_init:	
   242                           ; 0 bytes @ 0x0
   243                           
   244  0070                     ?_timer_init:	
   245                           ; 0 bytes @ 0x0
   246                           
   247  0070                     ?_int_init:	
   248                           ; 0 bytes @ 0x0
   249                           
   250  0070                     ?_SET_EPWM_ON:	
   251                           ; 0 bytes @ 0x0
   252                           
   253  0070                     ?_delay_x10ms:	
   254                           ; 0 bytes @ 0x0
   255                           
   256  0070                     ?_ISR:	
   257                           ; 0 bytes @ 0x0
   258                           
   259  0070                     ??_ISR:	
   260                           ; 0 bytes @ 0x0
   261                           
   262  0070                     ?_main:	
   263                           ; 0 bytes @ 0x0
   264                           
   265  0070                     ?_eepromReadByte:	
   266                           ; 0 bytes @ 0x0
   267                           
   268  0070                     ?_get_RFID:	
   269                           ; 1 bytes @ 0x0
   270                           
   271                           
   272                           ; 1 bytes @ 0x0
   273  0070                     	ds	2
   274  0072                     ??_sys_init:	
   275  0072                     ??_gpio_init:	
   276                           ; 0 bytes @ 0x2
   277                           
   278  0072                     ??_timer_init:	
   279                           ; 0 bytes @ 0x2
   280                           
   281  0072                     ??_int_init:	
   282                           ; 0 bytes @ 0x2
   283                           
   284  0072                     ??_eepromReadByte:	
   285                           ; 0 bytes @ 0x2
   286                           
   287  0072                     ?_eepromWriteByte:	
   288                           ; 0 bytes @ 0x2
   289                           
   290  0072                     ??_SET_EPWM_ON:	
   291                           ; 0 bytes @ 0x2
   292                           
   293  0072                     ??_delay_x10ms:	
   294                           ; 0 bytes @ 0x2
   295                           
   296  0072                     ?_setState:	
   297                           ; 0 bytes @ 0x2
   298                           
   299  0072                     ?_comArr:	
   300                           ; 0 bytes @ 0x2
   301                           
   302  0072                     ?___bmul:	
   303                           ; 1 bytes @ 0x2
   304                           
   305  0072                     ?___lbdiv:	
   306                           ; 1 bytes @ 0x2
   307                           
   308  0072                     ?_timerOut:	
   309                           ; 1 bytes @ 0x2
   310                           
   311  0072                     eepromReadByte@EEAddr:	
   312                           ; 2 bytes @ 0x2
   313                           
   314  0072                     eepromWriteByte@EEData:	
   315                           ; 1 bytes @ 0x2
   316                           
   317  0072                     comArr@arr2:	
   318                           ; 1 bytes @ 0x2
   319                           
   320  0072                     ___bmul@multiplicand:	
   321                           ; 1 bytes @ 0x2
   322                           
   323  0072                     ___lbdiv@divisor:	
   324                           ; 1 bytes @ 0x2
   325                           
   326  0072                     timerOut@time:	
   327                           ; 1 bytes @ 0x2
   328                           
   329  0072                     setState@_tOut:	
   330                           ; 2 bytes @ 0x2
   331                           
   332                           
   333                           ; 2 bytes @ 0x2
   334  0072                     	ds	1
   335  0073                     ??_eepromWriteByte:	
   336  0073                     ??___bmul:	
   337                           ; 0 bytes @ 0x3
   338                           
   339  0073                     ??___lbdiv:	
   340                           ; 0 bytes @ 0x3
   341                           
   342  0073                     eepromReadByte@ReEepromData:	
   343                           ; 0 bytes @ 0x3
   344                           
   345  0073                     comArr@len1:	
   346                           ; 1 bytes @ 0x3
   347                           
   348  0073                     ___bmul@product:	
   349                           ; 1 bytes @ 0x3
   350                           
   351  0073                     ___lbdiv@dividend:	
   352                           ; 1 bytes @ 0x3
   353                           
   354                           
   355                           ; 1 bytes @ 0x3
   356  0073                     	ds	1
   357  0074                     ?_eepromReadBlock:	
   358  0074                     ??_timerOut:	
   359                           ; 0 bytes @ 0x4
   360                           
   361  0074                     ??_setState:	
   362                           ; 0 bytes @ 0x4
   363                           
   364  0074                     eepromReadBlock@buff:	
   365                           ; 0 bytes @ 0x4
   366                           
   367  0074                     comArr@len2:	
   368                           ; 1 bytes @ 0x4
   369                           
   370  0074                     timerOut@Logic:	
   371                           ; 1 bytes @ 0x4
   372                           
   373  0074                     delay_x10ms@t:	
   374                           ; 1 bytes @ 0x4
   375                           
   376  0074                     setState@stt:	
   377                           ; 1 bytes @ 0x4
   378                           
   379  0074                     ___bmul@multiplier:	
   380                           ; 1 bytes @ 0x4
   381                           
   382  0074                     ___lbdiv@counter:	
   383                           ; 1 bytes @ 0x4
   384                           
   385                           
   386                           ; 1 bytes @ 0x4
   387  0074                     	ds	1
   388  0075                     ??_comArr:	
   389  0075                     ?_beep2:	
   390                           ; 0 bytes @ 0x5
   391                           
   392  0075                     eepromReadBlock@len:	
   393                           ; 0 bytes @ 0x5
   394                           
   395  0075                     eepromWriteByte@EEAddr:	
   396                           ; 1 bytes @ 0x5
   397                           
   398  0075                     beep2@rep:	
   399                           ; 1 bytes @ 0x5
   400                           
   401  0075                     ___lbdiv@quotient:	
   402                           ; 1 bytes @ 0x5
   403                           
   404  0075                     timerOut@CurTimer:	
   405                           ; 1 bytes @ 0x5
   406                           
   407                           
   408                           ; 2 bytes @ 0x5
   409  0075                     	ds	1
   410  0076                     ??_eepromReadBlock:	
   411  0076                     ?_eepromWriteBlock:	
   412                           ; 0 bytes @ 0x6
   413                           
   414  0076                     ??_beep2:	
   415                           ; 0 bytes @ 0x6
   416                           
   417  0076                     eepromWriteBlock@buff:	
   418                           ; 0 bytes @ 0x6
   419                           
   420  0076                     beep2@sel:	
   421                           ; 1 bytes @ 0x6
   422                           
   423                           
   424                           ; 1 bytes @ 0x6
   425  0076                     	ds	1
   426  0077                     ??_get_RFID:	
   427  0077                     eepromReadBlock@addStart:	
   428                           ; 0 bytes @ 0x7
   429                           
   430  0077                     eepromWriteBlock@len:	
   431                           ; 1 bytes @ 0x7
   432                           
   433                           
   434                           ; 1 bytes @ 0x7
   435  0077                     	ds	1
   436  0078                     ??_eepromWriteBlock:	
   437  0078                     eepromReadBlock@i:	
   438                           ; 0 bytes @ 0x8
   439                           
   440  0078                     comArr@arr1:	
   441                           ; 1 bytes @ 0x8
   442                           
   443                           
   444                           ; 1 bytes @ 0x8
   445  0078                     	ds	1
   446  0079                     eepromWriteBlock@addStart:	
   447  0079                     comArr@i:	
   448                           ; 1 bytes @ 0x9
   449                           
   450                           
   451                           ; 1 bytes @ 0x9
   452  0079                     	ds	1
   453  007A                     ?_id_search:	
   454  007A                     eepromWriteBlock@i:	
   455                           ; 1 bytes @ 0xA
   456                           
   457  007A                     id_search@buff:	
   458                           ; 1 bytes @ 0xA
   459                           
   460                           
   461                           ; 1 bytes @ 0xA
   462  007A                     	ds	1
   463  007B                     ??_id_clear:	
   464                           
   465                           	psect	cstackBANK0
   466  003E                     __pcstackBANK0:	
   467                           ; 0 bytes @ 0xB
   468                           
   469  003E                     ??_id_search:	
   470  003E                     ?_id_replate:	
   471                           ; 0 bytes @ 0x0
   472                           
   473  003E                     id_replate@Cont:	
   474                           ; 0 bytes @ 0x0
   475                           
   476  003E                     get_RFID@RF_serial_55bits:	
   477                           ; 1 bytes @ 0x0
   478                           
   479                           
   480                           ; 11 bytes @ 0x0
   481  003E                     	ds	1
   482  003F                     id_search@id_input:	
   483  003F                     id_replate@buff:	
   484                           ; 1 bytes @ 0x1
   485                           
   486                           
   487                           ; 1 bytes @ 0x1
   488  003F                     	ds	1
   489  0040                     ??_id_replate:	
   490  0040                     id_search@i:	
   491                           ; 0 bytes @ 0x2
   492                           
   493                           
   494                           ; 1 bytes @ 0x2
   495  0040                     	ds	2
   496  0042                     id_replate@id:	
   497                           
   498                           ; 1 bytes @ 0x4
   499  0042                     	ds	1
   500  0043                     ?_id_clear:	
   501  0043                     id_clear@idMax:	
   502                           ; 0 bytes @ 0x5
   503                           
   504                           
   505                           ; 1 bytes @ 0x5
   506  0043                     	ds	1
   507  0044                     id_clear@tmp:	
   508                           
   509                           ; 5 bytes @ 0x6
   510  0044                     	ds	5
   511  0049                     get_RFID@flag_RFID_syn:	
   512  0049                     id_clear@idMin:	
   513                           ; 1 bytes @ 0xB
   514                           
   515                           
   516                           ; 1 bytes @ 0xB
   517  0049                     	ds	1
   518  004A                     get_RFID@even_col:	
   519                           
   520                           ; 1 bytes @ 0xC
   521  004A                     	ds	1
   522  004B                     get_RFID@even_row:	
   523                           
   524                           ; 1 bytes @ 0xD
   525  004B                     	ds	1
   526  004C                     get_RFID@j:	
   527                           
   528                           ; 1 bytes @ 0xE
   529  004C                     	ds	1
   530  004D                     get_RFID@i:	
   531                           
   532                           ; 1 bytes @ 0xF
   533  004D                     	ds	1
   534  004E                     get_RFID@flag_RFID_last:	
   535                           
   536                           ; 1 bytes @ 0x10
   537  004E                     	ds	1
   538  004F                     get_RFID@timeOutVal:	
   539                           
   540                           ; 2 bytes @ 0x11
   541  004F                     	ds	2
   542  0051                     get_RFID@ii:	
   543                           
   544                           ; 1 bytes @ 0x13
   545  0051                     	ds	1
   546  0052                     ??_main:	
   547                           
   548                           ; 0 bytes @ 0x14
   549  0052                     	ds	3
   550  0055                     main@idState:	
   551                           
   552                           ; 1 bytes @ 0x17
   553  0055                     	ds	1
   554  0056                     main@tmp:	
   555                           
   556                           ; 1 bytes @ 0x18
   557  0056                     	ds	1
   558  0057                     main@idop:	
   559                           
   560                           ; 1 bytes @ 0x19
   561  0057                     	ds	1
   562                           
   563                           	psect	maintext
   564  0158                     __pmaintext:	
   565 ;;Data sizes: Strings 0, constant 0, data 31, bss 10, persistent 0 stack 0
   566 ;;Auto spaces:   Size  Autos    Used
   567 ;; COMMON          14     11      12
   568 ;; BANK0           80     26      66
   569 ;; BANK1           32      0       0
   570 ;;
   571 ;; Pointer list with targets:
   572 ;; ?_timerOut	unsigned int  size(1) Largest target is 0
   573 ;;
   574 ;; id_replate@Cont	PTR unsigned char  size(1) Largest target is 5
   575 ;;		 -> id_clear@tmp(BANK0[5]), keyID(BANK0[5]), 
   576 ;;
   577 ;; id_replate@buff	PTR unsigned char  size(1) Largest target is 25
   578 ;;		 -> buffTag(BANK0[25]), 
   579 ;;
   580 ;; id_search@buff	PTR unsigned char  size(1) Largest target is 25
   581 ;;		 -> buffTag(BANK0[25]), 
   582 ;;
   583 ;; id_search@id_input	PTR unsigned char  size(1) Largest target is 5
   584 ;;		 -> keyID(BANK0[5]), 
   585 ;;
   586 ;; comArr@arr2	PTR unsigned char  size(1) Largest target is 25
   587 ;;		 -> buffTag(BANK0[25]), 
   588 ;;
   589 ;; comArr@arr1	PTR unsigned char  size(1) Largest target is 5
   590 ;;		 -> keyID(BANK0[5]), 
   591 ;;
   592 ;; eepromWriteBlock@buff	PTR unsigned char  size(1) Largest target is 25
   593 ;;		 -> buffTag(BANK0[25]), 
   594 ;;
   595 ;; eepromReadBlock@buff	PTR unsigned char  size(1) Largest target is 25
   596 ;;		 -> buffTag(BANK0[25]), 
   597 ;;
   598 ;;
   599 ;; Critical Paths under _main in COMMON
   600 ;;
   601 ;;   _main->_id_search
   602 ;;   _id_replate->_eepromWriteBlock
   603 ;;   _beep2->_delay_x10ms
   604 ;;   _eepromWriteBlock->_eepromWriteByte
   605 ;;   _id_search->_comArr
   606 ;;   _get_RFID->_timerOut
   607 ;;   _eepromReadBlock->_eepromReadByte
   608 ;;
   609 ;; Critical Paths under _ISR in COMMON
   610 ;;
   611 ;;   None.
   612 ;;
   613 ;; Critical Paths under _main in BANK0
   614 ;;
   615 ;;   _main->_get_RFID
   616 ;;   _id_clear->_id_replate
   617 ;;
   618 ;; Critical Paths under _ISR in BANK0
   619 ;;
   620 ;;   None.
   621 ;;
   622 ;; Critical Paths under _main in BANK1
   623 ;;
   624 ;;   None.
   625 ;;
   626 ;; Critical Paths under _ISR in BANK1
   627 ;;
   628 ;;   None.
   629 ;;
   630 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   631 ;;
   632 ;;
   633 ;;Call Graph Tables:
   634 ;;
   635 ;; ---------------------------------------------------------------------------------
   636 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   637 ;; ---------------------------------------------------------------------------------
   638 ;; (0) _main                                                 6     6      0    5363
   639 ;;                                             20 BANK0      6     6      0
   640 ;;                           _sys_init
   641 ;;                          _gpio_init
   642 ;;                         _timer_init
   643 ;;                           _int_init
   644 ;;                    _eepromWriteByte
   645 ;;                        _SET_EPWM_ON
   646 ;;                     _eepromReadByte
   647 ;;                    _eepromReadBlock
   648 ;;                           _setState
   649 ;;                           _get_RFID
   650 ;;                          _id_search
   651 ;;                           _id_clear
   652 ;;                              _beep2
   653 ;;                         _id_replate
   654 ;; ---------------------------------------------------------------------------------
   655 ;; (1) _id_clear                                             7     6      1    1034
   656 ;;                                              5 BANK0      7     6      1
   657 ;;                         _id_replate
   658 ;; ---------------------------------------------------------------------------------
   659 ;; (1) _id_replate                                           5     3      2     889
   660 ;;                                              0 BANK0      5     3      2
   661 ;;                             ___bmul
   662 ;;                   _eepromWriteBlock
   663 ;; ---------------------------------------------------------------------------------
   664 ;; (1) _beep2                                                2     1      1      88
   665 ;;                                              5 COMMON     2     1      1
   666 ;;                        _delay_x10ms
   667 ;; ---------------------------------------------------------------------------------
   668 ;; (2) _eepromWriteBlock                                     5     3      2     254
   669 ;;                                              6 COMMON     5     3      2
   670 ;;                    _eepromWriteByte
   671 ;; ---------------------------------------------------------------------------------
   672 ;; (1) _id_search                                            4     3      1     576
   673 ;;                                             10 COMMON     1     0      1
   674 ;;                                              0 BANK0      3     3      0
   675 ;;                             _comArr
   676 ;;                            ___lbdiv
   677 ;; ---------------------------------------------------------------------------------
   678 ;; (2) _delay_x10ms                                          3     3      0      22
   679 ;;                                              2 COMMON     3     3      0
   680 ;; ---------------------------------------------------------------------------------
   681 ;; (1) _get_RFID                                            21    21      0    1917
   682 ;;                                              7 COMMON     1     1      0
   683 ;;                                              0 BANK0     20    20      0
   684 ;;                           _timerOut
   685 ;;                            ___lbdiv
   686 ;; ---------------------------------------------------------------------------------
   687 ;; (3) _eepromWriteByte                                      4     3      1      62
   688 ;;                                              2 COMMON     4     3      1
   689 ;; ---------------------------------------------------------------------------------
   690 ;; (1) _eepromReadBlock                                      5     3      2     179
   691 ;;                                              4 COMMON     5     3      2
   692 ;;                     _eepromReadByte
   693 ;; ---------------------------------------------------------------------------------
   694 ;; (1) _sys_init                                             0     0      0       0
   695 ;; ---------------------------------------------------------------------------------
   696 ;; (2) ___lbdiv                                              4     3      1     162
   697 ;;                                              2 COMMON     4     3      1
   698 ;; ---------------------------------------------------------------------------------
   699 ;; (2) ___bmul                                               3     2      1     136
   700 ;;                                              2 COMMON     3     2      1
   701 ;; ---------------------------------------------------------------------------------
   702 ;; (1) _setState                                             3     1      2      44
   703 ;;                                              2 COMMON     3     1      2
   704 ;; ---------------------------------------------------------------------------------
   705 ;; (1) _SET_EPWM_ON                                          0     0      0       0
   706 ;; ---------------------------------------------------------------------------------
   707 ;; (2) _timerOut                                             5     3      2      90
   708 ;;                                              2 COMMON     5     3      2
   709 ;; ---------------------------------------------------------------------------------
   710 ;; (2) _comArr                                               8     5      3     222
   711 ;;                                              2 COMMON     8     5      3
   712 ;; ---------------------------------------------------------------------------------
   713 ;; (2) _eepromReadByte                                       2     2      0      45
   714 ;;                                              2 COMMON     2     2      0
   715 ;; ---------------------------------------------------------------------------------
   716 ;; (1) _int_init                                             0     0      0       0
   717 ;; ---------------------------------------------------------------------------------
   718 ;; (1) _timer_init                                           0     0      0       0
   719 ;; ---------------------------------------------------------------------------------
   720 ;; (1) _gpio_init                                            0     0      0       0
   721 ;; ---------------------------------------------------------------------------------
   722 ;; Estimated maximum stack depth 3
   723 ;; ---------------------------------------------------------------------------------
   724 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   725 ;; ---------------------------------------------------------------------------------
   726 ;; (5) _ISR                                                  2     2      0       0
   727 ;;                                              0 COMMON     2     2      0
   728 ;; ---------------------------------------------------------------------------------
   729 ;; Estimated maximum stack depth 5
   730 ;; ---------------------------------------------------------------------------------
   731 ;; Call Graph Graphs:
   732 ;; _main (ROOT)
   733 ;;   _sys_init
   734 ;;   _gpio_init
   735 ;;   _timer_init
   736 ;;   _int_init
   737 ;;   _eepromWriteByte
   738 ;;   _SET_EPWM_ON
   739 ;;   _eepromReadByte
   740 ;;   _eepromReadBlock
   741 ;;     _eepromReadByte
   742 ;;   _setState
   743 ;;   _get_RFID
   744 ;;     _timerOut
   745 ;;     ___lbdiv
   746 ;;   _id_search
   747 ;;     _comArr
   748 ;;     ___lbdiv
   749 ;;   _id_clear
   750 ;;     _id_replate
   751 ;;       ___bmul
   752 ;;       _eepromWriteBlock
   753 ;;         _eepromWriteByte
   754 ;;   _beep2
   755 ;;     _delay_x10ms
   756 ;;   _id_replate
   757 ;;     ___bmul
   758 ;;     _eepromWriteBlock
   759 ;;       _eepromWriteByte
   760 ;;
   761 ;; _ISR (ROOT)
   762 ;;
   763 ;; Address spaces:
   764 ;;Name               Size   Autos  Total    Cost      Usage
   765 ;;SFR2                 0      0       0       5        0.0%
   766 ;;BITSFR2              0      0       0       5        0.0%
   767 ;;SFR1                 0      0       0       2        0.0%
   768 ;;BITSFR1              0      0       0       2        0.0%
   769 ;;BANK1               20      0       0       6        0.0%
   770 ;;BITBANK1            20      0       0       5        0.0%
   771 ;;CODE                 0      0       0       0        0.0%
   772 ;;DATA                 0      0      52       8        0.0%
   773 ;;ABS                  0      0      4E       7        0.0%
   774 ;;NULL                 0      0       0       0        0.0%
   775 ;;STACK                0      0       4       2        0.0%
   776 ;;BANK0               50     1A      42       4       82.5%
   777 ;;BITBANK0            50      0       0       3        0.0%
   778 ;;SFR0                 0      0       0       1        0.0%
   779 ;;BITSFR0              0      0       0       1        0.0%
   780 ;;COMMON               E      B       C       1       85.7%
   781 ;;BITCOMMON            E      0       0       0        0.0%
   782 ;;EEDATA              80      0       0       0        0.0%
   783                           
   784                           
   785 ;; *************** function _main *****************
   786 ;; Defined at:
   787 ;;		line 190 in file "MAIN.C"
   788 ;; Parameters:    Size  Location     Type
   789 ;;		None
   790 ;; Auto vars:     Size  Location     Type
   791 ;;  idop            1   25[BANK0 ] unsigned char 
   792 ;;  tmp             1   24[BANK0 ] unsigned char 
   793 ;;  idState         1   23[BANK0 ] unsigned char 
   794 ;; Return value:  Size  Location     Type
   795 ;;		None               void
   796 ;; Registers used:
   797 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   798 ;; Tracked objects:
   799 ;;		On entry : 17F/0
   800 ;;		On exit  : 60/0
   801 ;;		Unchanged: 0/0
   802 ;; Data sizes:     COMMON   BANK0   BANK1
   803 ;;      Params:         0       0       0
   804 ;;      Locals:         0       3       0
   805 ;;      Temps:          0       3       0
   806 ;;      Totals:         0       6       0
   807 ;;Total ram usage:        6 bytes
   808 ;; Hardware stack levels required when called:    5
   809 ;; This function calls:
   810 ;;		_sys_init
   811 ;;		_gpio_init
   812 ;;		_timer_init
   813 ;;		_int_init
   814 ;;		_eepromWriteByte
   815 ;;		_SET_EPWM_ON
   816 ;;		_eepromReadByte
   817 ;;		_eepromReadBlock
   818 ;;		_setState
   819 ;;		_get_RFID
   820 ;;		_id_search
   821 ;;		_id_clear
   822 ;;		_beep2
   823 ;;		_id_replate
   824 ;; This function is called by:
   825 ;;		Startup code after reset
   826 ;; This function uses a non-reentrant model
   827 ;;
   828  0158                     _main:	
   829                           
   830                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   831  0158  3007               	movlw	7	;#
   832  0159  0099               	movwf	25	;#
   833                           
   834                           ;MAIN.C: 197: unsigned char idop,tmp,idState=0;
   835  015A  1283               	bcf	3,5	;RP0=0, select bank0
   836  015B  1303               	bcf	3,6	;RP1=0, select bank0
   837  015C  01D5               	clrf	main@idState
   838  015D  0064               	clrwdt	;#
   839                           
   840                           ;MAIN.C: 200: sys_init();
   841  015E  2473               	fcall	_sys_init
   842                           
   843                           ;MAIN.C: 201: gpio_init();
   844  015F  244B               	fcall	_gpio_init
   845                           
   846                           ;MAIN.C: 203: timer_init();
   847  0160  247D               	fcall	_timer_init
   848                           
   849                           ;MAIN.C: 204: int_init();
   850  0161  23F8               	fcall	_int_init
   851                           
   852                           ;MAIN.C: 210: eepromWriteByte(0x7F,0xAA);
   853  0162  30AA               	movlw	170
   854  0163  00F2               	movwf	?_eepromWriteByte
   855  0164  307F               	movlw	127
   856  0165  22C9               	fcall	_eepromWriteByte
   857                           
   858                           ;MAIN.C: 211: eepromWriteByte(0x7F,0xAA);
   859  0166  30AA               	movlw	170
   860  0167  00F2               	movwf	?_eepromWriteByte
   861  0168  307F               	movlw	127
   862  0169  22C9               	fcall	_eepromWriteByte
   863                           
   864                           ;MAIN.C: 214: TRISC &=0xfe;
   865  016A  1683               	bsf	3,5	;RP0=1, select bank1
   866  016B  1303               	bcf	3,6	;RP1=0, select bank1
   867  016C  1007               	bcf	7,0	;volatile
   868                           
   869                           ;MAIN.C: 216: SET_EPWM_ON();
   870  016D  23B7               	fcall	_SET_EPWM_ON
   871                           
   872                           ;MAIN.C: 220: _delay((unsigned long)((20)*(8000000/4000.0)));
   873  016E  3034               	movlw	52
   874  016F  1283               	bcf	3,5	;RP0=0, select bank0
   875  0170  00D3               	movwf	??_main+1
   876  0171  30F1               	movlw	241
   877  0172  00D2               	movwf	??_main
   878  0173                     u2047:	
   879  0173  0BD2               	decfsz	??_main,f
   880  0174  2973               	goto	u2047
   881  0175  0BD3               	decfsz	??_main+1,f
   882  0176  2973               	goto	u2047
   883  0177  2978               	nop2
   884                           
   885                           ;MAIN.C: 225: if(eepromReadByte(0x06)!=0){
   886  0178  3006               	movlw	6
   887  0179  2487               	fcall	_eepromReadByte
   888  017A  3A00               	xorlw	0
   889  017B  1903               	skipnz
   890  017C  298F               	goto	l6039
   891  017D  3006               	movlw	6
   892                           
   893                           ;MAIN.C: 229: eepromWriteByte(0x06,0);
   894  017E  01F2               	clrf	?_eepromWriteByte
   895  017F  22C9               	fcall	_eepromWriteByte
   896  0180  3007               	movlw	7
   897                           
   898                           ;MAIN.C: 230: eepromWriteByte(0x06+1,0);
   899  0181  01F2               	clrf	?_eepromWriteByte
   900  0182  22C9               	fcall	_eepromWriteByte
   901                           
   902                           ;MAIN.C: 231: eepromWriteByte(0x06+2,0x87);
   903  0183  3087               	movlw	135
   904  0184  00F2               	movwf	?_eepromWriteByte
   905  0185  3008               	movlw	8
   906  0186  22C9               	fcall	_eepromWriteByte
   907                           
   908                           ;MAIN.C: 232: eepromWriteByte(0x06+3,0x3a);
   909  0187  303A               	movlw	58
   910  0188  00F2               	movwf	?_eepromWriteByte
   911  0189  3009               	movlw	9
   912  018A  22C9               	fcall	_eepromWriteByte
   913                           
   914                           ;MAIN.C: 233: eepromWriteByte(0x06+4,0xf8);
   915  018B  30F8               	movlw	248
   916  018C  00F2               	movwf	?_eepromWriteByte
   917  018D  300A               	movlw	10
   918  018E  22C9               	fcall	_eepromWriteByte
   919  018F                     l6039:	
   920                           
   921                           ;MAIN.C: 235: }
   922                           ;MAIN.C: 236: eepromReadBlock(0x06,buffTag,5*5);
   923  018F  3025               	movlw	_buffTag& (0+255)
   924  0190  00F4               	movwf	?_eepromReadBlock
   925  0191  3019               	movlw	25
   926  0192  00F5               	movwf	?_eepromReadBlock+1
   927  0193  3006               	movlw	6
   928  0194  240A               	fcall	_eepromReadBlock
   929                           
   930                           ;MAIN.C: 238: setState(1,45);
   931  0195  302D               	movlw	45
   932  0196  00F2               	movwf	?_setState
   933  0197  3001               	movlw	1
   934  0198  01F3               	clrf	?_setState+1
   935  0199  2468               	fcall	_setState
   936                           
   937                           ;MAIN.C: 242: tmp=0;
   938  019A  01D6               	clrf	main@tmp
   939  019B                     l6045:	
   940                           
   941                           ;MAIN.C: 246: idop = get_RFID();
   942  019B  200B               	fcall	_get_RFID
   943  019C  00D7               	movwf	main@idop
   944                           
   945                           ;MAIN.C: 248: if(idop){
   946  019D  0857               	movf	main@idop,w
   947  019E  1903               	btfsc	3,2
   948  019F  2A45               	goto	l6129
   949                           
   950                           ;MAIN.C: 249: idop = id_search(keyID,buffTag);
   951  01A0  3025               	movlw	_buffTag& (0+255)
   952  01A1  00FA               	movwf	?_id_search
   953  01A2  305D               	movlw	_keyID& (0+255)
   954  01A3  2385               	fcall	_id_search
   955  01A4  00D7               	movwf	main@idop
   956                           
   957                           ;MAIN.C: 250: switch (mtState){
   958  01A5  2A2C               	goto	l6125
   959  01A6                     l6051:	
   960                           
   961                           ;MAIN.C: 252: case 2:
   962                           ;MAIN.C: 253: if((idop>1) && (idop <6))
   963  01A6  3002               	movlw	2
   964  01A7  0257               	subwf	main@idop,w
   965  01A8  1C03               	skipc
   966  01A9  29B3               	goto	l6057
   967  01AA  3006               	movlw	6
   968  01AB  0257               	subwf	main@idop,w
   969  01AC  1803               	skipnc
   970  01AD  29B3               	goto	l6057
   971  01AE  3000               	movlw	0
   972                           
   973                           ;MAIN.C: 254: {
   974                           ;MAIN.C: 255: setState(0,0);
   975  01AF  01F2               	clrf	?_setState
   976  01B0  01F3               	clrf	?_setState+1
   977  01B1  2468               	fcall	_setState
   978                           
   979                           ;MAIN.C: 257: }
   980  01B2  2A37               	goto	l3491
   981  01B3                     l6057:	
   982                           
   983                           ;MAIN.C: 258: else if(idop==1)
   984  01B3  0B57               	decfsz	main@idop,w
   985  01B4  2A37               	goto	l3491
   986                           
   987                           ;MAIN.C: 259: {
   988                           ;MAIN.C: 261: id_clear(2,5);
   989  01B5  3005               	movlw	5
   990  01B6  00C3               	movwf	?_id_clear
   991  01B7  3002               	movlw	2
   992  01B8  230D               	fcall	_id_clear
   993  01B9  3003               	movlw	3
   994                           
   995                           ;MAIN.C: 262: setState(3,0);
   996  01BA  01F2               	clrf	?_setState
   997  01BB  01F3               	clrf	?_setState+1
   998  01BC  2468               	fcall	_setState
   999  01BD  3003               	movlw	3
  1000                           
  1001                           ;MAIN.C: 263: tmp=1;
  1002  01BE  01D6               	clrf	main@tmp
  1003  01BF  0AD6               	incf	main@tmp,f
  1004                           
  1005                           ;MAIN.C: 265: beep2(0,3);
  1006  01C0  00F5               	movwf	?_beep2
  1007  01C1  3000               	movlw	0
  1008  01C2  23CF               	fcall	_beep2
  1009  01C3  2A37               	goto	l3491
  1010  01C4                     l6067:	
  1011                           
  1012                           ;MAIN.C: 276: if(idop==1 && idState == 0){
  1013  01C4  0B57               	decfsz	main@idop,w
  1014  01C5  29D8               	goto	l6079
  1015  01C6  08D5               	movf	main@idState,f
  1016  01C7  1D03               	skipz
  1017  01C8  29D8               	goto	l6079
  1018                           
  1019                           ;MAIN.C: 278: id_clear(2,5);
  1020  01C9  3005               	movlw	5
  1021  01CA  00C3               	movwf	?_id_clear
  1022  01CB  3002               	movlw	2
  1023  01CC  230D               	fcall	_id_clear
  1024  01CD  3003               	movlw	3
  1025                           
  1026                           ;MAIN.C: 279: setState(3,0);
  1027  01CE  01F2               	clrf	?_setState
  1028  01CF  01F3               	clrf	?_setState+1
  1029  01D0  2468               	fcall	_setState
  1030  01D1  3003               	movlw	3
  1031                           
  1032                           ;MAIN.C: 280: tmp=1;
  1033  01D2  01D6               	clrf	main@tmp
  1034  01D3  0AD6               	incf	main@tmp,f
  1035                           
  1036                           ;MAIN.C: 282: beep2(0,3);
  1037  01D4  00F5               	movwf	?_beep2
  1038  01D5  3000               	movlw	0
  1039  01D6  23CF               	fcall	_beep2
  1040                           
  1041                           ;MAIN.C: 283: }
  1042  01D7  2A37               	goto	l3491
  1043  01D8                     l6079:	
  1044                           
  1045                           ;MAIN.C: 284: else if(idop==2 && idState == 0){
  1046  01D8  0857               	movf	main@idop,w
  1047  01D9  3A02               	xorlw	2
  1048  01DA  1D03               	skipz
  1049  01DB  2A37               	goto	l3491
  1050  01DC  08D5               	movf	main@idState,f
  1051  01DD  1D03               	skipz
  1052  01DE  2A37               	goto	l3491
  1053                           
  1054                           ;MAIN.C: 286: id_clear(3,5);
  1055  01DF  3005               	movlw	5
  1056  01E0  00C3               	movwf	?_id_clear
  1057  01E1  3003               	movlw	3
  1058  01E2  230D               	fcall	_id_clear
  1059  01E3  3005               	movlw	5
  1060                           
  1061                           ;MAIN.C: 287: setState(5,0);
  1062  01E4  01F2               	clrf	?_setState
  1063  01E5  01F3               	clrf	?_setState+1
  1064  01E6  2468               	fcall	_setState
  1065                           
  1066                           ;MAIN.C: 288: tmp=2;
  1067  01E7  3002               	movlw	2
  1068  01E8  00D6               	movwf	main@tmp
  1069                           
  1070                           ;MAIN.C: 290: beep2(1,2);
  1071  01E9  00F5               	movwf	?_beep2
  1072  01EA  3001               	movlw	1
  1073  01EB  23CF               	fcall	_beep2
  1074  01EC  2A37               	goto	l3491
  1075  01ED                     l6091:	
  1076                           
  1077                           ;MAIN.C: 295: if (idState == 0){
  1078  01ED  08D5               	movf	main@idState,f
  1079  01EE  1D03               	skipz
  1080  01EF  2A07               	goto	l6105
  1081                           
  1082                           ;MAIN.C: 302: if( idop !=1){
  1083  01F0  0357               	decf	main@idop,w
  1084  01F1  1903               	skipnz
  1085  01F2  2A37               	goto	l3491
  1086  01F3  3006               	movlw	6
  1087                           
  1088                           ;MAIN.C: 303: tmp++;
  1089  01F4  0AD6               	incf	main@tmp,f
  1090                           
  1091                           ;MAIN.C: 305: if(tmp <=5){
  1092  01F5  0256               	subwf	main@tmp,w
  1093  01F6  1803               	skipnc
  1094  01F7  2A37               	goto	l3491
  1095                           
  1096                           ;MAIN.C: 306: id_replate(tmp,keyID,buffTag);
  1097  01F8  305D               	movlw	_keyID& (0+255)
  1098  01F9  00BE               	movwf	?_id_replate
  1099  01FA  3025               	movlw	_buffTag& (0+255)
  1100  01FB  00BF               	movwf	?_id_replate+1
  1101  01FC  0856               	movf	main@tmp,w
  1102  01FD  228E               	fcall	_id_replate
  1103  01FE  3002               	movlw	2
  1104                           
  1105                           ;MAIN.C: 307: timeTick=0;
  1106  01FF  1283               	bcf	3,5	;RP0=0, select bank0
  1107  0200  1303               	bcf	3,6	;RP1=0, select bank0
  1108  0201  01DA               	clrf	_timeTick
  1109  0202  01DB               	clrf	_timeTick+1
  1110                           
  1111                           ;MAIN.C: 309: beep2(1,2);
  1112  0203  00F5               	movwf	?_beep2
  1113  0204  3001               	movlw	1
  1114  0205  23CF               	fcall	_beep2
  1115  0206  2A37               	goto	l3491
  1116  0207                     l6105:	
  1117  0207  3000               	movlw	0
  1118                           
  1119                           ;MAIN.C: 316: beep2(0,1);
  1120  0208  01F5               	clrf	?_beep2
  1121  0209  0AF5               	incf	?_beep2,f
  1122  020A  23CF               	fcall	_beep2
  1123  020B  2A37               	goto	l3491
  1124  020C                     l6107:	
  1125                           
  1126                           ;MAIN.C: 321: if(idState == 0){
  1127  020C  08D5               	movf	main@idState,f
  1128  020D  1D03               	skipz
  1129  020E  2A27               	goto	l6121
  1130                           
  1131                           ;MAIN.C: 322: if( idop >2){
  1132  020F  3003               	movlw	3
  1133  0210  0257               	subwf	main@idop,w
  1134  0211  1C03               	skipc
  1135  0212  2A37               	goto	l3491
  1136  0213  3006               	movlw	6
  1137                           
  1138                           ;MAIN.C: 323: tmp++;
  1139  0214  0AD6               	incf	main@tmp,f
  1140                           
  1141                           ;MAIN.C: 325: if(tmp <=5){
  1142  0215  0256               	subwf	main@tmp,w
  1143  0216  1803               	skipnc
  1144  0217  2A37               	goto	l3491
  1145                           
  1146                           ;MAIN.C: 326: id_replate(tmp,keyID,buffTag);
  1147  0218  305D               	movlw	_keyID& (0+255)
  1148  0219  00BE               	movwf	?_id_replate
  1149  021A  3025               	movlw	_buffTag& (0+255)
  1150  021B  00BF               	movwf	?_id_replate+1
  1151  021C  0856               	movf	main@tmp,w
  1152  021D  228E               	fcall	_id_replate
  1153  021E  3002               	movlw	2
  1154                           
  1155                           ;MAIN.C: 327: timeTick=0;
  1156  021F  1283               	bcf	3,5	;RP0=0, select bank0
  1157  0220  1303               	bcf	3,6	;RP1=0, select bank0
  1158  0221  01DA               	clrf	_timeTick
  1159  0222  01DB               	clrf	_timeTick+1
  1160                           
  1161                           ;MAIN.C: 329: beep2(1,2);
  1162  0223  00F5               	movwf	?_beep2
  1163  0224  3001               	movlw	1
  1164  0225  23CF               	fcall	_beep2
  1165  0226  2A37               	goto	l3491
  1166  0227                     l6121:	
  1167  0227  3000               	movlw	0
  1168                           
  1169                           ;MAIN.C: 336: beep2(0,1);
  1170  0228  01F5               	clrf	?_beep2
  1171  0229  0AF5               	incf	?_beep2,f
  1172  022A  23CF               	fcall	_beep2
  1173  022B  2A37               	goto	l3491
  1174  022C                     l6125:	
  1175  022C  085C               	movf	_mtState,w
  1176                           
  1177                           ; Switch size 1, requested type "space"
  1178                           ; Number of cases is 6, Range of values is 0 to 6
  1179                           ; switch strategies available:
  1180                           ; Name         Instructions Cycles
  1181                           ; direct_byte           13     6 (fixed)
  1182                           ; simple_byte           19    10 (average)
  1183                           ; jumptable            260     6 (fixed)
  1184                           ; rangetable            11     6 (fixed)
  1185                           ; spacedrange           20     9 (fixed)
  1186                           ; locatedrange           7     3 (fixed)
  1187                           ;	Chosen strategy is direct_byte
  1188  022D  0084               	movwf	4
  1189  022E  3007               	movlw	7
  1190  022F  0204               	subwf	4,w
  1191  0230  1803               	skipnc
  1192  0231  2A37               	goto	l3491
  1193  0232  3004               	movlw	high S6195
  1194  0233  008A               	movwf	10
  1195  0234  3090               	movlw	low S6195
  1196  0235  0704               	addwf	4,w
  1197  0236  0082               	movwf	2
  1198  0237                     l3491:	
  1199  0237  309F               	movlw	159
  1200                           
  1201                           ;MAIN.C: 342: idState = 1;
  1202  0238  1283               	bcf	3,5	;RP0=0, select bank0
  1203  0239  1303               	bcf	3,6	;RP1=0, select bank0
  1204  023A  01D5               	clrf	main@idState
  1205  023B  0AD5               	incf	main@idState,f
  1206                           
  1207                           ;MAIN.C: 343: _delay((unsigned long)((61)*(8000000/4000.0)));
  1208  023C  00D3               	movwf	??_main+1
  1209  023D  306F               	movlw	111
  1210  023E  00D2               	movwf	??_main
  1211  023F                     u2057:	
  1212  023F  0BD2               	decfsz	??_main,f
  1213  0240  2A3F               	goto	u2057
  1214  0241  0BD3               	decfsz	??_main+1,f
  1215  0242  2A3F               	goto	u2057
  1216  0243  2A44               	nop2
  1217                           
  1218                           ;MAIN.C: 344: }
  1219  0244  2A52               	goto	l6133
  1220  0245                     l6129:	
  1221  0245  3002               	movlw	2
  1222                           
  1223                           ;MAIN.C: 345: else{
  1224                           ;MAIN.C: 346: idState =0;
  1225  0246  01D5               	clrf	main@idState
  1226                           
  1227                           ;MAIN.C: 347: _delay((unsigned long)((150)*(8000000/4000.0)));
  1228  0247  00D4               	movwf	??_main+2
  1229  0248  3086               	movlw	134
  1230  0249  00D3               	movwf	??_main+1
  1231  024A  3099               	movlw	153
  1232  024B  00D2               	movwf	??_main
  1233  024C                     u2067:	
  1234  024C  0BD2               	decfsz	??_main,f
  1235  024D  2A4C               	goto	u2067
  1236  024E  0BD3               	decfsz	??_main+1,f
  1237  024F  2A4C               	goto	u2067
  1238  0250  0BD4               	decfsz	??_main+2,f
  1239  0251  2A4C               	goto	u2067
  1240  0252                     l6133:	
  1241                           
  1242                           ;MAIN.C: 348: }
  1243                           ;MAIN.C: 352: if((timeOut!=0)&&( timeTick > timeOut)){
  1244  0252  1283               	bcf	3,5	;RP0=0, select bank0
  1245  0253  1303               	bcf	3,6	;RP1=0, select bank0
  1246  0254  0859               	movf	_timeOut+1,w
  1247  0255  0458               	iorwf	_timeOut,w
  1248  0256  1903               	skipnz
  1249  0257  2A7D               	goto	l6149
  1250  0258  085B               	movf	_timeTick+1,w
  1251  0259  0259               	subwf	_timeOut+1,w
  1252  025A  1D03               	skipz
  1253  025B  2A5E               	goto	u2015
  1254  025C  085A               	movf	_timeTick,w
  1255  025D  0258               	subwf	_timeOut,w
  1256  025E                     u2015:	
  1257  025E  1C03               	btfss	3,0
  1258  025F  2A72               	goto	l6147
  1259  0260  2A7D               	goto	l6149
  1260  0261                     l6139:	
  1261                           
  1262                           ;MAIN.C: 357: setState(2,220);
  1263  0261  30DC               	movlw	220
  1264  0262  00F2               	movwf	?_setState
  1265  0263  3002               	movlw	2
  1266  0264  01F3               	clrf	?_setState+1
  1267  0265  2468               	fcall	_setState
  1268                           
  1269                           ;MAIN.C: 359: break;
  1270  0266  2A7D               	goto	l6149
  1271  0267                     l6141:	
  1272                           
  1273                           ;MAIN.C: 361: setState(6,35);
  1274  0267  3023               	movlw	35
  1275  0268  00F2               	movwf	?_setState
  1276  0269  3006               	movlw	6
  1277  026A  01F3               	clrf	?_setState+1
  1278  026B  2468               	fcall	_setState
  1279                           
  1280                           ;MAIN.C: 362: break;
  1281  026C  2A7D               	goto	l6149
  1282  026D                     l6143:	
  1283  026D  3002               	movlw	2
  1284                           
  1285                           ;MAIN.C: 364: setState(2,0);
  1286  026E  01F2               	clrf	?_setState
  1287  026F  01F3               	clrf	?_setState+1
  1288  0270  2468               	fcall	_setState
  1289                           
  1290                           ;MAIN.C: 367: break;
  1291  0271  2A7D               	goto	l6149
  1292  0272                     l6147:	
  1293  0272  085C               	movf	_mtState,w
  1294                           
  1295                           ; Switch size 1, requested type "space"
  1296                           ; Number of cases is 3, Range of values is 1 to 6
  1297                           ; switch strategies available:
  1298                           ; Name         Instructions Cycles
  1299                           ; simple_byte           10     6 (average)
  1300                           ; direct_byte           15     9 (fixed)
  1301                           ; jumptable            263     9 (fixed)
  1302                           ;	Chosen strategy is simple_byte
  1303  0273  3A01               	xorlw	1	; case 1
  1304  0274  1903               	skipnz
  1305  0275  2A61               	goto	l6139
  1306  0276  3A03               	xorlw	3	; case 2
  1307  0277  1903               	skipnz
  1308  0278  2A67               	goto	l6141
  1309  0279  3A04               	xorlw	4	; case 6
  1310  027A  1903               	skipnz
  1311  027B  2A6D               	goto	l6143
  1312  027C  2A7D               	goto	l6149
  1313  027D                     l6149:	
  1314                           
  1315                           ;MAIN.C: 370: }
  1316                           ;MAIN.C: 373: if(mtState==0) RA3 = 1;
  1317  027D  08DC               	movf	_mtState,f
  1318  027E  1D03               	skipz
  1319  027F  2A82               	goto	l3516
  1320  0280  1585               	bsf	5,3
  1321  0281  2A83               	goto	l6153
  1322  0282                     l3516:	
  1323                           
  1324                           ;MAIN.C: 374: else RA3 =0;
  1325  0282  1185               	bcf	5,3
  1326  0283                     l6153:	
  1327                           
  1328                           ;MAIN.C: 382: if(mtState == 2) {
  1329  0283  085C               	movf	_mtState,w
  1330  0284  3A02               	xorlw	2
  1331  0285  1D03               	skipz
  1332  0286  2A89               	goto	l3518
  1333                           
  1334                           ;MAIN.C: 384: RC0 =1;
  1335  0287  1407               	bsf	7,0
  1336                           
  1337                           ;MAIN.C: 385: }else{
  1338  0288  2A8A               	goto	l6157
  1339  0289                     l3518:	
  1340                           
  1341                           ;MAIN.C: 386: RC0 =0;
  1342  0289  1007               	bcf	7,0
  1343  028A                     l6157:	
  1344                           
  1345                           ;MAIN.C: 387: };
  1346                           ;MAIN.C: 403: timeTick++;
  1347  028A  0ADA               	incf	_timeTick,f
  1348  028B  1903               	skipnz
  1349  028C  0ADB               	incf	_timeTick+1,f
  1350  028D  299B               	goto	l6045
  1351  028E                     __end_of_main:	
  1352                           
  1353                           	psect	swtext1
  1354  0490                     __pswtext1:	
  1355  0490                     S6195:	
  1356  0490  2A37               	ljmp	l3491
  1357  0491  29A6               	ljmp	l6051
  1358  0492  29A6               	ljmp	l6051
  1359  0493  29ED               	ljmp	l6091
  1360  0494  2A37               	ljmp	l3491
  1361  0495  2A0C               	ljmp	l6107
  1362  0496  29C4               	ljmp	l6067
  1363                           
  1364                           	psect	text727
  1365  030D                     __ptext727:	
  1366 ;; =============== function _main ends ============
  1367                           
  1368                           
  1369 ;; *************** function _id_clear *****************
  1370 ;; Defined at:
  1371 ;;		line 174 in file "MAIN.C"
  1372 ;; Parameters:    Size  Location     Type
  1373 ;;  idMin           1    wreg     unsigned char 
  1374 ;;  idMax           1    5[BANK0 ] unsigned char 
  1375 ;; Auto vars:     Size  Location     Type
  1376 ;;  idMin           1   11[BANK0 ] unsigned char 
  1377 ;;  tmp             5    6[BANK0 ] unsigned char [5]
  1378 ;; Return value:  Size  Location     Type
  1379 ;;		None               void
  1380 ;; Registers used:
  1381 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1382 ;; Tracked objects:
  1383 ;;		On entry : 60/0
  1384 ;;		On exit  : 60/0
  1385 ;;		Unchanged: 0/0
  1386 ;; Data sizes:     COMMON   BANK0   BANK1
  1387 ;;      Params:         0       1       0
  1388 ;;      Locals:         0       6       0
  1389 ;;      Temps:          0       0       0
  1390 ;;      Totals:         0       7       0
  1391 ;;Total ram usage:        7 bytes
  1392 ;; Hardware stack levels used:    1
  1393 ;; Hardware stack levels required when called:    4
  1394 ;; This function calls:
  1395 ;;		_id_replate
  1396 ;; This function is called by:
  1397 ;;		_main
  1398 ;; This function uses a non-reentrant model
  1399 ;;
  1400  030D                     _id_clear:	
  1401                           
  1402                           ; Regs used in _id_clear: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1403                           ;id_clear@idMin stored from wreg
  1404  030D  00C9               	movwf	id_clear@idMin
  1405                           
  1406                           ;MAIN.C: 175: unsigned char tmp[5]={0xff,0xff,0xff,0xff,0xff};
  1407  030E  3044               	movlw	id_clear@tmp& (0+255)
  1408  030F  0084               	movwf	4
  1409  0310  0820               	movf	id_clear@F962,w
  1410  0311  1383               	bcf	3,7	;select IRP bank0
  1411  0312  0080               	movwf	0
  1412  0313  0A84               	incf	4,f
  1413  0314  0821               	movf	id_clear@F962+1,w
  1414  0315  0080               	movwf	0
  1415  0316  0A84               	incf	4,f
  1416  0317  0822               	movf	id_clear@F962+2,w
  1417  0318  0080               	movwf	0
  1418  0319  0A84               	incf	4,f
  1419  031A  0823               	movf	id_clear@F962+3,w
  1420  031B  0080               	movwf	0
  1421  031C  0A84               	incf	4,f
  1422  031D  0824               	movf	id_clear@F962+4,w
  1423  031E  0080               	movwf	0
  1424  031F                     l6009:	
  1425  031F  0849               	movf	id_clear@idMin,w
  1426  0320  0243               	subwf	id_clear@idMax,w
  1427  0321  1C03               	btfss	3,0
  1428  0322  0008               	return
  1429                           
  1430                           ;MAIN.C: 177: id_replate(idMin,tmp,buffTag);
  1431  0323  3044               	movlw	id_clear@tmp& (0+255)
  1432  0324  00BE               	movwf	?_id_replate
  1433  0325  3025               	movlw	_buffTag& (0+255)
  1434  0326  00BF               	movwf	?_id_replate+1
  1435  0327  0849               	movf	id_clear@idMin,w
  1436  0328  228E               	fcall	_id_replate
  1437  0329  1283               	bcf	3,5	;RP0=0, select bank0
  1438  032A  1303               	bcf	3,6	;RP1=0, select bank0
  1439  032B  0AC9               	incf	id_clear@idMin,f
  1440  032C  2B1F               	goto	l6009
  1441  032D                     __end_of_id_clear:	
  1442                           
  1443                           	psect	text728
  1444  028E                     __ptext728:	
  1445 ;; =============== function _id_clear ends ============
  1446                           
  1447                           
  1448 ;; *************** function _id_replate *****************
  1449 ;; Defined at:
  1450 ;;		line 160 in file "MAIN.C"
  1451 ;; Parameters:    Size  Location     Type
  1452 ;;  id              1    wreg     unsigned char 
  1453 ;;  Cont            1    0[BANK0 ] PTR unsigned char 
  1454 ;;		 -> id_clear@tmp(5), keyID(5), 
  1455 ;;  buff            1    1[BANK0 ] PTR unsigned char 
  1456 ;;		 -> buffTag(25), 
  1457 ;; Auto vars:     Size  Location     Type
  1458 ;;  id              1    4[BANK0 ] unsigned char 
  1459 ;; Return value:  Size  Location     Type
  1460 ;;		None               void
  1461 ;; Registers used:
  1462 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1463 ;; Tracked objects:
  1464 ;;		On entry : 60/0
  1465 ;;		On exit  : 0/0
  1466 ;;		Unchanged: 0/0
  1467 ;; Data sizes:     COMMON   BANK0   BANK1
  1468 ;;      Params:         0       2       0
  1469 ;;      Locals:         0       1       0
  1470 ;;      Temps:          0       2       0
  1471 ;;      Totals:         0       5       0
  1472 ;;Total ram usage:        5 bytes
  1473 ;; Hardware stack levels used:    1
  1474 ;; Hardware stack levels required when called:    3
  1475 ;; This function calls:
  1476 ;;		___bmul
  1477 ;;		_eepromWriteBlock
  1478 ;; This function is called by:
  1479 ;;		_id_clear
  1480 ;;		_main
  1481 ;; This function uses a non-reentrant model
  1482 ;;
  1483  028E                     _id_replate:	
  1484                           
  1485                           ; Regs used in _id_replate: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1486                           ;id_replate@id stored from wreg
  1487  028E  00C2               	movwf	id_replate@id
  1488                           
  1489                           ;MAIN.C: 161: id=(id-1)*5;
  1490  028F  3005               	movlw	5
  1491  0290  00F2               	movwf	?___bmul
  1492  0291  0842               	movf	id_replate@id,w
  1493  0292  3EFF               	addlw	255
  1494  0293  245A               	fcall	___bmul
  1495  0294  00C2               	movwf	id_replate@id
  1496                           
  1497                           ;MAIN.C: 162: {
  1498                           ;MAIN.C: 163: {
  1499                           ;MAIN.C: 164: *(buff+id) = *Cont;
  1500  0295  083E               	movf	id_replate@Cont,w
  1501  0296  0084               	movwf	4
  1502  0297  1383               	bcf	3,7	;select IRP bank0
  1503  0298  0800               	movf	0,w
  1504  0299  00C0               	movwf	??_id_replate
  1505  029A  0842               	movf	id_replate@id,w
  1506  029B  073F               	addwf	id_replate@buff,w
  1507  029C  00C1               	movwf	??_id_replate+1
  1508  029D  0084               	movwf	4
  1509  029E  0840               	movf	??_id_replate,w
  1510  029F  0080               	movwf	0
  1511                           
  1512                           ;MAIN.C: 165: *(buff+1+id) = *(Cont+1);
  1513  02A0  083E               	movf	id_replate@Cont,w
  1514  02A1  3E01               	addlw	1
  1515  02A2  22C2               	fcall	PL3	;call to abstracted procedure
  1516  02A3  3E01               	addlw	1
  1517  02A4  0084               	movwf	4
  1518  02A5  0840               	movf	??_id_replate,w
  1519  02A6  0080               	movwf	0
  1520                           
  1521                           ;MAIN.C: 166: *(buff+2+id) = *(Cont+2);
  1522  02A7  083E               	movf	id_replate@Cont,w
  1523  02A8  3E02               	addlw	2
  1524  02A9  22C2               	fcall	PL3	;call to abstracted procedure
  1525  02AA  3E02               	addlw	2
  1526  02AB  0084               	movwf	4
  1527  02AC  0840               	movf	??_id_replate,w
  1528  02AD  0080               	movwf	0
  1529                           
  1530                           ;MAIN.C: 167: *(buff+3+id) = *(Cont+3);
  1531  02AE  083E               	movf	id_replate@Cont,w
  1532  02AF  3E03               	addlw	3
  1533  02B0  22C2               	fcall	PL3	;call to abstracted procedure
  1534  02B1  3E03               	addlw	3
  1535  02B2  0084               	movwf	4
  1536  02B3  0840               	movf	??_id_replate,w
  1537  02B4  0080               	movwf	0
  1538                           
  1539                           ;MAIN.C: 168: *(buff+4+id) = *(Cont+4);
  1540  02B5  083E               	movf	id_replate@Cont,w
  1541  02B6  3E04               	addlw	4
  1542  02B7  22C2               	fcall	PL3	;call to abstracted procedure
  1543  02B8  3E04               	addlw	4
  1544  02B9  0084               	movwf	4
  1545  02BA  0840               	movf	??_id_replate,w
  1546  02BB  0080               	movwf	0
  1547                           
  1548                           ;MAIN.C: 169: }
  1549                           ;MAIN.C: 170: }
  1550                           ;MAIN.C: 172: eepromWriteBlock(0x06,buffTag,25);
  1551  02BC  3025               	movlw	_buffTag& (0+255)
  1552  02BD  00F6               	movwf	?_eepromWriteBlock
  1553  02BE  3019               	movlw	25
  1554  02BF  00F7               	movwf	?_eepromWriteBlock+1
  1555  02C0  3006               	movlw	6
  1556  02C1  2BE6               	ljmp	_eepromWriteBlock
  1557  02C2                     __end_of_id_replate:	
  1558  02C2                     PL3:	
  1559  02C2  0084               	movwf	4
  1560  02C3  0800               	movf	0,w
  1561  02C4  00C0               	movwf	??_id_replate
  1562  02C5  0842               	movf	id_replate@id,w
  1563  02C6  073F               	addwf	id_replate@buff,w
  1564  02C7  00C1               	movwf	??_id_replate+1
  1565  02C8  0008               	return
  1566                           
  1567                           	psect	text729
  1568  03CF                     __ptext729:	
  1569 ;; =============== function _id_replate ends ============
  1570                           
  1571                           
  1572 ;; *************** function _beep2 *****************
  1573 ;; Defined at:
  1574 ;;		line 180 in file "MAIN.C"
  1575 ;; Parameters:    Size  Location     Type
  1576 ;;  sel             1    wreg     unsigned char 
  1577 ;;  rep             1    5[COMMON] unsigned char 
  1578 ;; Auto vars:     Size  Location     Type
  1579 ;;  sel             1    6[COMMON] unsigned char 
  1580 ;; Return value:  Size  Location     Type
  1581 ;;		None               void
  1582 ;; Registers used:
  1583 ;;		wreg, status,2, status,0, pclath, cstack
  1584 ;; Tracked objects:
  1585 ;;		On entry : 60/0
  1586 ;;		On exit  : 0/0
  1587 ;;		Unchanged: 0/0
  1588 ;; Data sizes:     COMMON   BANK0   BANK1
  1589 ;;      Params:         1       0       0
  1590 ;;      Locals:         1       0       0
  1591 ;;      Temps:          0       0       0
  1592 ;;      Totals:         2       0       0
  1593 ;;Total ram usage:        2 bytes
  1594 ;; Hardware stack levels used:    1
  1595 ;; Hardware stack levels required when called:    2
  1596 ;; This function calls:
  1597 ;;		_delay_x10ms
  1598 ;; This function is called by:
  1599 ;;		_main
  1600 ;; This function uses a non-reentrant model
  1601 ;;
  1602  03CF                     _beep2:	
  1603                           
  1604                           ; Regs used in _beep2: [wreg+status,2+status,0+pclath+cstack]
  1605                           ;beep2@sel stored from wreg
  1606  03CF  00F6               	movwf	beep2@sel
  1607  03D0                     l5721:	
  1608                           ;MAIN.C: 181: while(rep--){
  1609                           
  1610  03D0  03F5               	decf	beep2@rep,f
  1611  03D1  0875               	movf	beep2@rep,w
  1612  03D2  3AFF               	xorlw	255
  1613  03D3  1903               	btfsc	3,2
  1614  03D4  0008               	return
  1615                           
  1616                           ;MAIN.C: 182: RC0 =1;if(sel)RA3 = 1;
  1617  03D5  1283               	bcf	3,5	;RP0=0, select bank0
  1618  03D6  1303               	bcf	3,6	;RP1=0, select bank0
  1619  03D7  1407               	bsf	7,0
  1620  03D8  0876               	movf	beep2@sel,w
  1621  03D9  1D03               	skipz
  1622  03DA  1585               	bsf	5,3
  1623                           
  1624                           ;MAIN.C: 183: delay_x10ms(20);
  1625  03DB  3014               	movlw	20
  1626  03DC  242C               	fcall	_delay_x10ms
  1627                           
  1628                           ;MAIN.C: 184: RC0 =0;if(sel)RA3 = 0;
  1629  03DD  1283               	bcf	3,5	;RP0=0, select bank0
  1630  03DE  1303               	bcf	3,6	;RP1=0, select bank0
  1631  03DF  1007               	bcf	7,0
  1632  03E0  0876               	movf	beep2@sel,w
  1633  03E1  1D03               	skipz
  1634  03E2  1185               	bcf	5,3
  1635                           
  1636                           ;MAIN.C: 185: delay_x10ms(20);
  1637  03E3  3014               	movlw	20
  1638  03E4  242C               	fcall	_delay_x10ms
  1639  03E5  2BD0               	goto	l5721
  1640  03E6                     __end_of_beep2:	
  1641                           
  1642                           	psect	text730
  1643  03E6                     __ptext730:	
  1644 ;; =============== function _beep2 ends ============
  1645                           
  1646                           
  1647 ;; *************** function _eepromWriteBlock *****************
  1648 ;; Defined at:
  1649 ;;		line 43 in file "ms82_eeprom.c"
  1650 ;; Parameters:    Size  Location     Type
  1651 ;;  addStart        1    wreg     unsigned char 
  1652 ;;  buff            1    6[COMMON] PTR unsigned char 
  1653 ;;		 -> buffTag(25), 
  1654 ;;  len             1    7[COMMON] unsigned char 
  1655 ;; Auto vars:     Size  Location     Type
  1656 ;;  addStart        1    9[COMMON] unsigned char 
  1657 ;;  i               1   10[COMMON] unsigned char 
  1658 ;; Return value:  Size  Location     Type
  1659 ;;		None               void
  1660 ;; Registers used:
  1661 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1662 ;; Tracked objects:
  1663 ;;		On entry : 160/0
  1664 ;;		On exit  : 0/0
  1665 ;;		Unchanged: 0/0
  1666 ;; Data sizes:     COMMON   BANK0   BANK1
  1667 ;;      Params:         2       0       0
  1668 ;;      Locals:         2       0       0
  1669 ;;      Temps:          1       0       0
  1670 ;;      Totals:         5       0       0
  1671 ;;Total ram usage:        5 bytes
  1672 ;; Hardware stack levels used:    1
  1673 ;; Hardware stack levels required when called:    2
  1674 ;; This function calls:
  1675 ;;		_eepromWriteByte
  1676 ;; This function is called by:
  1677 ;;		_id_replate
  1678 ;; This function uses a non-reentrant model
  1679 ;;
  1680  03E6                     _eepromWriteBlock:	
  1681                           
  1682                           ; Regs used in _eepromWriteBlock: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1683                           ;eepromWriteBlock@addStart stored from wreg
  1684  03E6  00F9               	movwf	eepromWriteBlock@addStart
  1685                           
  1686                           ;ms82_eeprom.c: 44: unsigned char i;
  1687                           ;ms82_eeprom.c: 45: for(i=0;i<len;i++){
  1688  03E7  01FA               	clrf	eepromWriteBlock@i
  1689  03E8                     l5987:	
  1690  03E8  0877               	movf	eepromWriteBlock@len,w
  1691  03E9  027A               	subwf	eepromWriteBlock@i,w
  1692  03EA  1803               	btfsc	3,0
  1693  03EB  0008               	return
  1694                           
  1695                           ;ms82_eeprom.c: 46: eepromWriteByte(addStart+i,buff[i]);
  1696  03EC  087A               	movf	eepromWriteBlock@i,w
  1697  03ED  0776               	addwf	eepromWriteBlock@buff,w
  1698  03EE  00F8               	movwf	??_eepromWriteBlock
  1699  03EF  0084               	movwf	4
  1700  03F0  1383               	bcf	3,7	;select IRP bank0
  1701  03F1  0800               	movf	0,w
  1702  03F2  00F2               	movwf	?_eepromWriteByte
  1703  03F3  087A               	movf	eepromWriteBlock@i,w
  1704  03F4  0779               	addwf	eepromWriteBlock@addStart,w
  1705  03F5  22C9               	fcall	_eepromWriteByte
  1706  03F6  0AFA               	incf	eepromWriteBlock@i,f
  1707  03F7  2BE8               	goto	l5987
  1708  03F8                     __end_of_eepromWriteBlock:	
  1709                           
  1710                           	psect	text731
  1711  0385                     __ptext731:	
  1712 ;; =============== function _eepromWriteBlock ends ============
  1713                           
  1714                           
  1715 ;; *************** function _id_search *****************
  1716 ;; Defined at:
  1717 ;;		line 152 in file "MAIN.C"
  1718 ;; Parameters:    Size  Location     Type
  1719 ;;  id_input        1    wreg     PTR unsigned char 
  1720 ;;		 -> keyID(5), 
  1721 ;;  buff            1   10[COMMON] PTR unsigned char 
  1722 ;;		 -> buffTag(25), 
  1723 ;; Auto vars:     Size  Location     Type
  1724 ;;  id_input        1    1[BANK0 ] PTR unsigned char 
  1725 ;;		 -> keyID(5), 
  1726 ;;  i               1    2[BANK0 ] unsigned char 
  1727 ;; Return value:  Size  Location     Type
  1728 ;;                  1    wreg      unsigned char 
  1729 ;; Registers used:
  1730 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1731 ;; Tracked objects:
  1732 ;;		On entry : 60/0
  1733 ;;		On exit  : 60/0
  1734 ;;		Unchanged: FFE9F/0
  1735 ;; Data sizes:     COMMON   BANK0   BANK1
  1736 ;;      Params:         1       0       0
  1737 ;;      Locals:         0       2       0
  1738 ;;      Temps:          0       1       0
  1739 ;;      Totals:         1       3       0
  1740 ;;Total ram usage:        4 bytes
  1741 ;; Hardware stack levels used:    1
  1742 ;; Hardware stack levels required when called:    2
  1743 ;; This function calls:
  1744 ;;		_comArr
  1745 ;;		___lbdiv
  1746 ;; This function is called by:
  1747 ;;		_main
  1748 ;; This function uses a non-reentrant model
  1749 ;;
  1750  0385                     _id_search:	
  1751                           
  1752                           ; Regs used in _id_search: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1753                           ;id_search@id_input stored from wreg
  1754  0385  00BF               	movwf	id_search@id_input
  1755                           
  1756                           ;MAIN.C: 153: unsigned char i;
  1757                           ;MAIN.C: 154: for(i=0;i<21;i+=5){
  1758  0386  01C0               	clrf	id_search@i
  1759  0387                     l5967:	
  1760                           
  1761                           ;MAIN.C: 155: if(comArr(id_input,buff+i,5,5))
  1762  0387  0840               	movf	id_search@i,w
  1763  0388  077A               	addwf	id_search@buff,w
  1764  0389  00F2               	movwf	?_comArr
  1765  038A  3005               	movlw	5
  1766  038B  00F3               	movwf	?_comArr+1
  1767  038C  00F4               	movwf	?_comArr+2
  1768  038D  083F               	movf	id_search@id_input,w
  1769  038E  232D               	fcall	_comArr
  1770  038F  3A00               	xorlw	0
  1771                           
  1772                           ;MAIN.C: 156: return i/5 +1;
  1773  0390  3005               	movlw	5
  1774  0391  1903               	skipnz
  1775  0392  2B99               	goto	L1
  1776  0393  00F2               	movwf	?___lbdiv
  1777  0394  0840               	movf	id_search@i,w
  1778  0395  236A               	fcall	___lbdiv
  1779  0396  00BE               	movwf	??_id_search
  1780  0397  0A3E               	incf	??_id_search,w
  1781  0398  0008               	return
  1782  0399                     L1:	
  1783  0399  07C0               	addwf	id_search@i,f
  1784  039A  3015               	movlw	21
  1785  039B  0240               	subwf	id_search@i,w
  1786  039C  1803               	btfsc	3,0
  1787                           
  1788                           ;MAIN.C: 157: }
  1789                           ;MAIN.C: 158: return 255;
  1790  039D  34FF               	retlw	255
  1791  039E  2B87               	goto	l5967
  1792  039F                     __end_of_id_search:	
  1793                           
  1794                           	psect	text732
  1795  042C                     __ptext732:	
  1796 ;; =============== function _id_search ends ============
  1797                           
  1798                           
  1799 ;; *************** function _delay_x10ms *****************
  1800 ;; Defined at:
  1801 ;;		line 54 in file "MAIN.C"
  1802 ;; Parameters:    Size  Location     Type
  1803 ;;  t               1    wreg     unsigned char 
  1804 ;; Auto vars:     Size  Location     Type
  1805 ;;  t               1    4[COMMON] unsigned char 
  1806 ;; Return value:  Size  Location     Type
  1807 ;;		None               void
  1808 ;; Registers used:
  1809 ;;		wreg, status,2, status,0
  1810 ;; Tracked objects:
  1811 ;;		On entry : 60/0
  1812 ;;		On exit  : 0/0
  1813 ;;		Unchanged: 0/0
  1814 ;; Data sizes:     COMMON   BANK0   BANK1
  1815 ;;      Params:         0       0       0
  1816 ;;      Locals:         1       0       0
  1817 ;;      Temps:          2       0       0
  1818 ;;      Totals:         3       0       0
  1819 ;;Total ram usage:        3 bytes
  1820 ;; Hardware stack levels used:    1
  1821 ;; Hardware stack levels required when called:    1
  1822 ;; This function calls:
  1823 ;;		Nothing
  1824 ;; This function is called by:
  1825 ;;		_beep2
  1826 ;; This function uses a non-reentrant model
  1827 ;;
  1828  042C                     _delay_x10ms:	
  1829                           
  1830                           ; Regs used in _delay_x10ms: [wreg+status,2+status,0]
  1831                           ;delay_x10ms@t stored from wreg
  1832  042C  00F4               	movwf	delay_x10ms@t
  1833  042D                     l5675:	
  1834                           ;MAIN.C: 55: while(t--)
  1835                           
  1836  042D  03F4               	decf	delay_x10ms@t,f
  1837  042E  0874               	movf	delay_x10ms@t,w
  1838  042F  3AFF               	xorlw	255
  1839  0430  1903               	btfsc	3,2
  1840  0431  0008               	return
  1841                           
  1842                           ;MAIN.C: 56: _delay((unsigned long)((10)*(8000000/4000.0)));
  1843  0432  301A               	movlw	26
  1844  0433  00F3               	movwf	??_delay_x10ms+1
  1845  0434  30F8               	movlw	248
  1846  0435  00F2               	movwf	??_delay_x10ms
  1847  0436                     u2077:	
  1848  0436  0BF2               	decfsz	??_delay_x10ms,f
  1849  0437  2C36               	goto	u2077
  1850  0438  0BF3               	decfsz	??_delay_x10ms+1,f
  1851  0439  2C36               	goto	u2077
  1852  043A  0064               	clrwdt
  1853  043B  2C2D               	goto	l5675
  1854  043C                     __end_of_delay_x10ms:	
  1855                           
  1856                           	psect	text733
  1857  000B                     __ptext733:	
  1858 ;; =============== function _delay_x10ms ends ============
  1859                           
  1860                           
  1861 ;; *************** function _get_RFID *****************
  1862 ;; Defined at:
  1863 ;;		line 21 in file "rfid125.c"
  1864 ;; Parameters:    Size  Location     Type
  1865 ;;		None
  1866 ;; Auto vars:     Size  Location     Type
  1867 ;;  RF_serial_55   11    0[BANK0 ] unsigned char [11]
  1868 ;;  timeOutVal      2   17[BANK0 ] unsigned int 
  1869 ;;  ii              1   19[BANK0 ] unsigned char 
  1870 ;;  flag_RFID_la    1   16[BANK0 ] unsigned char 
  1871 ;;  i               1   15[BANK0 ] unsigned char 
  1872 ;;  j               1   14[BANK0 ] unsigned char 
  1873 ;;  even_row        1   13[BANK0 ] unsigned char 
  1874 ;;  even_col        1   12[BANK0 ] unsigned char 
  1875 ;;  flag_RFID_sy    1   11[BANK0 ] unsigned char 
  1876 ;; Return value:  Size  Location     Type
  1877 ;;                  1    wreg      unsigned char 
  1878 ;; Registers used:
  1879 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1880 ;; Tracked objects:
  1881 ;;		On entry : 60/0
  1882 ;;		On exit  : 60/0
  1883 ;;		Unchanged: FFE9F/0
  1884 ;; Data sizes:     COMMON   BANK0   BANK1
  1885 ;;      Params:         0       0       0
  1886 ;;      Locals:         0      20       0
  1887 ;;      Temps:          1       0       0
  1888 ;;      Totals:         1      20       0
  1889 ;;Total ram usage:       21 bytes
  1890 ;; Hardware stack levels used:    1
  1891 ;; Hardware stack levels required when called:    2
  1892 ;; This function calls:
  1893 ;;		_timerOut
  1894 ;;		___lbdiv
  1895 ;; This function is called by:
  1896 ;;		_main
  1897 ;; This function uses a non-reentrant model
  1898 ;;
  1899  000B                     _get_RFID:	
  1900  000B  3010               	movlw	16
  1901                           
  1902                           ;rfid125.c: 23: unsigned char RF_serial_55bits[11];
  1903                           ;rfid125.c: 24: unsigned int timeOutVal;
  1904                           ;rfid125.c: 25: unsigned char i,ii,j;
  1905                           ;rfid125.c: 26: unsigned char flag_RFID_syn, flag_RFID_last;
  1906                           ;rfid125.c: 27: unsigned char even_row, even_col;
  1907                           ;rfid125.c: 30: flag_RFID_syn = 0;
  1908                           
  1909                           ; Regs used in _get_RFID: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1910  000C  01C9               	clrf	get_RFID@flag_RFID_syn
  1911                           
  1912                           ;rfid125.c: 33: i=16;
  1913  000D  00CD               	movwf	get_RFID@i
  1914  000E                     l5453:	
  1915                           
  1916                           ;rfid125.c: 35: {
  1917                           ;rfid125.c: 36: timeOutVal=timerOut(1,600);
  1918  000E  3058               	movlw	88
  1919  000F  00F2               	movwf	?_timerOut
  1920  0010  3002               	movlw	2
  1921  0011  00F3               	movwf	?_timerOut+1
  1922  0012  3001               	movlw	1
  1923  0013  22EC               	fcall	_timerOut
  1924                           
  1925                           ;rfid125.c: 37: if(timeOutVal==0) return 0;
  1926  0014  2141               	fcall	PL2	;call to abstracted procedure
  1927  0015  1903               	btfsc	3,2
  1928  0016  3400               	retlw	0
  1929                           
  1930                           ;rfid125.c: 39: timeOutVal=timerOut(0,600);
  1931  0017  3058               	movlw	88
  1932  0018  2154               	fcall	PL6	;call to abstracted procedure
  1933  0019  22EC               	fcall	_timerOut
  1934                           
  1935                           ;rfid125.c: 40: if(timeOutVal==0) return 0;
  1936  001A  2141               	fcall	PL2	;call to abstracted procedure
  1937  001B  1903               	btfsc	3,2
  1938  001C  3400               	retlw	0
  1939  001D  3001               	movlw	1
  1940                           
  1941                           ;rfid125.c: 42: i--;
  1942  001E  03CD               	decf	get_RFID@i,f
  1943                           
  1944                           ;rfid125.c: 43: }
  1945                           ;rfid125.c: 44: while(timeOutVal<290 && i>0);
  1946  001F  0250               	subwf	get_RFID@timeOutVal+1,w
  1947  0020  3022               	movlw	34
  1948  0021  1903               	skipnz
  1949  0022  024F               	subwf	get_RFID@timeOutVal,w
  1950  0023  1803               	skipnc
  1951  0024  2828               	goto	l2051
  1952  0025  08CD               	movf	get_RFID@i,f
  1953  0026  1D03               	skipz
  1954  0027  280E               	goto	l5453
  1955  0028                     l2051:	
  1956                           
  1957                           ;rfid125.c: 45: flag_RFID_last = 1;
  1958  0028  01CE               	clrf	get_RFID@flag_RFID_last
  1959  0029  0ACE               	incf	get_RFID@flag_RFID_last,f
  1960                           
  1961                           ;rfid125.c: 46: i = 0;
  1962  002A  01CD               	clrf	get_RFID@i
  1963  002B                     l5541:	
  1964                           ;rfid125.c: 47: while(i<64)
  1965                           
  1966  002B  3040               	movlw	64
  1967  002C  024D               	subwf	get_RFID@i,w
  1968  002D  1803               	btfsc	3,0
  1969  002E  2884               	goto	l5543
  1970                           
  1971                           ;rfid125.c: 48: {
  1972                           ;rfid125.c: 49: for(ii=0;ii<9;ii++)
  1973  002F  01D1               	clrf	get_RFID@ii
  1974  0030                     l5483:	
  1975                           
  1976                           ;rfid125.c: 50: {
  1977                           ;rfid125.c: 51: timeOutVal=timerOut(flag_RFID_last,600);
  1978  0030  214E               	fcall	PL5	;call to abstracted procedure
  1979  0031  22EC               	fcall	_timerOut
  1980                           
  1981                           ;rfid125.c: 52: if(timeOutVal==0) return 0;
  1982  0032  2141               	fcall	PL2	;call to abstracted procedure
  1983  0033  1903               	btfsc	3,2
  1984  0034  3400               	retlw	0
  1985                           
  1986                           ;rfid125.c: 54: if(0==flag_RFID_last && timeOutVal<=290 ||
  1987                           ;rfid125.c: 55: 1==flag_RFID_last && timeOutVal>290)
  1988  0035  08CE               	movf	get_RFID@flag_RFID_last,f
  1989  0036  1D03               	skipz
  1990  0037  283F               	goto	l5495
  1991  0038  3001               	movlw	1
  1992  0039  0250               	subwf	get_RFID@timeOutVal+1,w
  1993  003A  3023               	movlw	35
  1994  003B  1903               	skipnz
  1995  003C  024F               	subwf	get_RFID@timeOutVal,w
  1996  003D  1C03               	skipc
  1997  003E  2848               	goto	l5499
  1998  003F                     l5495:	
  1999  003F  0B4E               	decfsz	get_RFID@flag_RFID_last,w
  2000  0040  2856               	goto	l5513
  2001  0041  3001               	movlw	1
  2002  0042  0250               	subwf	get_RFID@timeOutVal+1,w
  2003  0043  3023               	movlw	35
  2004  0044  1903               	skipnz
  2005  0045  024F               	subwf	get_RFID@timeOutVal,w
  2006  0046  1C03               	skipc
  2007  0047  2856               	goto	l5513
  2008  0048                     l5499:	
  2009                           
  2010                           ;rfid125.c: 56: {
  2011                           ;rfid125.c: 57: if(!flag_RFID_last)
  2012  0048  08CE               	movf	get_RFID@flag_RFID_last,f
  2013  0049  1D03               	skipz
  2014  004A  2853               	goto	l5509
  2015                           
  2016                           ;rfid125.c: 58: {
  2017                           ;rfid125.c: 59: timeOutVal=timerOut(1,290);
  2018  004B  3022               	movlw	34
  2019  004C  00F2               	movwf	?_timerOut
  2020  004D  3001               	movlw	1
  2021  004E  00F3               	movwf	?_timerOut+1
  2022  004F  22EC               	fcall	_timerOut
  2023                           
  2024                           ;rfid125.c: 60: if(timeOutVal==0) return 0;
  2025  0050  2141               	fcall	PL2	;call to abstracted procedure
  2026  0051  1903               	btfsc	3,2
  2027  0052  3400               	retlw	0
  2028  0053                     l5509:	
  2029                           
  2030                           ;rfid125.c: 61: }
  2031                           ;rfid125.c: 62: flag_RFID_last = 0;
  2032  0053  01CE               	clrf	get_RFID@flag_RFID_last
  2033                           
  2034                           ;rfid125.c: 63: i++;
  2035  0054  0ACD               	incf	get_RFID@i,f
  2036                           
  2037                           ;rfid125.c: 64: }
  2038  0055  2879               	goto	l5533
  2039  0056                     l5513:	
  2040                           
  2041                           ;rfid125.c: 65: else
  2042                           ;rfid125.c: 66: if(0==flag_RFID_last && timeOutVal>290 ||
  2043                           ;rfid125.c: 67: 1==flag_RFID_last && timeOutVal<=290)
  2044  0056  08CE               	movf	get_RFID@flag_RFID_last,f
  2045  0057  1D03               	skipz
  2046  0058  2860               	goto	l5517
  2047  0059  3001               	movlw	1
  2048  005A  0250               	subwf	get_RFID@timeOutVal+1,w
  2049  005B  3023               	movlw	35
  2050  005C  1903               	skipnz
  2051  005D  024F               	subwf	get_RFID@timeOutVal,w
  2052  005E  1803               	skipnc
  2053  005F  2869               	goto	l5521
  2054  0060                     l5517:	
  2055  0060  0B4E               	decfsz	get_RFID@flag_RFID_last,w
  2056  0061  2879               	goto	l5533
  2057  0062  3001               	movlw	1
  2058  0063  0250               	subwf	get_RFID@timeOutVal+1,w
  2059  0064  3023               	movlw	35
  2060  0065  1903               	skipnz
  2061  0066  024F               	subwf	get_RFID@timeOutVal,w
  2062  0067  1803               	skipnc
  2063  0068  2879               	goto	l5533
  2064  0069                     l5521:	
  2065                           
  2066                           ;rfid125.c: 68: {
  2067                           ;rfid125.c: 69: if(flag_RFID_last)
  2068  0069  084E               	movf	get_RFID@flag_RFID_last,w
  2069  006A  1903               	btfsc	3,2
  2070  006B  2875               	goto	l2070
  2071                           
  2072                           ;rfid125.c: 70: {
  2073                           ;rfid125.c: 71: timeOutVal=timerOut(0,290);
  2074  006C  3022               	movlw	34
  2075  006D  00F2               	movwf	?_timerOut
  2076  006E  3001               	movlw	1
  2077  006F  00F3               	movwf	?_timerOut+1
  2078  0070  3000               	movlw	0
  2079  0071  22EC               	fcall	_timerOut
  2080                           
  2081                           ;rfid125.c: 72: if(timeOutVal==0) return 0;
  2082  0072  2141               	fcall	PL2	;call to abstracted procedure
  2083  0073  1903               	btfsc	3,2
  2084  0074  3400               	retlw	0
  2085  0075                     l2070:	
  2086                           
  2087                           ;rfid125.c: 73: }
  2088                           ;rfid125.c: 74: flag_RFID_last = 1;
  2089  0075  01CE               	clrf	get_RFID@flag_RFID_last
  2090  0076  0ACE               	incf	get_RFID@flag_RFID_last,f
  2091                           
  2092                           ;rfid125.c: 75: i++;
  2093  0077  0ACD               	incf	get_RFID@i,f
  2094                           
  2095                           ;rfid125.c: 77: break;
  2096  0078  287E               	goto	l5537
  2097  0079                     l5533:	
  2098  0079  3009               	movlw	9
  2099  007A  0AD1               	incf	get_RFID@ii,f
  2100  007B  0251               	subwf	get_RFID@ii,w
  2101  007C  1C03               	skipc
  2102  007D  2830               	goto	l5483
  2103  007E                     l5537:	
  2104                           
  2105                           ;rfid125.c: 78: }
  2106                           ;rfid125.c: 80: }
  2107                           ;rfid125.c: 81: if(9==ii)
  2108  007E  0851               	movf	get_RFID@ii,w
  2109  007F  3A09               	xorlw	9
  2110  0080  1D03               	skipz
  2111  0081  282B               	goto	l5541
  2112                           
  2113                           ;rfid125.c: 82: {
  2114                           ;rfid125.c: 83: flag_RFID_syn = 1;
  2115  0082  01C9               	clrf	get_RFID@flag_RFID_syn
  2116  0083  0AC9               	incf	get_RFID@flag_RFID_syn,f
  2117  0084                     l5543:	
  2118                           ;rfid125.c: 84: break;
  2119                           
  2120                           
  2121                           ;rfid125.c: 85: }
  2122                           ;rfid125.c: 86: }
  2123                           ;rfid125.c: 88: if(!flag_RFID_syn)
  2124  0084  08C9               	movf	get_RFID@flag_RFID_syn,f
  2125  0085  1903               	btfsc	3,2
  2126  0086  3400               	retlw	0
  2127                           
  2128                           ;rfid125.c: 91: }
  2129                           ;rfid125.c: 92: for(ii=0;ii<55;ii++)
  2130  0087  01D1               	clrf	get_RFID@ii
  2131  0088                     l5555:	
  2132                           
  2133                           ;rfid125.c: 93: {
  2134                           ;rfid125.c: 94: i = ii/5;
  2135  0088  3005               	movlw	5
  2136  0089  00F2               	movwf	?___lbdiv
  2137  008A  0851               	movf	get_RFID@ii,w
  2138  008B  236A               	fcall	___lbdiv
  2139  008C  00CD               	movwf	get_RFID@i
  2140                           
  2141                           ;rfid125.c: 95: timeOutVal=timerOut(flag_RFID_last,600);
  2142  008D  214E               	fcall	PL5	;call to abstracted procedure
  2143  008E  22EC               	fcall	_timerOut
  2144                           
  2145                           ;rfid125.c: 96: if(timeOutVal==0) return 0;
  2146  008F  2141               	fcall	PL2	;call to abstracted procedure
  2147  0090  1903               	btfsc	3,2
  2148  0091  3400               	retlw	0
  2149                           
  2150                           ;rfid125.c: 98: if(0==flag_RFID_last && timeOutVal<=290 ||
  2151                           ;rfid125.c: 99: 1==flag_RFID_last && timeOutVal>290)
  2152  0092  08CE               	movf	get_RFID@flag_RFID_last,f
  2153  0093  1D03               	skipz
  2154  0094  289C               	goto	l5569
  2155  0095  3001               	movlw	1
  2156  0096  0250               	subwf	get_RFID@timeOutVal+1,w
  2157  0097  3023               	movlw	35
  2158  0098  1903               	skipnz
  2159  0099  024F               	subwf	get_RFID@timeOutVal,w
  2160  009A  1C03               	skipc
  2161  009B  28A5               	goto	l5573
  2162  009C                     l5569:	
  2163  009C  0B4E               	decfsz	get_RFID@flag_RFID_last,w
  2164  009D  28B7               	goto	l5589
  2165  009E  3001               	movlw	1
  2166  009F  0250               	subwf	get_RFID@timeOutVal+1,w
  2167  00A0  3023               	movlw	35
  2168  00A1  1903               	skipnz
  2169  00A2  024F               	subwf	get_RFID@timeOutVal,w
  2170  00A3  1C03               	skipc
  2171  00A4  28B7               	goto	l5589
  2172  00A5                     l5573:	
  2173                           
  2174                           ;rfid125.c: 100: {
  2175                           ;rfid125.c: 101: if(!flag_RFID_last)
  2176  00A5  08CE               	movf	get_RFID@flag_RFID_last,f
  2177  00A6  1D03               	skipz
  2178  00A7  28B0               	goto	l5583
  2179                           
  2180                           ;rfid125.c: 102: {
  2181                           ;rfid125.c: 103: timeOutVal=timerOut(1,290);
  2182  00A8  3022               	movlw	34
  2183  00A9  00F2               	movwf	?_timerOut
  2184  00AA  3001               	movlw	1
  2185  00AB  00F3               	movwf	?_timerOut+1
  2186  00AC  22EC               	fcall	_timerOut
  2187                           
  2188                           ;rfid125.c: 104: if(timeOutVal==0) return 0;
  2189  00AD  2141               	fcall	PL2	;call to abstracted procedure
  2190  00AE  1903               	btfsc	3,2
  2191  00AF  3400               	retlw	0
  2192  00B0                     l5583:	
  2193                           
  2194                           ;rfid125.c: 105: }
  2195                           ;rfid125.c: 106: flag_RFID_last = 0;
  2196  00B0  01CE               	clrf	get_RFID@flag_RFID_last
  2197                           
  2198                           ;rfid125.c: 107: RF_serial_55bits[i] <<= 1;
  2199  00B1  2147               	fcall	PL4	;call to abstracted procedure
  2200                           
  2201                           ;rfid125.c: 108: RF_serial_55bits[i] |= 0x01;
  2202  00B2  084D               	movf	get_RFID@i,w
  2203  00B3  3E3E               	addlw	get_RFID@RF_serial_55bits& (0+255)
  2204  00B4  0084               	movwf	4
  2205  00B5  1400               	bsf	0,0
  2206                           
  2207                           ;rfid125.c: 109: }
  2208  00B6  28D6               	goto	l5609
  2209  00B7                     l5589:	
  2210                           
  2211                           ;rfid125.c: 110: else
  2212                           ;rfid125.c: 111: if(0==flag_RFID_last && timeOutVal>290 ||
  2213                           ;rfid125.c: 112: 1==flag_RFID_last && timeOutVal<=290)
  2214  00B7  08CE               	movf	get_RFID@flag_RFID_last,f
  2215  00B8  1D03               	skipz
  2216  00B9  28C1               	goto	l5593
  2217  00BA  3001               	movlw	1
  2218  00BB  0250               	subwf	get_RFID@timeOutVal+1,w
  2219  00BC  3023               	movlw	35
  2220  00BD  1903               	skipnz
  2221  00BE  024F               	subwf	get_RFID@timeOutVal,w
  2222  00BF  1803               	skipnc
  2223  00C0  28CA               	goto	l5597
  2224  00C1                     l5593:	
  2225  00C1  0B4E               	decfsz	get_RFID@flag_RFID_last,w
  2226  00C2  28D6               	goto	l5609
  2227  00C3  3001               	movlw	1
  2228  00C4  0250               	subwf	get_RFID@timeOutVal+1,w
  2229  00C5  3023               	movlw	35
  2230  00C6  1903               	skipnz
  2231  00C7  024F               	subwf	get_RFID@timeOutVal,w
  2232  00C8  1803               	skipnc
  2233  00C9  28D6               	goto	l5609
  2234  00CA                     l5597:	
  2235                           
  2236                           ;rfid125.c: 113: {
  2237                           ;rfid125.c: 114: if(flag_RFID_last)
  2238  00CA  084E               	movf	get_RFID@flag_RFID_last,w
  2239  00CB  1903               	btfsc	3,2
  2240  00CC  28D3               	goto	l2091
  2241                           
  2242                           ;rfid125.c: 115: {
  2243                           ;rfid125.c: 116: timeOutVal=timerOut(0,600);
  2244  00CD  3058               	movlw	88
  2245  00CE  2154               	fcall	PL6	;call to abstracted procedure
  2246  00CF  22EC               	fcall	_timerOut
  2247                           
  2248                           ;rfid125.c: 117: if(timeOutVal==0) return 0;
  2249  00D0  2141               	fcall	PL2	;call to abstracted procedure
  2250  00D1  1903               	btfsc	3,2
  2251  00D2  3400               	retlw	0
  2252  00D3                     l2091:	
  2253                           
  2254                           ;rfid125.c: 118: }
  2255                           ;rfid125.c: 119: flag_RFID_last = 1;
  2256  00D3  01CE               	clrf	get_RFID@flag_RFID_last
  2257  00D4  0ACE               	incf	get_RFID@flag_RFID_last,f
  2258                           
  2259                           ;rfid125.c: 120: RF_serial_55bits[i] <<= 1;
  2260  00D5  2147               	fcall	PL4	;call to abstracted procedure
  2261  00D6                     l5609:	
  2262  00D6  3037               	movlw	55
  2263  00D7  0AD1               	incf	get_RFID@ii,f
  2264  00D8  0251               	subwf	get_RFID@ii,w
  2265  00D9  1C03               	skipc
  2266  00DA  2888               	goto	l5555
  2267                           
  2268                           ;rfid125.c: 121: }
  2269                           ;rfid125.c: 122: }
  2270                           ;rfid125.c: 123: if(55==ii)
  2271  00DB  0851               	movf	get_RFID@ii,w
  2272  00DC  3A37               	xorlw	55
  2273  00DD  1D03               	skipz
  2274  00DE  3400               	retlw	0
  2275                           
  2276                           ;rfid125.c: 124: {
  2277                           ;rfid125.c: 125: even_col = 0;
  2278  00DF  01CA               	clrf	get_RFID@even_col
  2279                           
  2280                           ;rfid125.c: 126: for(ii=0;ii<10;ii++)
  2281  00E0  01D1               	clrf	get_RFID@ii
  2282  00E1                     l5621:	
  2283                           
  2284                           ;rfid125.c: 127: {
  2285                           ;rfid125.c: 128: even_row = (RF_serial_55bits[ii] & 0x01);
  2286  00E1  0851               	movf	get_RFID@ii,w
  2287  00E2  3E3E               	addlw	get_RFID@RF_serial_55bits& (0+255)
  2288  00E3  0084               	movwf	4
  2289  00E4  1383               	bcf	3,7	;select IRP bank0
  2290  00E5  0800               	movf	0,w
  2291  00E6  00CB               	movwf	get_RFID@even_row
  2292  00E7  3001               	movlw	1
  2293  00E8  05CB               	andwf	get_RFID@even_row,f
  2294                           
  2295                           ;rfid125.c: 129: for(j=1;j<5;j++)
  2296  00E9  01CC               	clrf	get_RFID@j
  2297  00EA  0ACC               	incf	get_RFID@j,f
  2298  00EB                     l5631:	
  2299                           
  2300                           ;rfid125.c: 130: {
  2301                           ;rfid125.c: 131: even_row = even_row ^ ((RF_serial_55bits[ii]>>j) & 0x01);
  2302  00EB  0851               	movf	get_RFID@ii,w
  2303  00EC  3E3E               	addlw	get_RFID@RF_serial_55bits& (0+255)
  2304  00ED  0084               	movwf	4
  2305  00EE  0800               	movf	0,w
  2306  00EF  00F7               	movwf	??_get_RFID
  2307  00F0  0A4C               	incf	get_RFID@j,w
  2308  00F1  28F4               	goto	u1434
  2309  00F2                     u1435:	
  2310  00F2  1003               	clrc
  2311  00F3  0CF7               	rrf	??_get_RFID,f
  2312  00F4                     u1434:	
  2313  00F4  3EFF               	addlw	-1
  2314  00F5  1D03               	skipz
  2315  00F6  28F2               	goto	u1435
  2316  00F7  0877               	movf	??_get_RFID,w
  2317  00F8  3901               	andlw	1
  2318  00F9  06CB               	xorwf	get_RFID@even_row,f
  2319  00FA  3005               	movlw	5
  2320  00FB  0ACC               	incf	get_RFID@j,f
  2321  00FC  024C               	subwf	get_RFID@j,w
  2322  00FD  1C03               	skipc
  2323  00FE  28EB               	goto	l5631
  2324                           
  2325                           ;rfid125.c: 132: }
  2326                           ;rfid125.c: 133: if(even_row & 0x01)
  2327  00FF  184B               	btfsc	get_RFID@even_row,0
  2328  0100  3400               	retlw	0
  2329                           
  2330                           ;rfid125.c: 136: }
  2331                           ;rfid125.c: 138: RF_serial_55bits[ii] <<= 3;
  2332  0101  0851               	movf	get_RFID@ii,w
  2333  0102  3E3E               	addlw	get_RFID@RF_serial_55bits& (0+255)
  2334  0103  0084               	movwf	4
  2335  0104  0D80               	rlf	0,f
  2336  0105  0D80               	rlf	0,f
  2337  0106  0D00               	rlf	0,w
  2338  0107  39F8               	andlw	248
  2339  0108  0080               	movwf	0
  2340                           
  2341                           ;rfid125.c: 140: i = RF_serial_55bits[ii];
  2342  0109  0851               	movf	get_RFID@ii,w
  2343  010A  3E3E               	addlw	get_RFID@RF_serial_55bits& (0+255)
  2344  010B  0084               	movwf	4
  2345  010C  0800               	movf	0,w
  2346  010D  00CD               	movwf	get_RFID@i
  2347                           
  2348                           ;rfid125.c: 141: if( 0==ii%2 )
  2349  010E  1851               	btfsc	get_RFID@ii,0
  2350  010F  291D               	goto	l5647
  2351                           
  2352                           ;rfid125.c: 142: {
  2353                           ;rfid125.c: 143: keyID[ii/2] = (i & 0xF0);
  2354  0110  1003               	clrc
  2355  0111  0C51               	rrf	get_RFID@ii,w
  2356  0112  3E5D               	addlw	_keyID& (0+255)
  2357  0113  0084               	movwf	4
  2358  0114  084D               	movf	get_RFID@i,w
  2359  0115  0080               	movwf	0
  2360  0116  1003               	clrc
  2361  0117  0C51               	rrf	get_RFID@ii,w
  2362  0118  3E5D               	addlw	_keyID& (0+255)
  2363  0119  0084               	movwf	4
  2364  011A  30F0               	movlw	240
  2365  011B  0580               	andwf	0,f
  2366                           
  2367                           ;rfid125.c: 144: }
  2368  011C  2927               	goto	l5651
  2369  011D                     l5647:	
  2370  011D  300F               	movlw	15
  2371                           
  2372                           ;rfid125.c: 145: else
  2373                           ;rfid125.c: 146: {
  2374                           ;rfid125.c: 147: i >>=4;
  2375  011E  0ECD               	swapf	get_RFID@i,f
  2376  011F  05CD               	andwf	get_RFID@i,f
  2377                           
  2378                           ;rfid125.c: 148: keyID[ii/2] |= (i & 0x0F);
  2379  0120  1003               	clrc
  2380  0121  0C51               	rrf	get_RFID@ii,w
  2381  0122  3E5D               	addlw	_keyID& (0+255)
  2382  0123  0084               	movwf	4
  2383  0124  084D               	movf	get_RFID@i,w
  2384  0125  390F               	andlw	15
  2385  0126  0480               	iorwf	0,f
  2386  0127                     l5651:	
  2387                           
  2388                           ;rfid125.c: 149: }
  2389                           ;rfid125.c: 150: even_col ^= RF_serial_55bits[ii];
  2390  0127  0851               	movf	get_RFID@ii,w
  2391  0128  3E3E               	addlw	get_RFID@RF_serial_55bits& (0+255)
  2392  0129  0084               	movwf	4
  2393  012A  0800               	movf	0,w
  2394  012B  06CA               	xorwf	get_RFID@even_col,f
  2395  012C  300A               	movlw	10
  2396  012D  0AD1               	incf	get_RFID@ii,f
  2397  012E  0251               	subwf	get_RFID@ii,w
  2398  012F  1C03               	skipc
  2399  0130  28E1               	goto	l5621
  2400                           
  2401                           ;rfid125.c: 151: }
  2402                           ;rfid125.c: 152: RF_serial_55bits[10] <<= 3;
  2403  0131  0DC8               	rlf	get_RFID@RF_serial_55bits+10,f
  2404  0132  0DC8               	rlf	get_RFID@RF_serial_55bits+10,f
  2405  0133  0D48               	rlf	get_RFID@RF_serial_55bits+10,w
  2406  0134  39F8               	andlw	248
  2407  0135  00C8               	movwf	get_RFID@RF_serial_55bits+10
  2408  0136  30F0               	movlw	240
  2409                           
  2410                           ;rfid125.c: 153: keyID[0] =0x00;
  2411  0137  01DD               	clrf	_keyID
  2412                           
  2413                           ;rfid125.c: 154: if(((RF_serial_55bits[10] & 0xf0)==(even_col & 0xf0)) && (0==(RF_serial
      +                          _55bits[10]&0x08)))
  2414  0138  054A               	andwf	get_RFID@even_col,w
  2415  0139  00F7               	movwf	??_get_RFID
  2416  013A  0848               	movf	get_RFID@RF_serial_55bits+10,w
  2417  013B  39F0               	andlw	240
  2418  013C  0677               	xorwf	??_get_RFID,w
  2419  013D  1903               	btfsc	3,2
  2420  013E  19C8               	btfsc	get_RFID@RF_serial_55bits+10,3
  2421  013F  3400               	retlw	0
  2422                           
  2423                           ;rfid125.c: 155: {
  2424                           ;rfid125.c: 157: return 1;
  2425  0140  3401               	retlw	1
  2426  0141                     __end_of_get_RFID:	
  2427  0141                     PL2:	
  2428  0141  0873               	movf	?_timerOut+1,w
  2429  0142  00D0               	movwf	get_RFID@timeOutVal+1
  2430  0143  0872               	movf	?_timerOut,w
  2431  0144  00CF               	movwf	get_RFID@timeOutVal
  2432  0145  0450               	iorwf	get_RFID@timeOutVal+1,w
  2433  0146  0008               	return
  2434  0147                     PL4:	
  2435  0147  084D               	movf	get_RFID@i,w
  2436  0148  3E3E               	addlw	get_RFID@RF_serial_55bits& (0+255)
  2437  0149  0084               	movwf	4
  2438  014A  1383               	bcf	3,7	;select IRP bank0
  2439  014B  1003               	clrc
  2440  014C  0D80               	rlf	0,f
  2441  014D  0008               	return
  2442  014E                     PL5:	
  2443  014E  3058               	movlw	88
  2444  014F  00F2               	movwf	?_timerOut
  2445  0150  3002               	movlw	2
  2446  0151  00F3               	movwf	?_timerOut+1
  2447  0152  084E               	movf	get_RFID@flag_RFID_last,w
  2448  0153  0008               	return
  2449  0154                     PL6:	
  2450  0154  00F2               	movwf	?_timerOut
  2451  0155  3002               	movlw	2
  2452  0156  00F3               	movwf	?_timerOut+1
  2453  0157  3400               	retlw	0
  2454                           
  2455                           	psect	text734
  2456  02C9                     __ptext734:	
  2457 ;; =============== function _get_RFID ends ============
  2458                           
  2459                           
  2460 ;; *************** function _eepromWriteByte *****************
  2461 ;; Defined at:
  2462 ;;		line 26 in file "ms82_eeprom.c"
  2463 ;; Parameters:    Size  Location     Type
  2464 ;;  EEAddr          1    wreg     unsigned char 
  2465 ;;  EEData          1    2[COMMON] unsigned char 
  2466 ;; Auto vars:     Size  Location     Type
  2467 ;;  EEAddr          1    5[COMMON] unsigned char 
  2468 ;; Return value:  Size  Location     Type
  2469 ;;		None               void
  2470 ;; Registers used:
  2471 ;;		wreg
  2472 ;; Tracked objects:
  2473 ;;		On entry : 0/20
  2474 ;;		On exit  : 0/0
  2475 ;;		Unchanged: 0/0
  2476 ;; Data sizes:     COMMON   BANK0   BANK1
  2477 ;;      Params:         1       0       0
  2478 ;;      Locals:         1       0       0
  2479 ;;      Temps:          2       0       0
  2480 ;;      Totals:         4       0       0
  2481 ;;Total ram usage:        4 bytes
  2482 ;; Hardware stack levels used:    1
  2483 ;; Hardware stack levels required when called:    1
  2484 ;; This function calls:
  2485 ;;		Nothing
  2486 ;; This function is called by:
  2487 ;;		_eepromWriteBlock
  2488 ;;		_main
  2489 ;; This function uses a non-reentrant model
  2490 ;;
  2491  02C9                     _eepromWriteByte:	
  2492                           
  2493                           ; Regs used in _eepromWriteByte: [wreg]
  2494                           ;eepromWriteByte@EEAddr stored from wreg
  2495  02C9  00F5               	movwf	eepromWriteByte@EEAddr
  2496                           
  2497                           ;ms82_eeprom.c: 27: GIE = 0;
  2498  02CA  138B               	bcf	11,7
  2499  02CB                     l1325:	
  2500                           ;ms82_eeprom.c: 29: {
  2501                           ;ms82_eeprom.c: 30: while(GIE) asm("clrwdt");
  2502                           
  2503  02CB  1F8B               	btfss	11,7
  2504  02CC  2ACF               	goto	l5951
  2505  02CD  0064               	clrwdt	;#
  2506  02CE  2ACB               	goto	l1325
  2507  02CF                     l5951:	
  2508                           
  2509                           ;ms82_eeprom.c: 31: EEADR = EEAddr;
  2510  02CF  0875               	movf	eepromWriteByte@EEAddr,w
  2511  02D0  1683               	bsf	3,5	;RP0=1, select bank1
  2512  02D1  1303               	bcf	3,6	;RP1=0, select bank1
  2513  02D2  009B               	movwf	27	;volatile
  2514                           
  2515                           ;ms82_eeprom.c: 32: EEDAT = EEData;
  2516  02D3  0872               	movf	eepromWriteByte@EEData,w
  2517  02D4  009A               	movwf	26	;volatile
  2518  02D5  3034               	movlw	52
  2519                           
  2520                           ;ms82_eeprom.c: 33: EEIF = 0;
  2521  02D6  1283               	bcf	3,5	;RP0=0, select bank0
  2522  02D7  138C               	bcf	12,7
  2523                           
  2524                           ;ms82_eeprom.c: 34: EECON1 = 0x34;
  2525  02D8  1683               	bsf	3,5	;RP0=1, select bank1
  2526  02D9  009C               	movwf	28	;volatile
  2527                           
  2528                           ;ms82_eeprom.c: 35: WR = 1;
  2529  02DA  141D               	bsf	29,0
  2530  02DB                     l1328:	
  2531                           ;ms82_eeprom.c: 36: while(WR) asm("clrwdt");
  2532                           
  2533  02DB  1683               	bsf	3,5	;RP0=1, select bank1
  2534  02DC  1303               	bcf	3,6	;RP1=0, select bank1
  2535  02DD  1C1D               	btfss	29,0
  2536  02DE  2AE1               	goto	l5957
  2537  02DF  0064               	clrwdt	;#
  2538  02E0  2ADB               	goto	l1328
  2539  02E1                     l5957:	
  2540                           
  2541                           ;ms82_eeprom.c: 37: _delay((unsigned long)((2)*(8000000/4000.0)));
  2542  02E1  3006               	movlw	6
  2543  02E2  00F4               	movwf	??_eepromWriteByte+1
  2544  02E3  3030               	movlw	48
  2545  02E4  00F3               	movwf	??_eepromWriteByte
  2546  02E5                     u2087:	
  2547  02E5  0BF3               	decfsz	??_eepromWriteByte,f
  2548  02E6  2AE5               	goto	u2087
  2549  02E7  0BF4               	decfsz	??_eepromWriteByte+1,f
  2550  02E8  2AE5               	goto	u2087
  2551  02E9  0064               	clrwdt
  2552                           
  2553                           ;ms82_eeprom.c: 38: }
  2554                           ;ms82_eeprom.c: 39: GIE = 1;
  2555  02EA  178B               	bsf	11,7
  2556  02EB  0008               	return
  2557  02EC                     __end_of_eepromWriteByte:	
  2558                           
  2559                           	psect	text735
  2560  040A                     __ptext735:	
  2561 ;; =============== function _eepromWriteByte ends ============
  2562                           
  2563                           
  2564 ;; *************** function _eepromReadBlock *****************
  2565 ;; Defined at:
  2566 ;;		line 18 in file "ms82_eeprom.c"
  2567 ;; Parameters:    Size  Location     Type
  2568 ;;  addStart        1    wreg     unsigned char 
  2569 ;;  buff            1    4[COMMON] PTR unsigned char 
  2570 ;;		 -> buffTag(25), 
  2571 ;;  len             1    5[COMMON] unsigned char 
  2572 ;; Auto vars:     Size  Location     Type
  2573 ;;  addStart        1    7[COMMON] unsigned char 
  2574 ;;  i               1    8[COMMON] unsigned char 
  2575 ;; Return value:  Size  Location     Type
  2576 ;;		None               void
  2577 ;; Registers used:
  2578 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2579 ;; Tracked objects:
  2580 ;;		On entry : 0/20
  2581 ;;		On exit  : 0/0
  2582 ;;		Unchanged: FFE9F/0
  2583 ;; Data sizes:     COMMON   BANK0   BANK1
  2584 ;;      Params:         2       0       0
  2585 ;;      Locals:         2       0       0
  2586 ;;      Temps:          1       0       0
  2587 ;;      Totals:         5       0       0
  2588 ;;Total ram usage:        5 bytes
  2589 ;; Hardware stack levels used:    1
  2590 ;; Hardware stack levels required when called:    2
  2591 ;; This function calls:
  2592 ;;		_eepromReadByte
  2593 ;; This function is called by:
  2594 ;;		_main
  2595 ;; This function uses a non-reentrant model
  2596 ;;
  2597  040A                     _eepromReadBlock:	
  2598                           
  2599                           ; Regs used in _eepromReadBlock: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2600                           ;eepromReadBlock@addStart stored from wreg
  2601  040A  00F7               	movwf	eepromReadBlock@addStart
  2602                           
  2603                           ;ms82_eeprom.c: 19: unsigned char i;
  2604                           ;ms82_eeprom.c: 20: for(i=0;i<len;i++){
  2605  040B  01F8               	clrf	eepromReadBlock@i
  2606  040C                     l5435:	
  2607  040C  0875               	movf	eepromReadBlock@len,w
  2608  040D  0278               	subwf	eepromReadBlock@i,w
  2609  040E  1803               	btfsc	3,0
  2610  040F  0008               	return
  2611                           
  2612                           ;ms82_eeprom.c: 21: buff[i] = eepromReadByte(addStart+i);
  2613  0410  0878               	movf	eepromReadBlock@i,w
  2614  0411  0774               	addwf	eepromReadBlock@buff,w
  2615  0412  00F6               	movwf	??_eepromReadBlock
  2616  0413  0084               	movwf	4
  2617  0414  0878               	movf	eepromReadBlock@i,w
  2618  0415  0777               	addwf	eepromReadBlock@addStart,w
  2619  0416  2487               	fcall	_eepromReadByte
  2620  0417  1383               	bcf	3,7	;select IRP bank0
  2621  0418  0080               	movwf	0
  2622  0419  0AF8               	incf	eepromReadBlock@i,f
  2623  041A  2C0C               	goto	l5435
  2624  041B                     __end_of_eepromReadBlock:	
  2625                           
  2626                           	psect	text736
  2627  0473                     __ptext736:	
  2628 ;; =============== function _eepromReadBlock ends ============
  2629                           
  2630                           
  2631 ;; *************** function _sys_init *****************
  2632 ;; Defined at:
  2633 ;;		line 3 in file "sysinit.c"
  2634 ;; Parameters:    Size  Location     Type
  2635 ;;		None
  2636 ;; Auto vars:     Size  Location     Type
  2637 ;;		None
  2638 ;; Return value:  Size  Location     Type
  2639 ;;		None               void
  2640 ;; Registers used:
  2641 ;;		wreg
  2642 ;; Tracked objects:
  2643 ;;		On entry : 0/0
  2644 ;;		On exit  : 60/20
  2645 ;;		Unchanged: 0/0
  2646 ;; Data sizes:     COMMON   BANK0   BANK1
  2647 ;;      Params:         0       0       0
  2648 ;;      Locals:         0       0       0
  2649 ;;      Temps:          0       0       0
  2650 ;;      Totals:         0       0       0
  2651 ;;Total ram usage:        0 bytes
  2652 ;; Hardware stack levels used:    1
  2653 ;; Hardware stack levels required when called:    1
  2654 ;; This function calls:
  2655 ;;		Nothing
  2656 ;; This function is called by:
  2657 ;;		_main
  2658 ;; This function uses a non-reentrant model
  2659 ;;
  2660  0473                     _sys_init:	
  2661                           
  2662                           ;sysinit.c: 21: OSCCON = 0B01100001;
  2663                           
  2664                           ; Regs used in _sys_init: [wreg]
  2665  0473  3061               	movlw	97
  2666  0474  1683               	bsf	3,5	;RP0=1, select bank1
  2667  0475  1303               	bcf	3,6	;RP1=0, select bank1
  2668  0476  008F               	movwf	15	;volatile
  2669                           
  2670                           ;sysinit.c: 22: _nop();
  2671  0477  0000               	nop
  2672  0478                     l651:	
  2673                           ;sysinit.c: 28: while(HTS==0);
  2674                           
  2675  0478  1683               	bsf	3,5	;RP0=1, select bank1
  2676  0479  1303               	bcf	3,6	;RP1=0, select bank1
  2677  047A  190F               	btfsc	15,2
  2678  047B  0008               	return
  2679  047C  2C78               	goto	l651
  2680  047D                     __end_of_sys_init:	
  2681                           
  2682                           	psect	text737
  2683  036A                     __ptext737:	
  2684 ;; =============== function _sys_init ends ============
  2685                           
  2686                           
  2687 ;; *************** function ___lbdiv *****************
  2688 ;; Defined at:
  2689 ;;		line 5 in file "D:\OneDrive\SmarRF\MCU\MC82\IDE\ORIGINIDE_V2.0.9\Program Files (x86)\HI-TECH Software\PICC\9.83\sour
      +ces\lbdiv.c"
  2690 ;; Parameters:    Size  Location     Type
  2691 ;;  dividend        1    wreg     unsigned char 
  2692 ;;  divisor         1    2[COMMON] unsigned char 
  2693 ;; Auto vars:     Size  Location     Type
  2694 ;;  dividend        1    3[COMMON] unsigned char 
  2695 ;;  quotient        1    5[COMMON] unsigned char 
  2696 ;;  counter         1    4[COMMON] unsigned char 
  2697 ;; Return value:  Size  Location     Type
  2698 ;;                  1    wreg      unsigned char 
  2699 ;; Registers used:
  2700 ;;		wreg, status,2, status,0
  2701 ;; Tracked objects:
  2702 ;;		On entry : 60/0
  2703 ;;		On exit  : 60/0
  2704 ;;		Unchanged: FFF9F/0
  2705 ;; Data sizes:     COMMON   BANK0   BANK1
  2706 ;;      Params:         1       0       0
  2707 ;;      Locals:         3       0       0
  2708 ;;      Temps:          0       0       0
  2709 ;;      Totals:         4       0       0
  2710 ;;Total ram usage:        4 bytes
  2711 ;; Hardware stack levels used:    1
  2712 ;; Hardware stack levels required when called:    1
  2713 ;; This function calls:
  2714 ;;		Nothing
  2715 ;; This function is called by:
  2716 ;;		_get_RFID
  2717 ;;		_id_search
  2718 ;; This function uses a non-reentrant model
  2719 ;;
  2720  036A                     ___lbdiv:	
  2721                           
  2722                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  2723                           ;___lbdiv@dividend stored from wreg
  2724  036A  00F3               	movwf	___lbdiv@dividend
  2725  036B  01F5               	clrf	___lbdiv@quotient
  2726  036C  0872               	movf	___lbdiv@divisor,w
  2727  036D  1903               	btfsc	3,2
  2728  036E  2B83               	goto	l5421
  2729  036F  01F4               	clrf	___lbdiv@counter
  2730  0370                     l5407:	
  2731  0370  0AF4               	incf	___lbdiv@counter,f
  2732  0371  1BF2               	btfsc	___lbdiv@divisor,7
  2733  0372  2B76               	goto	l4221
  2734  0373  1003               	clrc
  2735  0374  0DF2               	rlf	___lbdiv@divisor,f
  2736  0375  2B70               	goto	l5407
  2737  0376                     l4221:	
  2738  0376  1003               	clrc
  2739  0377  0DF5               	rlf	___lbdiv@quotient,f
  2740  0378  0872               	movf	___lbdiv@divisor,w
  2741  0379  0273               	subwf	___lbdiv@dividend,w
  2742  037A  1C03               	skipc
  2743  037B  2B80               	goto	L2
  2744  037C  0872               	movf	___lbdiv@divisor,w
  2745  037D  02F3               	subwf	___lbdiv@dividend,f
  2746  037E  1475               	bsf	___lbdiv@quotient,0
  2747  037F  1003               	clrc
  2748  0380                     L2:	
  2749  0380  0CF2               	rrf	___lbdiv@divisor,f
  2750  0381  0BF4               	decfsz	___lbdiv@counter,f
  2751  0382  2B76               	goto	l4221
  2752  0383                     l5421:	
  2753  0383  0875               	movf	___lbdiv@quotient,w
  2754  0384  0008               	return
  2755  0385                     __end_of___lbdiv:	
  2756                           
  2757                           	psect	text738
  2758  045A                     __ptext738:	
  2759 ;; =============== function ___lbdiv ends ============
  2760                           
  2761                           
  2762 ;; *************** function ___bmul *****************
  2763 ;; Defined at:
  2764 ;;		line 3 in file "D:\OneDrive\SmarRF\MCU\MC82\IDE\ORIGINIDE_V2.0.9\Program Files (x86)\HI-TECH Software\PICC\9.83\sour
      +ces\bmul.c"
  2765 ;; Parameters:    Size  Location     Type
  2766 ;;  multiplier      1    wreg     unsigned char 
  2767 ;;  multiplicand    1    2[COMMON] unsigned char 
  2768 ;; Auto vars:     Size  Location     Type
  2769 ;;  multiplier      1    4[COMMON] unsigned char 
  2770 ;;  product         1    3[COMMON] unsigned char 
  2771 ;; Return value:  Size  Location     Type
  2772 ;;                  1    wreg      unsigned char 
  2773 ;; Registers used:
  2774 ;;		wreg, status,2, status,0
  2775 ;; Tracked objects:
  2776 ;;		On entry : 60/0
  2777 ;;		On exit  : 60/0
  2778 ;;		Unchanged: FFF9F/0
  2779 ;; Data sizes:     COMMON   BANK0   BANK1
  2780 ;;      Params:         1       0       0
  2781 ;;      Locals:         2       0       0
  2782 ;;      Temps:          0       0       0
  2783 ;;      Totals:         3       0       0
  2784 ;;Total ram usage:        3 bytes
  2785 ;; Hardware stack levels used:    1
  2786 ;; Hardware stack levels required when called:    1
  2787 ;; This function calls:
  2788 ;;		Nothing
  2789 ;; This function is called by:
  2790 ;;		_id_replate
  2791 ;; This function uses a non-reentrant model
  2792 ;;
  2793  045A                     ___bmul:	
  2794                           
  2795                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2796                           ;___bmul@multiplier stored from wreg
  2797  045A  00F4               	movwf	___bmul@multiplier
  2798  045B  01F3               	clrf	___bmul@product
  2799  045C                     l5935:	
  2800  045C  0872               	movf	___bmul@multiplicand,w
  2801  045D  1874               	btfsc	___bmul@multiplier,0
  2802  045E  07F3               	addwf	___bmul@product,f
  2803  045F  1003               	clrc
  2804  0460  0DF2               	rlf	___bmul@multiplicand,f
  2805  0461  1003               	clrc
  2806  0462  0CF4               	rrf	___bmul@multiplier,f
  2807  0463  08F4               	movf	___bmul@multiplier,f
  2808  0464  1D03               	skipz
  2809  0465  2C5C               	goto	l5935
  2810  0466  0873               	movf	___bmul@product,w
  2811  0467  0008               	return
  2812  0468                     __end_of___bmul:	
  2813                           
  2814                           	psect	text739
  2815  0468                     __ptext739:	
  2816 ;; =============== function ___bmul ends ============
  2817                           
  2818                           
  2819 ;; *************** function _setState *****************
  2820 ;; Defined at:
  2821 ;;		line 145 in file "MAIN.C"
  2822 ;; Parameters:    Size  Location     Type
  2823 ;;  stt             1    wreg     unsigned char 
  2824 ;;  _tOut           2    2[COMMON] unsigned int 
  2825 ;; Auto vars:     Size  Location     Type
  2826 ;;  stt             1    4[COMMON] unsigned char 
  2827 ;; Return value:  Size  Location     Type
  2828 ;;		None               void
  2829 ;; Registers used:
  2830 ;;		wreg, status,2
  2831 ;; Tracked objects:
  2832 ;;		On entry : 0/20
  2833 ;;		On exit  : 60/0
  2834 ;;		Unchanged: FFF9F/0
  2835 ;; Data sizes:     COMMON   BANK0   BANK1
  2836 ;;      Params:         2       0       0
  2837 ;;      Locals:         1       0       0
  2838 ;;      Temps:          0       0       0
  2839 ;;      Totals:         3       0       0
  2840 ;;Total ram usage:        3 bytes
  2841 ;; Hardware stack levels used:    1
  2842 ;; Hardware stack levels required when called:    1
  2843 ;; This function calls:
  2844 ;;		Nothing
  2845 ;; This function is called by:
  2846 ;;		_main
  2847 ;; This function uses a non-reentrant model
  2848 ;;
  2849  0468                     _setState:	
  2850                           
  2851                           ; Regs used in _setState: [wreg+status,2]
  2852                           ;setState@stt stored from wreg
  2853  0468  00F4               	movwf	setState@stt
  2854                           
  2855                           ;MAIN.C: 147: mtState = stt;
  2856  0469  1283               	bcf	3,5	;RP0=0, select bank0
  2857  046A  1303               	bcf	3,6	;RP1=0, select bank0
  2858  046B  00DC               	movwf	_mtState
  2859                           
  2860                           ;MAIN.C: 148: timeTick =0;
  2861  046C  01DA               	clrf	_timeTick
  2862  046D  01DB               	clrf	_timeTick+1
  2863                           
  2864                           ;MAIN.C: 149: timeOut = _tOut;
  2865  046E  0873               	movf	setState@_tOut+1,w
  2866  046F  00D9               	movwf	_timeOut+1
  2867  0470  0872               	movf	setState@_tOut,w
  2868  0471  00D8               	movwf	_timeOut
  2869  0472  0008               	return
  2870  0473                     __end_of_setState:	
  2871                           
  2872                           	psect	text740
  2873  03B7                     __ptext740:	
  2874 ;; =============== function _setState ends ============
  2875                           
  2876                           
  2877 ;; *************** function _SET_EPWM_ON *****************
  2878 ;; Defined at:
  2879 ;;		line 11 in file "ms82_pwm.c"
  2880 ;; Parameters:    Size  Location     Type
  2881 ;;		None
  2882 ;; Auto vars:     Size  Location     Type
  2883 ;;		None
  2884 ;; Return value:  Size  Location     Type
  2885 ;;		None               void
  2886 ;; Registers used:
  2887 ;;		wreg, status,2
  2888 ;; Tracked objects:
  2889 ;;		On entry : 60/20
  2890 ;;		On exit  : 60/20
  2891 ;;		Unchanged: FFE00/0
  2892 ;; Data sizes:     COMMON   BANK0   BANK1
  2893 ;;      Params:         0       0       0
  2894 ;;      Locals:         0       0       0
  2895 ;;      Temps:          0       0       0
  2896 ;;      Totals:         0       0       0
  2897 ;;Total ram usage:        0 bytes
  2898 ;; Hardware stack levels used:    1
  2899 ;; Hardware stack levels required when called:    1
  2900 ;; This function calls:
  2901 ;;		Nothing
  2902 ;; This function is called by:
  2903 ;;		_main
  2904 ;; This function uses a non-reentrant model
  2905 ;;
  2906  03B7                     _SET_EPWM_ON:	
  2907                           
  2908                           ;ms82_pwm.c: 12: TRISC |= 0b00000100;
  2909                           
  2910                           ; Regs used in _SET_EPWM_ON: [wreg+status,2]
  2911  03B7  1507               	bsf	7,2	;volatile
  2912                           
  2913                           ;ms82_pwm.c: 13: PR2 = 15;
  2914  03B8  300F               	movlw	15
  2915  03B9  0092               	movwf	18	;volatile
  2916                           
  2917                           ;ms82_pwm.c: 14: EPWMR1L =0;
  2918  03BA  1283               	bcf	3,5	;RP0=0, select bank0
  2919  03BB  0193               	clrf	19	;volatile
  2920                           
  2921                           ;ms82_pwm.c: 15: EPWM1CON = 0b10011100;
  2922  03BC  309C               	movlw	156
  2923  03BD  0095               	movwf	21	;volatile
  2924                           
  2925                           ;ms82_pwm.c: 16: TMR2 = 0;
  2926  03BE  0191               	clrf	17	;volatile
  2927  03BF  3004               	movlw	4
  2928                           
  2929                           ;ms82_pwm.c: 17: TMR2IF = 0;
  2930  03C0  108C               	bcf	12,1
  2931                           
  2932                           ;ms82_pwm.c: 18: T2CON = 0B00000100;
  2933  03C1  0092               	movwf	18	;volatile
  2934  03C2                     l2750:	
  2935                           ;ms82_pwm.c: 19: while(TMR2IF==1) asm("clrwdt");
  2936                           
  2937  03C2  1283               	bcf	3,5	;RP0=0, select bank0
  2938  03C3  1303               	bcf	3,6	;RP1=0, select bank0
  2939  03C4  1C8C               	btfss	12,1
  2940  03C5  2BC8               	goto	l5375
  2941  03C6  0064               	clrwdt	;#
  2942  03C7  2BC2               	goto	l2750
  2943  03C8                     l5375:	
  2944                           
  2945                           ;ms82_pwm.c: 20: PWM1CON = 0b00010000;
  2946  03C8  3010               	movlw	16
  2947  03C9  0096               	movwf	22	;volatile
  2948                           
  2949                           ;ms82_pwm.c: 21: EPWM1AUX = 0b10001000;
  2950  03CA  3088               	movlw	136
  2951  03CB  1683               	bsf	3,5	;RP0=1, select bank1
  2952  03CC  0090               	movwf	16	;volatile
  2953                           
  2954                           ;ms82_pwm.c: 22: TRISC &= 0b11111011;
  2955  03CD  1107               	bcf	7,2	;volatile
  2956  03CE  0008               	return
  2957  03CF                     __end_of_SET_EPWM_ON:	
  2958                           
  2959                           	psect	text741
  2960  02EC                     __ptext741:	
  2961 ;; =============== function _SET_EPWM_ON ends ============
  2962                           
  2963                           
  2964 ;; *************** function _timerOut *****************
  2965 ;; Defined at:
  2966 ;;		line 6 in file "rfid125.c"
  2967 ;; Parameters:    Size  Location     Type
  2968 ;;  Logic           1    wreg     unsigned char 
  2969 ;;  time            2    2[COMMON] unsigned int 
  2970 ;; Auto vars:     Size  Location     Type
  2971 ;;  Logic           1    4[COMMON] unsigned char 
  2972 ;;  CurTimer        2    5[COMMON] unsigned int 
  2973 ;; Return value:  Size  Location     Type
  2974 ;;                  2    2[COMMON] unsigned int 
  2975 ;; Registers used:
  2976 ;;		wreg, status,2
  2977 ;; Tracked objects:
  2978 ;;		On entry : 60/0
  2979 ;;		On exit  : 60/0
  2980 ;;		Unchanged: FFF9F/0
  2981 ;; Data sizes:     COMMON   BANK0   BANK1
  2982 ;;      Params:         2       0       0
  2983 ;;      Locals:         3       0       0
  2984 ;;      Temps:          0       0       0
  2985 ;;      Totals:         5       0       0
  2986 ;;Total ram usage:        5 bytes
  2987 ;; Hardware stack levels used:    1
  2988 ;; Hardware stack levels required when called:    1
  2989 ;; This function calls:
  2990 ;;		Nothing
  2991 ;; This function is called by:
  2992 ;;		_get_RFID
  2993 ;; This function uses a non-reentrant model
  2994 ;;
  2995  02EC                     _timerOut:	
  2996                           
  2997                           ; Regs used in _timerOut: [wreg+status,2]
  2998                           ;timerOut@Logic stored from wreg
  2999  02EC  00F4               	movwf	timerOut@Logic
  3000                           
  3001                           ;rfid125.c: 7: unsigned int CurTimer;
  3002                           ;rfid125.c: 8: TMR1ON = 0;
  3003  02ED  1010               	bcf	16,0
  3004                           
  3005                           ;rfid125.c: 9: TMR1H = 0;
  3006  02EE  018F               	clrf	15	;volatile
  3007                           
  3008                           ;rfid125.c: 10: TMR1L = 0;
  3009  02EF  018E               	clrf	14	;volatile
  3010                           
  3011                           ;rfid125.c: 11: TMR1IF = 0;
  3012  02F0  100C               	bcf	12,0
  3013                           
  3014                           ;rfid125.c: 12: TMR1ON = 1;
  3015  02F1  1410               	bsf	16,0
  3016  02F2                     l5357:	
  3017                           ;rfid125.c: 13: while(RA4==Logic){
  3018                           
  3019  02F2  3000               	movlw	0
  3020  02F3  1A05               	btfsc	5,4
  3021  02F4  3001               	movlw	1
  3022  02F5  0674               	xorwf	timerOut@Logic,w
  3023  02F6  1D03               	btfss	3,2
  3024  02F7  2B08               	goto	l5359
  3025                           
  3026                           ;rfid125.c: 14: CurTimer= (TMR1H <<8 )| TMR1L;
  3027  02F8  080F               	movf	15,w	;volatile
  3028  02F9  00F6               	movwf	timerOut@CurTimer+1
  3029  02FA  01F5               	clrf	timerOut@CurTimer
  3030  02FB  080E               	movf	14,w	;volatile
  3031  02FC  04F5               	iorwf	timerOut@CurTimer,f
  3032                           
  3033                           ;rfid125.c: 15: if(CurTimer>time)
  3034  02FD  0876               	movf	timerOut@CurTimer+1,w
  3035  02FE  0273               	subwf	timerOut@time+1,w
  3036  02FF  1D03               	skipz
  3037  0300  2B03               	goto	u945
  3038  0301  0875               	movf	timerOut@CurTimer,w
  3039  0302  0272               	subwf	timerOut@time,w
  3040  0303                     u945:	
  3041  0303  1803               	skipnc
  3042  0304  2AF2               	goto	l5357
  3043                           
  3044                           ;rfid125.c: 16: return 0;
  3045  0305  01F2               	clrf	?_timerOut
  3046  0306  01F3               	clrf	?_timerOut+1
  3047  0307  0008               	return
  3048  0308                     l5359:	
  3049                           
  3050                           ;rfid125.c: 17: }
  3051                           ;rfid125.c: 18: return CurTimer;
  3052  0308  0876               	movf	timerOut@CurTimer+1,w
  3053  0309  00F3               	movwf	?_timerOut+1
  3054  030A  0875               	movf	timerOut@CurTimer,w
  3055  030B  00F2               	movwf	?_timerOut
  3056  030C  0008               	return
  3057  030D                     __end_of_timerOut:	
  3058                           
  3059                           	psect	text742
  3060  032D                     __ptext742:	
  3061 ;; =============== function _timerOut ends ============
  3062                           
  3063                           
  3064 ;; *************** function _comArr *****************
  3065 ;; Defined at:
  3066 ;;		line 52 in file "ms82_eeprom.c"
  3067 ;; Parameters:    Size  Location     Type
  3068 ;;  arr1            1    wreg     PTR unsigned char 
  3069 ;;		 -> keyID(5), 
  3070 ;;  arr2            1    2[COMMON] PTR unsigned char 
  3071 ;;		 -> buffTag(25), 
  3072 ;;  len1            1    3[COMMON] unsigned char 
  3073 ;;  len2            1    4[COMMON] unsigned char 
  3074 ;; Auto vars:     Size  Location     Type
  3075 ;;  arr1            1    8[COMMON] PTR unsigned char 
  3076 ;;		 -> keyID(5), 
  3077 ;;  i               1    9[COMMON] unsigned char 
  3078 ;; Return value:  Size  Location     Type
  3079 ;;                  1    wreg      unsigned char 
  3080 ;; Registers used:
  3081 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3082 ;; Tracked objects:
  3083 ;;		On entry : 60/0
  3084 ;;		On exit  : 60/0
  3085 ;;		Unchanged: FFE9F/0
  3086 ;; Data sizes:     COMMON   BANK0   BANK1
  3087 ;;      Params:         3       0       0
  3088 ;;      Locals:         2       0       0
  3089 ;;      Temps:          3       0       0
  3090 ;;      Totals:         8       0       0
  3091 ;;Total ram usage:        8 bytes
  3092 ;; Hardware stack levels used:    1
  3093 ;; Hardware stack levels required when called:    1
  3094 ;; This function calls:
  3095 ;;		Nothing
  3096 ;; This function is called by:
  3097 ;;		_id_search
  3098 ;; This function uses a non-reentrant model
  3099 ;;
  3100  032D                     _comArr:	
  3101                           
  3102                           ; Regs used in _comArr: [wreg-fsr0h+status,2+status,0]
  3103                           ;comArr@arr1 stored from wreg
  3104  032D  00F8               	movwf	comArr@arr1
  3105                           
  3106                           ;ms82_eeprom.c: 53: unsigned char i;
  3107                           ;ms82_eeprom.c: 55: if(len1!=len2)
  3108  032E  0873               	movf	comArr@len1,w
  3109  032F  0674               	xorwf	comArr@len2,w
  3110  0330  1D03               	btfss	3,2
  3111                           
  3112                           ;ms82_eeprom.c: 56: return 0;
  3113  0331  3400               	retlw	0
  3114                           
  3115                           ;ms82_eeprom.c: 57: else{
  3116                           ;ms82_eeprom.c: 58: for(i=0;i<len1;i++){
  3117  0332  01F9               	clrf	comArr@i
  3118  0333                     l5329:	
  3119  0333  0873               	movf	comArr@len1,w
  3120  0334  0279               	subwf	comArr@i,w
  3121                           
  3122                           ;ms82_eeprom.c: 59: if(*(arr1+i) != *(arr2+i)){
  3123  0335  0879               	movf	comArr@i,w
  3124  0336  1803               	btfsc	3,0
  3125  0337  2B48               	goto	L3
  3126  0338  0772               	addwf	comArr@arr2,w
  3127  0339  00F5               	movwf	??_comArr
  3128  033A  0084               	movwf	4
  3129  033B  1383               	bcf	3,7	;select IRP bank0
  3130  033C  0800               	movf	0,w
  3131  033D  00F6               	movwf	??_comArr+1
  3132  033E  0879               	movf	comArr@i,w
  3133  033F  0778               	addwf	comArr@arr1,w
  3134  0340  00F7               	movwf	??_comArr+2
  3135  0341  0084               	movwf	4
  3136  0342  0800               	movf	0,w
  3137  0343  0676               	xorwf	??_comArr+1,w
  3138  0344  1D03               	btfss	3,2
  3139  0345  3400               	retlw	0
  3140  0346  0AF9               	incf	comArr@i,f
  3141  0347  2B33               	goto	l5329
  3142  0348                     L3:	
  3143                           ;ms82_eeprom.c: 61: }
  3144                           ;ms82_eeprom.c: 62: }
  3145                           ;ms82_eeprom.c: 63: if(i==len1)
  3146                           
  3147  0348  0673               	xorwf	comArr@len1,w
  3148  0349  1903               	btfsc	3,2
  3149                           
  3150                           ;ms82_eeprom.c: 64: return 1;
  3151  034A  3401               	retlw	1
  3152  034B  3400               	retlw	0
  3153  034C                     __end_of_comArr:	
  3154                           
  3155                           	psect	text743
  3156  0487                     __ptext743:	
  3157 ;; =============== function _comArr ends ============
  3158                           
  3159                           
  3160 ;; *************** function _eepromReadByte *****************
  3161 ;; Defined at:
  3162 ;;		line 7 in file "ms82_eeprom.c"
  3163 ;; Parameters:    Size  Location     Type
  3164 ;;  EEAddr          1    wreg     unsigned char 
  3165 ;; Auto vars:     Size  Location     Type
  3166 ;;  EEAddr          1    2[COMMON] unsigned char 
  3167 ;;  ReEepromData    1    3[COMMON] unsigned char 
  3168 ;; Return value:  Size  Location     Type
  3169 ;;                  1    wreg      unsigned char 
  3170 ;; Registers used:
  3171 ;;		wreg
  3172 ;; Tracked objects:
  3173 ;;		On entry : 0/20
  3174 ;;		On exit  : 60/20
  3175 ;;		Unchanged: FFF9F/0
  3176 ;; Data sizes:     COMMON   BANK0   BANK1
  3177 ;;      Params:         0       0       0
  3178 ;;      Locals:         2       0       0
  3179 ;;      Temps:          0       0       0
  3180 ;;      Totals:         2       0       0
  3181 ;;Total ram usage:        2 bytes
  3182 ;; Hardware stack levels used:    1
  3183 ;; Hardware stack levels required when called:    1
  3184 ;; This function calls:
  3185 ;;		Nothing
  3186 ;; This function is called by:
  3187 ;;		_eepromReadBlock
  3188 ;;		_main
  3189 ;; This function uses a non-reentrant model
  3190 ;;
  3191  0487                     _eepromReadByte:	
  3192                           
  3193                           ; Regs used in _eepromReadByte: [wreg]
  3194                           ;eepromReadByte@EEAddr stored from wreg
  3195  0487  00F2               	movwf	eepromReadByte@EEAddr
  3196                           
  3197                           ;ms82_eeprom.c: 8: unsigned char ReEepromData;
  3198                           ;ms82_eeprom.c: 10: EEADR = EEAddr;
  3199  0488  1683               	bsf	3,5	;RP0=1, select bank1
  3200  0489  1303               	bcf	3,6	;RP1=0, select bank1
  3201  048A  009B               	movwf	27	;volatile
  3202                           
  3203                           ;ms82_eeprom.c: 11: RD = 1;
  3204  048B  141C               	bsf	28,0
  3205                           
  3206                           ;ms82_eeprom.c: 12: ReEepromData = EEDAT;
  3207  048C  081A               	movf	26,w	;volatile
  3208  048D  00F3               	movwf	eepromReadByte@ReEepromData
  3209                           
  3210                           ;ms82_eeprom.c: 13: RD = 0;
  3211  048E  101C               	bcf	28,0
  3212                           
  3213                           ;ms82_eeprom.c: 14: return ReEepromData;
  3214  048F  0008               	return
  3215  0490                     __end_of_eepromReadByte:	
  3216                           
  3217                           	psect	text744
  3218  03F8                     __ptext744:	
  3219 ;; =============== function _eepromReadByte ends ============
  3220                           
  3221                           
  3222 ;; *************** function _int_init *****************
  3223 ;; Defined at:
  3224 ;;		line 66 in file "sysinit.c"
  3225 ;; Parameters:    Size  Location     Type
  3226 ;;		None
  3227 ;; Auto vars:     Size  Location     Type
  3228 ;;		None
  3229 ;; Return value:  Size  Location     Type
  3230 ;;		None               void
  3231 ;; Registers used:
  3232 ;;		status,2
  3233 ;; Tracked objects:
  3234 ;;		On entry : 60/0
  3235 ;;		On exit  : 60/20
  3236 ;;		Unchanged: FFF9F/0
  3237 ;; Data sizes:     COMMON   BANK0   BANK1
  3238 ;;      Params:         0       0       0
  3239 ;;      Locals:         0       0       0
  3240 ;;      Temps:          0       0       0
  3241 ;;      Totals:         0       0       0
  3242 ;;Total ram usage:        0 bytes
  3243 ;; Hardware stack levels used:    1
  3244 ;; Hardware stack levels required when called:    1
  3245 ;; This function calls:
  3246 ;;		Nothing
  3247 ;; This function is called by:
  3248 ;;		_main
  3249 ;; This function uses a non-reentrant model
  3250 ;;
  3251  03F8                     _int_init:	
  3252                           
  3253                           ;sysinit.c: 71: INTCON = 0B00000000;
  3254                           
  3255                           ; Regs used in _int_init: [status,2]
  3256  03F8  018B               	clrf	11	;volatile
  3257                           
  3258                           ;sysinit.c: 72: PIE1 = 0B00000000;
  3259  03F9  1683               	bsf	3,5	;RP0=1, select bank1
  3260  03FA  018C               	clrf	12	;volatile
  3261                           
  3262                           ;sysinit.c: 73: PIR1 = 0B00000000;
  3263  03FB  1283               	bcf	3,5	;RP0=0, select bank0
  3264  03FC  018C               	clrf	12	;volatile
  3265                           
  3266                           ;sysinit.c: 85: T0IF = 0;
  3267  03FD  110B               	bcf	11,2
  3268                           
  3269                           ;sysinit.c: 86: T0IE = 0;
  3270  03FE  128B               	bcf	11,5
  3271                           
  3272                           ;sysinit.c: 87: TMR1ON = 0;
  3273  03FF  1010               	bcf	16,0
  3274                           
  3275                           ;sysinit.c: 89: TMR2IF = 0;
  3276  0400  108C               	bcf	12,1
  3277                           
  3278                           ;sysinit.c: 90: TMR2IE = 0;
  3279  0401  1683               	bsf	3,5	;RP0=1, select bank1
  3280  0402  108C               	bcf	12,1
  3281                           
  3282                           ;sysinit.c: 93: TMR1IF = 0;
  3283  0403  1283               	bcf	3,5	;RP0=0, select bank0
  3284  0404  100C               	bcf	12,0
  3285                           
  3286                           ;sysinit.c: 94: TMR1IE = 0;
  3287  0405  1683               	bsf	3,5	;RP0=1, select bank1
  3288  0406  100C               	bcf	12,0
  3289                           
  3290                           ;sysinit.c: 96: PEIE = 0;
  3291  0407  130B               	bcf	11,6
  3292                           
  3293                           ;sysinit.c: 98: GIE = 1;
  3294  0408  178B               	bsf	11,7
  3295  0409  0008               	return
  3296  040A                     __end_of_int_init:	
  3297                           
  3298                           	psect	text745
  3299  047D                     __ptext745:	
  3300 ;; =============== function _int_init ends ============
  3301                           
  3302                           
  3303 ;; *************** function _timer_init *****************
  3304 ;; Defined at:
  3305 ;;		line 44 in file "sysinit.c"
  3306 ;; Parameters:    Size  Location     Type
  3307 ;;		None
  3308 ;; Auto vars:     Size  Location     Type
  3309 ;;		None
  3310 ;; Return value:  Size  Location     Type
  3311 ;;		None               void
  3312 ;; Registers used:
  3313 ;;		wreg
  3314 ;; Tracked objects:
  3315 ;;		On entry : 60/20
  3316 ;;		On exit  : 60/0
  3317 ;;		Unchanged: FFF9F/0
  3318 ;; Data sizes:     COMMON   BANK0   BANK1
  3319 ;;      Params:         0       0       0
  3320 ;;      Locals:         0       0       0
  3321 ;;      Temps:          0       0       0
  3322 ;;      Totals:         0       0       0
  3323 ;;Total ram usage:        0 bytes
  3324 ;; Hardware stack levels used:    1
  3325 ;; Hardware stack levels required when called:    1
  3326 ;; This function calls:
  3327 ;;		Nothing
  3328 ;; This function is called by:
  3329 ;;		_main
  3330 ;; This function uses a non-reentrant model
  3331 ;;
  3332  047D                     _timer_init:	
  3333                           
  3334                           ;sysinit.c: 46: OPTION = 0B00000001;
  3335                           
  3336                           ; Regs used in _timer_init: [wreg]
  3337  047D  3001               	movlw	1
  3338  047E  0081               	movwf	1	;volatile
  3339                           
  3340                           ;sysinit.c: 59: TMR1H = -5000>>8;
  3341  047F  30EC               	movlw	236
  3342  0480  1283               	bcf	3,5	;RP0=0, select bank0
  3343  0481  008F               	movwf	15	;volatile
  3344                           
  3345                           ;sysinit.c: 60: TMR1L = -5000;
  3346  0482  3078               	movlw	120
  3347  0483  008E               	movwf	14	;volatile
  3348                           
  3349                           ;sysinit.c: 61: T1CON = 0B00100001;
  3350  0484  3021               	movlw	33
  3351  0485  0090               	movwf	16	;volatile
  3352  0486  0008               	return
  3353  0487                     __end_of_timer_init:	
  3354                           
  3355                           	psect	text746
  3356  044B                     __ptext746:	
  3357 ;; =============== function _timer_init ends ============
  3358                           
  3359                           
  3360 ;; *************** function _gpio_init *****************
  3361 ;; Defined at:
  3362 ;;		line 32 in file "sysinit.c"
  3363 ;; Parameters:    Size  Location     Type
  3364 ;;		None
  3365 ;; Auto vars:     Size  Location     Type
  3366 ;;		None
  3367 ;; Return value:  Size  Location     Type
  3368 ;;		None               void
  3369 ;; Registers used:
  3370 ;;		wreg, status,2
  3371 ;; Tracked objects:
  3372 ;;		On entry : 60/20
  3373 ;;		On exit  : 60/20
  3374 ;;		Unchanged: FFF9F/0
  3375 ;; Data sizes:     COMMON   BANK0   BANK1
  3376 ;;      Params:         0       0       0
  3377 ;;      Locals:         0       0       0
  3378 ;;      Temps:          0       0       0
  3379 ;;      Totals:         0       0       0
  3380 ;;Total ram usage:        0 bytes
  3381 ;; Hardware stack levels used:    1
  3382 ;; Hardware stack levels required when called:    1
  3383 ;; This function calls:
  3384 ;;		Nothing
  3385 ;; This function is called by:
  3386 ;;		_main
  3387 ;; This function uses a non-reentrant model
  3388 ;;
  3389  044B                     _gpio_init:	
  3390                           
  3391                           ;sysinit.c: 34: PORTA = 0B00000000;
  3392                           
  3393                           ; Regs used in _gpio_init: [wreg+status,2]
  3394  044B  1283               	bcf	3,5	;RP0=0, select bank0
  3395  044C  0185               	clrf	5	;volatile
  3396                           
  3397                           ;sysinit.c: 35: TRISA = 0B01110111;
  3398  044D  3077               	movlw	119
  3399  044E  1683               	bsf	3,5	;RP0=1, select bank1
  3400  044F  0085               	movwf	5	;volatile
  3401                           
  3402                           ;sysinit.c: 36: WPUA = 0B10010000;
  3403  0450  3090               	movlw	144
  3404  0451  0095               	movwf	21	;volatile
  3405                           
  3406                           ;sysinit.c: 37: PORTC = 0B00000010;
  3407  0452  3002               	movlw	2
  3408  0453  1283               	bcf	3,5	;RP0=0, select bank0
  3409  0454  0087               	movwf	7	;volatile
  3410                           
  3411                           ;sysinit.c: 38: TRISC = 0B11111110;
  3412  0455  30FE               	movlw	254
  3413  0456  1683               	bsf	3,5	;RP0=1, select bank1
  3414  0457  0087               	movwf	7	;volatile
  3415                           
  3416                           ;sysinit.c: 39: WPUC = 0B00000000;
  3417  0458  0188               	clrf	8	;volatile
  3418  0459  0008               	return
  3419  045A                     __end_of_gpio_init:	
  3420                           
  3421                           	psect	text747
  3422  041B                     __ptext747:	
  3423 ;; =============== function _gpio_init ends ============
  3424                           
  3425                           
  3426 ;; *************** function _ISR *****************
  3427 ;; Defined at:
  3428 ;;		line 84 in file "MAIN.C"
  3429 ;; Parameters:    Size  Location     Type
  3430 ;;		None
  3431 ;; Auto vars:     Size  Location     Type
  3432 ;;		None
  3433 ;; Return value:  Size  Location     Type
  3434 ;;		None               void
  3435 ;; Registers used:
  3436 ;;		wreg
  3437 ;; Tracked objects:
  3438 ;;		On entry : 0/0
  3439 ;;		On exit  : 0/0
  3440 ;;		Unchanged: FFF9F/0
  3441 ;; Data sizes:     COMMON   BANK0   BANK1
  3442 ;;      Params:         0       0       0
  3443 ;;      Locals:         0       0       0
  3444 ;;      Temps:          2       0       0
  3445 ;;      Totals:         2       0       0
  3446 ;;Total ram usage:        2 bytes
  3447 ;; Hardware stack levels used:    1
  3448 ;; This function calls:
  3449 ;;		Nothing
  3450 ;; This function is called by:
  3451 ;;		Interrupt level 1
  3452 ;; This function uses a non-reentrant model
  3453 ;;
  3454  041B                     _ISR:	
  3455                           
  3456                           ;MAIN.C: 110: if(T0IE&&T0IF)
  3457  041B  1A8B               	btfsc	11,5
  3458  041C  1D0B               	btfss	11,2
  3459  041D  2C25               	goto	i1l3451
  3460                           
  3461                           ;MAIN.C: 111: {
  3462                           ;MAIN.C: 112: T0IF = 0;
  3463  041E  110B               	bcf	11,2
  3464                           
  3465                           ;MAIN.C: 114: TMR0 = buzFre;
  3466  041F  087B               	movf	_buzFre,w
  3467  0420  1283               	bcf	3,5	;RP0=0, select bank0
  3468  0421  1303               	bcf	3,6	;RP1=0, select bank0
  3469  0422  0081               	movwf	1	;volatile
  3470                           
  3471                           ;MAIN.C: 115: RC0 = ~RC0;
  3472  0423  3001               	movlw	1
  3473  0424  0687               	xorwf	7,f
  3474  0425                     i1l3451:	
  3475  0425  0871               	movf	??_ISR+1,w
  3476  0426  008A               	movwf	10
  3477  0427  0E70               	swapf	??_ISR^(0+-128),w
  3478  0428  0083               	movwf	3
  3479  0429  0EFE               	swapf	126,f
  3480  042A  0E7E               	swapf	126,w
  3481  042B  0009               	retfie
  3482  042C                     __end_of_ISR:	
  3483                           
  3484                           	psect	intentry
  3485  0004                     __pintentry:	
  3486                           ; Regs used in _ISR: [wreg]
  3487                           
  3488  0004                     interrupt_function:	
  3489  007E                     saved_w	set	btemp
  3490  0004  00FE               	movwf	btemp
  3491  0005  0E03               	swapf	3,w
  3492  0006  00F0               	movwf	??_ISR
  3493  0007  080A               	movf	10,w
  3494  0008  00F1               	movwf	??_ISR+1
  3495  0009  2C1B               	ljmp	_ISR
  3496                           
  3497                           	psect	text748
  3498  0000                     __ptext748:	
  3499 ;; =============== function _ISR ends ============
  3500                           
  3501  007E                     btemp	set	126	;btemp
  3502  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Sat Nov 30 13:58:31 2019

                         pc 0002              ___bmul@product 0073                          _RD 04E0  
                        _WR 04E8                          fsr 0004                         l651 0478  
                       l660 0000                         l654 0000                         l663 0000  
                       l657 0000                         _GIE 005F                         _RA3 002B  
                       _RC0 0038                         _RA4 002C                         _PR2 0092  
                       _HTS 047A                         _ISR 041B                         _SR0 0CF6  
                       _SR1 0CF7                         u945 0303                         fsr0 0004  
                       indf 0000            get_RFID@even_col 004A            get_RFID@even_row 004B  
               main@idState 0055                        S6195 0490                        ?_ISR 0070  
                      l1322 0000                        l1331 0000                        l2051 0028  
                      l1316 0000                        l1325 02CB                        l2070 0075  
                      l1328 02DB                        l1337 0000                        l2091 00D3  
                      l4221 0376                        l4224 0000                        l3441 0000  
                      l6001 0000                        l6003 0000                        l6011 0000  
                      l3516 0282                        l5301 0000                        l6101 0000  
                      l6021 0000                        l6013 0000                        l2750 03C2  
                      l3454 0000                        l3518 0289                        l5303 0000  
                      l5311 0000                        l3463 0000                        l3471 0000  
                      l6007 0000                        l6103 0000                        l6031 0000  
                      l6023 0000                        l6015 0000                        l5305 0000  
                      l2753 0000                        l5401 0000                        l6009 031F  
                      l6113 0000                        l6121 0227                        l6105 0207  
                      l6041 0000                        l6033 0000                        l6025 0000  
                      l6017 0000                        l5307 0000                        l5411 0000  
                      l5403 0000                        l6131 0000                        l6107 020C  
                      l3491 0237                        l6051 01A6                        l6043 0000  
                      l6035 0000                        l6027 0000                        l6019 0000  
                      l4188 0000                        l5405 0000                        l5421 0383  
                      l6141 0267                        l6133 0252                        l6117 0000  
                      l6061 0000                        l6125 022C                        l6045 019B  
                      l6029 0000                        l5271 0000                        l5343 0000  
                      l5415 0000                        l5407 0370                        l5511 0000  
                      l5503 0000                        l3479 0000                        l6143 026D  
                      l6127 0000                        l6119 0000                        l6063 0000  
                      l6047 0000                        l6039 018F                        l5273 0000  
                      l5281 0000                        l5329 0333                        l5345 0000  
                      l5425 0000                        l5433 0000                        l5601 0000  
                      l5521 0069                        l5513 0056                        l6153 0283  
                      l6073 0000                        l6065 0000                        l6057 01B3  
                      l6049 0000                        l6129 0245                        l5275 0000  
                      l5291 0000                        l5283 0000                        l5347 0000  
                      l5371 0000                        l5363 0000                        l5419 0000  
                      l5427 0000                        l5435 040C                        l5611 0000  
                      l5531 0000                        l5523 0000                        l5451 0000  
                      l6139 0261                        l6147 0272                        l6091 01ED  
                      l6075 0000                        l6067 01C4                        l6059 0000  
                      l5277 0000                        l5293 0000                        l5285 0000  
                      l5357 02F2                        l5349 0000                        l5373 0000  
                      l5365 0000                        l5381 0000                        l5429 0000  
                      l5621 00E1                        l5525 0000                        l5517 0060  
                      l5533 0079                        l5509 0053                        l5541 002B  
                      l5453 000E                        l6157 028A                        l6149 027D  
                      l6085 0000                        l6077 0000                        l6069 0000  
                      l5279 0000                        l5295 0000                        l5287 0000  
                      l5359 0308                        l5375 03C8                        l5367 0000  
                      l5383 0000                        l5631 00EB                        l5623 0000  
                      l5607 0000                        l5543 0084                        l5535 0000  
                      l5519 0000                        l5471 0000                        l5463 0000  
                      l5455 0000                        l6087 0000                        l6079 01D8  
                      l5297 0000                        l5289 0000                        l5377 0000  
                      l5369 0000                        l5633 0000                        l5625 0000  
                      l5609 00D6                        l5537 007E                        l5449 0000  
                      l5713 0000                        l5721 03D0                        l5705 0000  
                      l6097 0000                        l6089 0000                        l5299 0000  
                      l5379 0000                        l5651 0127                        l5643 0000  
                      l5635 0000                        l5571 0000                        l5555 0088  
                      l5483 0030                        l5475 0000                        l5715 0000  
                      l5707 0000                        l5653 0000                        l5573 00A5  
                      l5557 0000                        l5485 0000                        l5717 0000  
                      l5709 0000                        l5655 0000                        l5647 011D  
                      l5583 00B0                        l5559 0000                        l5495 003F  
                      l5671 0000                        l5657 0000                        l5649 0000  
                      l5593 00C1                        l5585 0000                        l5577 0000  
                      l5569 009C                        l5497 0000                        l5659 0000  
                      l5595 0000                        l5587 0000                        l5499 0048  
                      l5675 042D                        l5941 0000                        l5933 0000  
                      l5597 00CA                        l5589 00B7                        l5943 0000  
                      l5935 045C                        l5951 02CF                        l5599 0000  
                      l5953 0000                        l5961 0000                        l5955 0000  
                      l5957 02E1                        l5949 0000                        l5981 0000  
                      l5959 0000                        l5975 0000                        l5967 0387  
                      l5991 0000                        l5985 0000                        l5993 0000  
                      l5987 03E8                        l5995 0000                        l5997 0000  
                      l5989 0000                        l5999 0000                        _EEIF 0067  
                      _T0IE 005D                        _T0IF 005A                        u2015 025E  
                      u2047 0173                        u2057 023F                        u1434 00F4  
                      u1435 00F2                        u2067 024C                        u2077 0436  
                      u2087 02E5                        _PIE1 008C                        _PEIE 005E  
                      _PIR1 000C                        _TMR0 0001                        _TMR2 0011  
                      _STRA 0CE8                        _STRB 0CE9                        _STRC 0CEA  
                      _STRD 0CEB                        _WREN 0C62                        _WPUA 0095  
                      _WPUC 0088                        _main 0158                        btemp 007E  
                      start 000A           ___bmul@multiplier 0074                       ??_ISR 0070  
                     _C1SEN 0CF5                       _C2REN 0CF4                       ?_main 0070  
           __end_of___lbdiv 0385                       _EEADR 009B                       _EEDAT 009A  
                     _EEPGD 0C67                       _T1CON 0010                       _T2CON 0012  
                     _TMR1H 000F                       _TMR1L 000E                       _PORTA 0005  
                     _PORTC 0007                       _SRCON 019E                       _PULSR 0CF2  
                     _PULSS 0CF3                       _TRISA 0085                       _TRISC 0087  
                     _beep2 03CF    __size_of_eepromReadBlock 0011                       _keyID 005D  
                     pclath 000A                       status 0003                       wtemp0 007E  
           ___lbdiv@divisor 0072             ___lbdiv@counter 0074        __size_of_delay_x10ms 0010  
          ??_eepromReadByte 0072            _eepromWriteBlock 03E6                __end_of_main 028E  
                    ??_main 0052            eepromReadBlock@i 0078                      ?_beep2 0075  
                    _EECON1 009C    __size_of_eepromWriteByte 0023                      i1l3451 0425  
                    i1l4711 0000                      i1l4705 0000                      _INTCON 000B  
                    _OSCCON 008F                      _TMR1IE 0460                      _TMR1IF 0060  
                    _TMR2IE 0461                      _TMR2IF 0061                      _OPTION 0081  
                    _TMR1ON 0080                ?_SET_EPWM_ON 0070            __end_of_get_RFID 0141  
          __end_of_id_clear 032D          get_RFID@timeOutVal 004F                      ___bmul 045A  
                 ??___lbdiv 0073                      _comArr 032D                      _buzFre 007B  
          __end_of_int_init 040A            __end_of_setState 0473                __pdataCOMMON 007B  
                    saved_w 007E            __end_of_timerOut 030D         eepromReadBlock@buff 0074  
          ___lbdiv@dividend 0073            __end_of_sys_init 047D           ??_eepromReadBlock 0076  
       ___bmul@multiplicand 0072              __pcstackCOMMON 0070                __pidataBANK0 034C  
             __end_of_beep2 03E6            ___lbdiv@quotient 0075          __size_of_id_search 001A  
                   ??_beep2 0076                  __pbssBANK0 0058          __size_of_gpio_init 000F  
         ??_eepromWriteByte 0073                  __pmaintext 0158                     ?___bmul 0072  
                   ?_comArr 0072                  __pintentry 0004                  _id_replate 028E  
                   _EPWMR1L 0013                   ?_get_RFID 0070                   ?_id_clear 0043  
                   _PWM1CON 0016    __end_of_eepromWriteBlock 03F8                     _PSTRCON 019D  
                   _STRSYNC 0CEC                   ?_int_init 0070    get_RFID@RF_serial_55bits 003E  
         __end_of_id_search 039F                 setState@stt 0074        __size_of_SET_EPWM_ON 0018  
                 ?_setState 0072                   ?_timerOut 0072             __size_of___bmul 000E  
                   ___lbdiv 036A             __size_of_comArr 001F                     _buffTag 0025  
         __end_of_gpio_init 045A                   ?_sys_init 0070                __size_of_ISR 0011  
                   _mtState 005C                     comArr@i 0079                  ??_get_RFID 0077  
                ??_id_clear 007B                     _timeOut 0058                  comArr@arr1 0078  
                comArr@arr2 0072                  comArr@len1 0073                  comArr@len2 0074  
                   main@tmp 0056        end_of_initialization 03B5               ??_delay_x10ms 0072  
                   init_ram 0440                  get_RFID@ii 0051                  ??_int_init 0072  
                ??_setState 0074         eepromWriteBlock@len 0077                  ??_timerOut 0074  
     get_RFID@flag_RFID_syn 0049                  id_search@i 0040                  _timer_init 047D  
               ?_id_replate 003E                  ??_sys_init 0072             _eepromReadBlock 040A  
       __end_of_delay_x10ms 043C              __end_of___bmul 0468              __end_of_comArr 034C  
             __pidataCOMMON 0000     __size_of_eepromReadByte 0009        eepromReadByte@EEAddr 0072  
       start_initialization 039F                 __end_of_ISR 042C             _eepromWriteByte 02C9  
             setState@_tOut 0072  eepromReadByte@ReEepromData 0073         __size_of_id_replate 0034  
                  ??___bmul 0073                    ??_comArr 0075                 __pdataBANK0 0020  
   __end_of_eepromReadBlock 041B                 ?_timer_init 0070          eepromReadBlock@len 0075  
             __pcstackBANK0 003E               id_clear@idMax 0043               id_clear@idMin 0049  
         ?_eepromWriteBlock 0076           __size_of_get_RFID 0136           __size_of_id_clear 0020  
        ??_eepromWriteBlock 0078                 _delay_x10ms 042C           __size_of_int_init 0012  
                  ?___lbdiv 0072           __size_of_setState 000B                   __ptext730 03E6  
                 __ptext731 0385                   __ptext740 03B7                   __ptext732 042C  
                 __ptext741 02EC                   __ptext733 000B                   __ptext742 032D  
                 __ptext734 02C9                   __ptext743 0487                   __ptext735 040A  
                 __ptext727 030D                   __ptext744 03F8                   __ptext736 0473  
                 __ptext728 028E                   __ptext745 047D                   __ptext737 036A  
                 __ptext729 03CF                   __ptext746 044B                   __ptext738 045A  
                 __ptext747 041B                   __ptext739 0468                   __ptext748 0000  
                 _id_search 0385           __size_of_timerOut 0021                   __pswtext1 0490  
   __end_of_eepromWriteByte 02EC           __size_of_sys_init 000A                   _gpio_init 044B  
            __size_of_beep2 0017                    _EPWM1CON 0015                    _EPWM1AUX 0090  
         interrupt_function 0004               ??_SET_EPWM_ON 0072         __size_of_timer_init 000A  
                 get_RFID@i 004D                   get_RFID@j 004C                  ?_id_search 007A  
              delay_x10ms@t 0074            timerOut@CurTimer 0075              _eepromReadByte 0487  
          ?_eepromReadBlock 0074                ??_id_replate 0040                  ?_gpio_init 0070  
        __end_of_id_replate 02C2                   init_fetch 043C         __end_of_SET_EPWM_ON 03CF  
            id_replate@Cont 003E      __end_of_eepromReadByte 0490                id_clear@F962 0020  
          __size_of___lbdiv 001B              id_replate@buff 003F           id_search@id_input 003F  
          ?_eepromWriteByte 0072     eepromReadBlock@addStart 0077                    beep2@sel 0076  
                  beep2@rep 0075                    _get_RFID 000B                    _id_clear 030D  
             __size_of_main 0136                    _int_init 03F8               id_search@buff 007A  
                  _setState 0468           eepromWriteBlock@i 007A                    _timeTick 005A  
                  _timerOut 02EC                 ??_id_search 003E             ?_eepromReadByte 0070  
                  main@idop 0057                ??_timer_init 0072                    _sys_init 0473  
  eepromWriteBlock@addStart 0079                 ??_gpio_init 0072                 id_clear@tmp 0044  
                  intlevel1 0000                ?_delay_x10ms 0070                 _SET_EPWM_ON 03B7  
        __end_of_timer_init 0487        eepromWriteBlock@buff 0076   __size_of_eepromWriteBlock 0012  
     eepromWriteByte@EEAddr 0075       eepromWriteByte@EEData 0072      get_RFID@flag_RFID_last 004E  
              id_replate@id 0042               timerOut@Logic 0074                timerOut@time 0072  
